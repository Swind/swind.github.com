{
  "pages": [
    {
      "text": "\u5b78\u7fd2\u7528 Python \u5beb\u6e2c\u8a66\u5de5\u5177\u5feb\u5169\u500b\u661f\u671f\u4e86\uff0c\u4e3b\u8981\u4f7f\u7528 clime + ucltip \u8ddf pyinstaller\u3002\n\u53ef\u662f\u76ee\u524d\u9047\u5230\u4e00\u500b\u554f\u984c\uff0c\u7576\u6211\u4f7f\u7528 pyinstaller \u5c07\u6e2c\u8a66\u5de5\u5177\u6253\u5305\u4e4b\u5f8c\uff0c\n\u4ed6\u6703\u5f88\u8cbc\u5fc3\u7684\u5e6b\u4f60\u5c07\u6240\u6709 .py \u6a94\u5305\u88dd\u6210\u4e00\u500b\u53ef\u57f7\u884c\u6a94\u3002\n\u6240\u4ee5\u7576\u6211\u8981\u4efb\u4f55\u65b0\u589e command \u90fd\u5fc5\u9808\u8981\u91cd\u65b0\u90e8\u5c6c\u90a3\u500b\u57f7\u884c\u6a94\uff0c\u9019\u6a23\u5be6\u5728\u975e\u5e38\u7684\u9ebb\u7169\u3002\n\u56e0\u6b64\u624d\u6703\u958b\u59cb\u5617\u8a66\u662f\u5426\u6709\u53ef\u80fd\u57f7\u884c\u6a94\u53ea\u5305\u88dd clime, ucltip \u4ee5\u53ca\u6211\u81ea\u5df1\u6240\u63d0\u4f9b\u7684 API\uff0c\n\u7136\u5f8c command \u7684\u90e8\u4efd\u5c31\u5229\u7528 plugin \u7684\u65b9\u5f0f\u4f86\u589e\u52a0\u3002\n\n\n\u8cc7\u6599\u593e\u7d50\u69cb\n\u5206\u6210\u5169\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u653e\u5171\u7528 package \u7684 \"site-packages\"\uff0c\u53e6\u5916\u4e00\u500b\u5c31\u662f\u653e plugin \u7684 \"plugins\"\u3002\nContent:\n\n|\n----site-packages\n    |----ucltip\n        |----__init__.py\n----plugins\n    |----cli\n        |----hello.py\n----plugin_loader.py\n\n\u6211\u653e\u4e86\u4e00\u500b ucltip packages \u5728\u88e1\u9762\uff0c\u9019\u662f\u70ba\u4e86\u8981\u9806\u4fbf\u6e2c\u8a66\u662f\u5426\u80fd\u9806\u5229 import packages \u6240\u653e\u7684\u3002\n\n\n\u8f09\u5165 Plugin\n\u9996\u5148\u8981\u8b93 Python \u53ef\u4ee5\u6b63\u78ba\u7684\u8f09\u5165 site-packages \u6240\u4ee5\u9700\u8981\n\nsys.path.append(\"./site-packages\")\n\n\u9019\u6a23 import \u7684\u6642\u5019\u624d\u6703\u53bb\u6211\u5011\u7684\u8cc7\u6599\u593e\u5e95\u4e0b\u627e packages\u3002\n\u63a5\u8457\u8a2d\u5b9a\u5168\u57df\u7684\u74b0\u5883\u8b8a\u6578\n\nplugins_root       = \"plugins\"\ncmd_obj = sys.modules['__main__']\n\n\u56e0\u70ba clime \u9810\u8a2d\u662f\u53bb main \u9019\u500b modules \u641c\u5c0b\u9700\u8981\u8f49\u63db\u6210 command \u7684 function\uff0c\n\u6240\u4ee5\u6211\u9700\u8981\u5c07\u5f9e plugins \u8f09\u5165\u7684 module \u7684 command function \u52a0\u5165 main object\uff0c\n\u7576\u7136 clime \u6709\u4e00\u500b obj \u7684\u53c3\u6578\uff0c\u6240\u4ee5\u66f4\u597d\u7684\u4f5c\u6cd5\u61c9\u8a72\u662f\u5efa\u7acb\u4e00\u500b command obj\u3002\n\u63a5\u8457\u6211\u5011\u5c31\u53ef\u4ee5\u8f09\u5165 hello.py \u88e1\u9762\u7684 command function\u3002\n\ndef __import_plugin_cmd(module_name, plugin_name):\n\n    module_path = join(plugins_root, module_name)\n    plugin_path = join(plugins_root, module_name, plugin_name + '.py')\n\n    #Load plugin module\n    cli_print(\"Loading plugin %s\", plugin_path)\n    plugin_module = load_module(module_name, *find_module(plugin_name, [module_path]))\n\n    #Get the command method and set it to command object\n    methods = dir(plugin_module)\n    for method in methods:\n        if method.endswith(\"cmd\"):\n            cli_print(\"Set command %s\", method)\n            method_obj = getattr(plugin_module, method)\n            setattr(cmd_obj, method, method_obj)\n\n    return plugin_module\n\n\u9996\u5148 module_name \u5c31\u662f plugin \u5e95\u4e0b\u7684\u8cc7\u6599\u593e\u540d\u7a31\uff0c\u5728\u9019\u908a\u6211\u6703\u8f38\u5165 \"cli\"\u3002\nplugin_name \u662f\u8981\u8f09\u5165\u7684 python \u6a94\u6848\u540d\u7a31\uff0c\u5728\u9019\u88e1\u70ba \"hello\"\u3002\n\u4e4b\u5f8c\u5c31\u900f\u904e find_module \u627e\u5230 module \u7684\u8cc7\u8a0a\uff0c\u53ef\u4ee5\u53c3\u8003 Python \u7684 imp \u6587\u4ef6\u7684\u7bc4\u4f8b\uff0c\n\u518d\u900f\u904e load_module \u8f09\u5165\u3002\n\nplugin_module = load_module(module_name, *find_module(plugin_name, [module_path]))\n\n\u6700\u5f8c\u627e\u5c0b\u6240\u6709 cmd \u7d50\u5c3e\u7684 function\uff0c\u900f\u904e setattr \u52a0\u5165 cmd_obj\n\n#Get the command method and set it to command object\nmethods = dir(plugin_module)\nfor method in methods:\n    if method.endswith(\"cmd\"):\n        cli_print(\"Set command %s\", method)\n        method_obj = getattr(plugin_module, method)\n        setattr(cmd_obj, method, method_obj)\n\n\u4e4b\u5f8c\u4f7f\u7528 clime \u7684\n\nimport clime\nclime.start(white_pattern=clime.CMD_SUFFIX, debug=True)\n\n\u5c31\u53ef\u4ee5\u5c07 cmd_obj \u4ee5 cmd \u7d50\u5c3e\u7684 function \u8f49\u6210 command \u4e86\u3002\n\u4e0b\u9762\u9644\u4e0a\u5b8c\u6574\u7684\u7a0b\u5f0f\u78bc\n\nfrom random import randint\nimport ucltip\n\ndef hello_world_cmd(name):\n    \"\"\"Execute remote performance test.\n\n    -n=<str> --name=<str>       Hello Name\n    \"\"\"\n    print \"hello world cmd %s\" % name\n    print \"Test import random %d\" % randint(0, 51)\n\ndef test_site_packages_cmd():\n    echo = ucltip.Cmd(\"echo\")\n    print echo(\"Hello World ucltip\")", 
      "tags": "python", 
      "loc": "/posts/simple-python-plugin-framework.html", 
      "title": "\u7c21\u55ae\u6613\u61c2\u7684 Python Plugin \u67b6\u69cb (\u5927\u6982 ...)"
    }, 
    {
      "text": "\u6700\u8fd1\u56e0\u70ba\u5de5\u4f5c\u7684\u9700\u8981\uff0c\u6240\u4ee5\u8981\u64b0\u5beb\u5f88\u591a SCSI \u76f8\u95dc\u7684\u6e2c\u8a66\u3002\n\u76ee\u524d\u53ef\u4ee5\u7528\u7684\u6e2c\u8a66\u5de5\u5177\u6709 fio, iometer \u4ee5\u53ca\u4e00\u500b\u81ea\u884c\u958b\u767c\u7684 SCSI Command \u9a57\u8b49\u7684\u5de5\u5177\u3002\n\u4f46\u662f\u9019\u4e9b\u90fd\u662f\u4f7f\u7528 C \u64b0\u5beb\u7684\uff0c\u6240\u4ee5\u8981\u64b0\u5beb\u4e00\u4e9b\u6d41\u7a0b\u6bd4\u8f03\u8907\u96dc\u7684\u9a57\u8b49\u6642\uff0c\u5c31\u8b8a\u5f97\u975e\u5e38\u7684\u9ebb\u7169\u3002\n\u7d55\u5c0d\u4e0d\u662f\u56e0\u70ba\u6211\u60f3\u8a66\u8a66\u770b Python \u6216\u8005\u662f\u56e0\u70ba\u81ea\u884c\u958b\u767c\u7684\u9a57\u8b49\u5de5\u5177\u7a0b\u5f0f\u78bc\u5df2\u7d93\u7121\u6cd5\u95b1\u8b80\u7684\u539f\u56e0\uff0c\u624d\u60f3\u8981\u91cd\u9020\u8f2a\u5b50\u3002\nOrz \u800c\u4e14\u6211\u53d7\u5920\u4e86\u624b\u52d5\u6e2c\u8a66\u7684\u751f\u6d3b\u4e86 ...\n\u6240\u4ee5\u60f3\u5c07\u6e2c\u8a66\u904b\u884c\u7684\u908f\u8f2f\u642c\u79fb\u5230 Python \u7684\u90e8\u4efd\uff0c\u52a0\u901f\u6e2c\u8a66\u6848\u4f8b\u7684\u958b\u767c\u901f\u5ea6\u3002\n\n\n\u4f7f\u7528 C \u767c\u9001 SCSI Command\n\u9019\u908a\u7b2c\u4e00\u90e8\u5c31\u662f\u8981\u5148\u60f3\u8fa6\u6cd5\u8b93 SCSI Command \u53ef\u4ee5\u9001\u5230 SCSI Device \u4e0a\u9762\u3002\n\u4e00\u822c\u90fd\u662f\u900f\u904e ioctl \u5728\u9032\u884c\uff0c\u6700\u65e9\u4e5f\u6709\u60f3\u904e\u4f7f\u7528 Python \u7684 ioctl \u4f86\u4f5c\u3002\n\u4f46\u662f ioctl \u7684\u8cc7\u6599\u7d50\u69cb\u5168\u90e8\u90fd\u5b9a\u7fa9\u5728 .h \u6a94\u88e1\u9762\uff0c\u5982\u679c\u4f7f\u7528 Python \u6211\u5c31\u52e2\u5fc5\u8981\u5c07\u9019\u4e9b\u8cc7\u6599\u7d50\u69cb\u4f5c\u8f49\u63db\u3002\n\u6240\u4ee5\u6211\u6700\u5f8c\u9078\u64c7\u7b2c\u4e8c\u689d\u8def\uff0c\u8b93 Python \u547c\u53eb C function\u3002\n\n#include <inttypes.h>\n#include <unistd.h>\n#include <fcntl.h>\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n#include <sys/ioctl.h>\n#include <scsi/sg.h> /* take care: fetches glibc's /usr/include/scsi/sg.h */\n\n\nint execute_scsi_command(\n        int fd,\n        int cmd_size,   uint8_t* cmd_buffer,\n        int out_size,   uint8_t* out_buffer,\n        int sense_size, uint8_t* sense_buffer)\n{\n    sg_io_hdr_t io_hdr;\n\n    //Prepare SCSI Command\n    memset(&io_hdr, 0, sizeof(sg_io_hdr_t));\n\n    io_hdr.interface_id = 'S'; //required\n\n    io_hdr.cmd_len = cmd_size;\n    io_hdr.mx_sb_len = sense_size;\n\n    /*\n     *  SG_DXFER_NONE   -   SCSI Test Unit Ready command\n     *  SG_DXFER_TO_DEV -   SCSI WRITE command\n     *  SG_DXFER_FROM_DEV - SCSI READ command\n     */\n    io_hdr.dxfer_direction = SG_DXFER_FROM_DEV;\n    io_hdr.dxfer_len       = out_size;\n    io_hdr.dxferp          = out_buffer;\n\n    io_hdr.cmdp = cmd_buffer;\n    io_hdr.sbp  = sense_buffer;\n    io_hdr.timeout = 20000; // 20000 millisecs = 20 seconds\n    /* io_hdr.flags = 0; */     /* take defaults: indirect IO, etc */\n    /* io_hdr.pack_id = 0; */\n    /* io_hdr.usr_ptr = NULL; */\n\n    if (ioctl(fd, SG_IO, &io_hdr) < 0) {\n        perror(\"sg_simple0: Inquiry SG_IO ioctl error\");\n        return 0;\n    }\n\n    return io_hdr.resid;\n}\n\n\u9019\u4efd\u7a0b\u5f0f\u78bc\u662f\u5f9e The Linux SCSI Generic (sg) HOWTO \u7684 Program Example \u6539\u904e\u4f86\u7684\uff0c\n\u900f\u904e SG_IO \u9019\u500b ioctl \u5c07 CDB\u3001Data Buffer \u8207 Sense Buffer \u50b3\u5165\uff0c\u7b49\u57f7\u884c\u5b8c\u7562\u4e4b\u5f8c\u6211\u5011\u5c31\u53ef\u4ee5\u5f9e\u9019\u4e9b Buffer \u53d6\u5f97 SCSI Command \u7d50\u679c\u3002\n\u63a5\u8457\u5c31\u662f\u7de8\u8b6f\u4e00\u500b shared library\n\nCFLAG = -shared -fPIC -Wall\nLIB_NAME = linux_ioctl.so\n\nall:make_lib\n\nmake_lib:linux_ioctl.c\n        $(CC) -o $(LIB_NAME) $(CFLAG) linux_ioctl.c\n\nclean:\n        rm -f *.so\n\n\u7136\u5f8c\u5c31\u53ea\u8981\u8f38\u5165\n\nmake\n\u5c31\u6703\u5f97\u5230\u4e00\u500b linux_ioctl.so \u7684 shared library \u4e86\u3002\n\n\n\u4f7f\u7528 Python \u547c\u53eb C function\n\u9019\u90e8\u4efd\u5c31\u662f\u6211\u5b8c\u5168\u4e0d\u719f\u7684\u5730\u65b9\u4e86\uff0c\u56e0\u70ba Python \u6211\u4e5f\u5f88\u5c11\u7528\uff0c\n\u6240\u4ee5 Python \u8a9e\u6cd5\u975e\u5e38\u751f\u6f80\u3002\n\u4e0d\u904e\u4e3b\u8981\u662f\u900f\u904e ctypes \u4f86\u50b3\u9001 CDB\u3001buffer pointer \u5230 C function \u4e2d\u3002\n\nfrom ctypes import *\n\ndef hexdump(src, length, column_length=8):\n    result = []\n    digits = 4 if isinstance(src, unicode) else 2\n    for i in xrange(0, length, column_length):\n       s = src[i:i+column_length]\n       hexa = b' '.join([\"%0*X\" % (digits, x)  for x in s])\n       text = b''.join([chr(x) if 0x20 <= x < 0x7F else b'.'  for x in s])\n       result.append( b\"%04X   %-*s   %s\" % (i, column_length*(digits + 1), hexa , text) )\n    return b'\\n'.join(result)\n\ndyn = CDLL(\"./linux_ioctl.so\")\n\nfo = open(\"/dev/sda\", \"r\")\nfid = fo.fileno()\n\nCDB = c_byte * 6\nCDB_array = CDB()\n\nCDB_array[0] = 0x12\nCDB_array[1] = 0x00\nCDB_array[2] = 0x00\nCDB_array[3] = 0x00\nCDB_array[4] = 96\nCDB_array[5] = 0x00\n\nCDB_p = pointer(CDB_array)\n\nSENSE = c_byte * 36\nSENSE_array = SENSE()\n\nDATA = c_byte * 96\nDATA_array = DATA()\nDATA_p = pointer(DATA_array)\n\nSENSE_p = pointer(SENSE_array)\n\nresid = dyn.execute_scsi_command(fid, 6, CDB_p, 96, DATA_p, 36, SENSE_p)\n\nprint hexdump(DATA_array, 96 - resid)\n\nfo.close()\n\n\u900f\u904e CDLL \u5c07\u525b\u525b\u7de8\u8b6f\u597d\u7684 shared library \u8f09\u5165, c_byte \u7684\u578b\u614b\u5efa\u7acb binary array ( \u9019\u90e8\u4efd\u6211\u89ba\u5f97\u61c9\u8a72\u6709\u66f4\u597d\u7684\u65b9\u5f0f\u53ef\u4ee5\u8655\u7406 )\uff0c\n\u5426\u5247\u6bcf\u6b21\u8981\u5efa\u7acb binary array \u5c31\u90fd\u5f97\u900f\u904e c_bytes * length \u5ba3\u544a array \u578b\u614b\uff0c\u7136\u5f8c\u5728\u7528\u9019\u500b\u578b\u614b\u53bb\u5efa\u7acb binary array\uff0c\n\u518d\u900f\u904e pointer \u53d6\u5f97 address\u3002\n\u6211\u5728\u9019\u90e8\u4efd\u7684\u7406\u89e3\u4e00\u5b9a\u662f\u6709\u554f\u984c\u7684\uff0c\u4e0d\u7136\u9019\u6a23\u7684\u4f5c\u6cd5\u5be6\u5728\u5f88\u5947\u602a\u3002\n\u4f46\u662f\u7121\u8ad6\u5982\u4f55\uff0c\u4ed6\u53ef\u4ee5\u52d5 ............\n\u5f8c\u9762\u7684\n\nCDB_array[0] = 0x12\nCDB_array[1] = 0x00\nCDB_array[2] = 0x00\nCDB_array[3] = 0x00\nCDB_array[4] = 96\nCDB_array[5] = 0x00\n\n\u5c31\u662f\u4e00\u500b\u6a19\u6e96\u7684 INQUIRY Command \u7136\u5f8c\u5e0c\u671b\u7684\u9577\u5ea6\u662f 96 bytes\uff0c\n\u6240\u4ee5\u9019\u500b\u7a0b\u5f0f\u4f60\u53ef\u4ee5\u5b89\u5fc3\u6e2c\u8a66\uff0c\u57fa\u672c\u4e0a\u61c9\u8a72\u662f\u4e0d\u6703\u628a\u786c\u789f\u5f04\u70b8\u6389\u3002", 
      "tags": "Python,C/C++", 
      "loc": "/posts/send-scsi-command-from-python-on-linux.html", 
      "title": "\u4f7f\u7528 Python \u7d50\u5408 C \u5728 Linux \u767c\u9001 SCSI Command"
    }, 
    {
      "text": "\u6700\u8fd1\u56e0\u70ba\u5fc5\u9808\u8981\u793a\u7bc4\u5982\u4f55\u5c07\u516c\u53f8\u7684 autoconf \u8207 automake \u8f49\u6210 CMake\uff0c\u6240\u4ee5\u7a0d\u5fae\u7814\u7a76\u4e86\u4e00\u4e0b\u4e4b\u524d\u5b8c\u5168\u6c92\u6709\u7528\u904e\u5f97 add_custom_command \u8ddf add_custom_target\n\n\u5efa\u7acb symbolic link\n\u76ee\u524d\u6709\u4e00\u500b\u9700\u6c42\u662f\u8981\u5efa\u7acb symbolic link \u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u8cc7\u6599\u593e\u88e1\u9762\u3002\n\u7531\u65bc autotools \u662f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 script \u7684\u8a9e\u6cd5\uff0c\u6240\u4ee5\u5efa\u7acb\u8d77\u4f86\u975e\u5e38\u7c21\u55ae\u3002\n\ninstall-exec-hook:\n     ln -fs $(source_prefix)/a $(target_prefix)/path1\n     ln -fs $(source_prefix)/a $(target_prefix)/path2\n     ln -fs $(source_prefix)/a $(target_prefix)/path3\n     ln -fs $(source_prefix)/a $(target_prefix)/path4\n     ln -fs $(source_prefix)/a $(target_prefix)/path5\n\n\u9019\u6a23\u53ea\u8981\u76f4\u63a5\u547c\u53eb make install-exec-hook \u5c31\u53ef\u4ee5\u5efa\u7acb symbolic link \u4e86\u3002\n\u4f46\u662f\u5982\u679c\u8981\u5728 CMake \u88e1\u9762\u4f5c\u5230\u4e00\u6a23\u7684\u4e8b\u60c5\u8981\u600e\u9ebc\u8655\u7406\u5462\uff1f\n\nSet(targets\n    ${target_prefix}/path1\n    ${target_prefix}/path2\n    ${target_prefix}/path3\n    ${target_prefix}/path4\n    ${target_prefix}/path5\n)\n\nFunction(Create_symbolic_link source target)\n    Add_custom_command(\n        OUTPUT ${target}\n        COMMAND ln -fs ${source} ${target}\n    )\nEndfunction()\n\nForeach(target targets)\n   Create_symbolic_link(${source_prefix}/a ${target})\nEndforeach()\n\nAdd_custom_target(install-exec-hook DEPENDS ${targets})\n\n\u56e0\u70ba CMake \u88e1\u9762\u6c92\u6709\u8fa6\u6cd5\u50cf shell script \u4e00\u6a23\u76f4\u63a5\u4e0b\u6307\u4ee4\uff0c\u5fc5\u9808\u900f\u904e Add_custom_command \u6216\u8005\u662f Execute_process \u7b49\u65b9\u5f0f\u57f7\u884c\u3002\n\u4f46\u662f\u82e5\u53c8\u8981\u8ddf Target \u5efa\u7acb\u76f8\u4f9d\u6027\u7684\u8a71\uff0c\u4f3c\u4e4e\u5c31\u4e00\u5b9a\u5f97\u9760 Add_custom_command\uff0c\u56e0\u70ba\u4ed6\u6703\u8a2d\u5b9a\u4e00\u500b output file\u3002\n\u9019\u6a23\u5c31\u53ef\u4ee5\u8b93 Target \u4f9d\u8cf4\u9019\u500b\u6a94\u6848 ( \u4ee5\u6211\u5011\u7684\u4f8b\u5b50\u4f86\u8aaa Target \u5c31\u662f install-exec-hook ) \u4f86\u9054\u5230 make Target \u5c31\u53ef\u4ee5\u5efa\u7acb symbolic link \u7684\u76ee\u7684\u3002\n\u9583\u6b7b\u4eba\u4e0d\u511f\u547d\u7684\u7d44\u5408 ...\n\n\n\n\u661f\u305f\u3061\u3088\n\u6c5d\u306e\u547d\u77ed\u304d\u7737\u65cf\u306e\u671b\u307f\u3092\u805e\u304f\u304c\u3088\u3044\u3002\n\u6211\u3089\u306e\u671b\u307f\u30fd\n\u305d\u308c\u306f\n\u6c5d\u306e\u672c\u964d\u3061\u3086\u304f\u3092\u770b\u53d6\u308b\u3053\u3068", 
      "tags": "CMake,C/C++", 
      "loc": "/posts/cmake-add_custom_command.html", 
      "title": "CMake - add_custom_command"
    }, 
    {
      "text": "\u6700\u8fd1\u88ab\u4e1f\u5230 FreeBSD \u8ddf C \u7684\u4e16\u754c\u88e1\u9762\uff0c\u6c92\u6709 Scala \u7684 Actor \u53ef\u4ee5\u7528\u3002\n\u6240\u4ee5\u53ea\u597d\u53c3\u8003\u5225\u4eba\u7684 Thread Pool \u4f86\u770b\u4e00\u4e0b\uff0c\u5728 C \u7684\u4e16\u754c\u88e1\u9762 Thread Pool \u662f\u600e\u9ebc\u5be6\u4f5c\u7684\u3002\n\u9996\u5148\u5148\u53bb StackOverFlow \u4e2d\u5c0b\u627e\u662f\u5426\u6709\u4eba\u554f\u904e\u985e\u4f3c\u7684\u554f\u984c\nExisting threadpool C implementation\n\u88e1\u9762\u6709\u63d0\u5230\u5e7e\u500b C Thread Pool \u7684\u5be6\u4f5c\u7bc4\u4f8b\u8207\u53ef\u53c3\u8003\u7684\u6587\u4ef6\nthreadpool-mbrossard\nthreadpool-jmatthew\ncthreadpool\nC-Thread-Pool\n\u6211\u9019\u908a\u662f\u76f4\u63a5\u61c9\u8a72\u662f\u6703\u4ee5 threadpool-mbrossard \u4f5c\u70ba\u7b2c\u4e00\u500b\u7814\u7a76\u7684\u7248\u672c\uff0c\u56e0\u70ba\u4ed6\u4e00\u76f4\u6709\u5728\u7dad\u8b77\u3002\n\u800c\u4e14\u4f5c\u8005\u5c31\u662f Existing threadpool C implementation \u7684\u767c\u6587\u8005\uff0c\u611f\u89ba\u4ed6\u9084\u883b\u71b1\u5fc3\u7684\u3002\n\nthreadpool\nA simple C thread pool implementation\nCurrently, the implementation:\nWorks with pthreads only, but API is intentionally opaque to allow\nother implementations (Windows for instance).\nStarts all threads on creation of the thread pool.\nReserves one task for signaling the queue is full.\nStops and joins all worker threads on destroy.\n\n\nhttp://upload.wikimedia.org/wikipedia/commons/0/0c/Thread_pool.svg\n\nfrom wikipedia\n\n\nThread Pool \u7684\u8cc7\u6599\u7d50\u69cb\n\u9996\u5148 Thread Pool \u8981\u6709\u7684\u6771\u897f\u5c31\u662f job \u6216\u8005\u662f task \u8b93 Thread \u77e5\u9053\u4ed6\u5011\u8981\u505a\u4ec0\u9ebc\u4e8b\u60c5\u3002\n\ntypedef struct {\n    void (*function)(void *);\n    void *argument;\n} threadpool_task_t;\n\n\u6240\u4ee5\u53ea\u8981\u6709\u4e00\u500b\u8cc7\u6599\u7d50\u69cb\u7d00\u9304\u8981\u57f7\u884c\u7684 function pointer \u8207\u8981\u50b3\u905e\u7684\u53c3\u6578\u5373\u53ef\u3002\n\u63a5\u4e0b\u4f86\u5c31\u662f Thread Pool \u672c\u8eab\uff0c\u4ed6\u5fc5\u9808\u5b58\u653e\u6240\u6709\u7684 Thread \u8207 Job Queue\n\nstruct threadpool_t {\n    pthread_mutex_t lock;\n    pthread_cond_t notify;\n    pthread_t *threads;\n    threadpool_task_t *queue;\n    int thread_count;\n    int queue_size;\n    int head;\n    int tail;\n    int count;\n    int shutdown;\n    int started;\n};\n\n\u9019\u908a\u4ed6\u4f7f\u7528\u4e86\u4e00\u500b pthread_t \u7684 pointer \u4f86\u7d00\u9304\u6240\u6709\u7684 Thread\uff0c\u7c21\u55ae\u4f86\u8aaa\u5c31\u662f\u4e00\u500b pthread_t \u7684 array\uff0c\u800c head, tail \u5c31\u662f\u7d00\u9304 array \u7684 offset\u3002\nthreadpool_task_t \u4e5f\u662f\u4e00\u6a23\u7684\u539f\u7406\uff0c\u771f\u662f\u51fa\u4e4e\u610f\u6599\u7684\u7c21\u55ae\u3002\n\n\nThreadPool \u7684\u5efa\u7acb\u8207\u5de5\u4f5c\u7684\u57f7\u884c\n\u518d\u4f86\u5c31\u662f Thread Pool \u7684\u5efa\u7acb\uff0c\u7531\u65bc\u525b\u525b\u63d0\u5230\u7684\u4ed6\u5176\u5be6\u662f\u4f7f\u7528\u4e00\u500b pthread array \u8207\u4e00\u500b job array \u4f86\u5b58\u653e\u6240\u6709\u7684 thread \u8207 jobs\u3002\n\u56e0\u6b64\u9700\u8981\u5728\u4e00\u958b\u59cb\u7684\u6642\u5019\u5c31\u6c7a\u5b9a Thread Pool \u8207 Jobs \u7684\u6700\u5927\u6578\u91cf\u3002\n\n/* Allocate thread and task queue */\npool->threads = (pthread_t *) malloc(sizeof(pthread_t) * thread_count);\npool->queue = (threadpool_task_t *) malloc(sizeof(threadpool_task_t) * queue_size);\n\n\u800c\u6bcf\u500b Thread \u8981\u57f7\u884c\u7684 Function \u662f\n\nstatic void *threadpool_thread(void *threadpool)\n {\n     threadpool_t *pool = (threadpool_t *)threadpool;\n     threadpool_task_t task;\n\n     for(;;) {\n         /* Lock must be taken to wait on conditional variable */\n         pthread_mutex_lock(&(pool->lock));\n\n         /* Wait on condition variable, check for spurious wakeups.\n            When returning from pthread_cond_wait(), we own the lock. */\n         while((pool->count == 0) && (!pool->shutdown)) {\n             pthread_cond_wait(&(pool->notify), &(pool->lock));\n         }\n\n         if((pool->shutdown == immediate_shutdown) ||\n            ((pool->shutdown == graceful_shutdown) &&\n             (pool->count == 0))) {\n             break;\n         }\n\n         /* Grab our task */\n         task.function = pool->queue[pool->head].function;\n         task.argument = pool->queue[pool->head].argument;\n         pool->head += 1;\n         pool->head = (pool->head == pool->queue_size) ? 0 : pool->head;\n         pool->count -= 1;\n\n         /* Unlock */\n         pthread_mutex_unlock(&(pool->lock));\n\n         /* Get to work */\n         (*(task.function))(task.argument);\n     }\n\n     pool->started--;\n\n     pthread_mutex_unlock(&(pool->lock));\n     pthread_exit(NULL);\n     return(NULL);\n }\n\n\u5728 for(;;) \u88e1\u9762\uff0cThread \u7b2c\u4e00\u4ef6\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u53bb\u6436\u596a pool \u7684 lock\uff0c\u7576\u6436\u5230 lock \u7684 Thread \u767c\u73fe\u6c92\u6709\u5de5\u4f5c\u53ef\u4ee5\u505a\u7684\u6642\u5019\uff0c\n\u5c31\u6703\u57f7\u884c pthread_cond_wait \u4f86\u7b49\u5f85\u901a\u77e5\u3002\u9019\u6642\u5019 pool->lock \u6703\u88ab Unlock\uff0c\u56e0\u6b64\u9019\u6642\u5019\u5176\u4ed6 Thread \u4e5f\u53ef\u4ee5\u9032\u4f86\u9019\u500b\u5340\u57df\u3002\n\u6240\u4ee5\u5728\u5b8c\u5168\u6c92\u6709\u5de5\u4f5c\u7684\u60c5\u6cc1\u4e0b\uff0c\u6240\u6709\u7684 Thread \u90fd\u6703\u5728\u9019\u908a Waiting\u3002\n\u7576 Thread \u88ab\u900f\u904e pthread_cond_signal \u559a\u9192\u7684\u6642\u5019\uff0c\u8a72 Thread \u5c31\u6703\u91cd\u65b0\u53d6\u5f97 pool->lock\u3002\n\u9019\u6642\u4ed6\u5c31\u53ef\u4ee5\u5b89\u5fc3\u7684\u53d6\u51fa queue \u4e2d\u7684 task\uff0c\u7b49\u5f85\u53d6\u51fa\u5b8c\u7562\u4e4b\u5f8c\uff0c\u518d unlock \u8b93\u5176\u4ed6\u88ab\u559a\u9192\u7684 Thread \u4e5f\u53ef\u4ee5\u53bb\u53d6\u5f97 Task\u3002\n\u4e4b\u5f8c\u5c31\u662f\u57f7\u884c task \u4e2d\u7684 function pointer \u505a\u8a72\u505a\u7684\u5de5\u4f5c\u3002\n\n\nThreadPool \u7684 destory\ndestory \u5c31\u66f4\u7c21\u55ae\u4e86\uff0c\u53ea\u8981\u4f7f\u7528 pthread_cond_broadcast \u901a\u77e5\u6240\u6709\u7684 Thread \u8d77\u4f86\uff0c\u7531\u65bc shoutdown \u7684\u78ba\u8a8d\u6703\u5728\u57f7\u884c\u5de5\u4f5c\u4e4b\u524d\u3002\n\u6240\u4ee5\u8a72 thread \u5c31\u6703\u96e2\u958b\u57f7\u884c\u5de5\u4f5c\u7684\u8ff4\u5708\uff0c\u4e26\u4e14\u7d50\u675f\u3002\nmbrossard \u5b8c\u6574\u7684 ThreadPool \u539f\u59cb\u78bc\n\u5176\u5be6\u5beb\u9019\u7bc7\u7b46\u8a18\u61c9\u8a72\u53ea\u662f\u60f3\u8cbc\u9019\u500b\n\n\n\n\u751f\u5b58\u6226\u7565\uff01\n\u8f2a\u308b\u30d4\u30f3\u30b0\u30c9\u30e9\u30e0", 
      "tags": "", 
      "loc": "/posts/c-thread-pool.html", 
      "title": "C \u7684 Thread Pool \u7b46\u8a18"
    }, 
    {
      "text": "iSCSI Target \u7684\u8a2d\u8a08\niSCSI \u88e1\u9762 Target \u7b49\u65bc\u5c31\u662f Logic unit\uff0c\u800c\u4e14\u5e95\u4e0b\u7684 disk \u5c31\u662f logic unit number\u3002\n\u6240\u4ee5\u8cc7\u6599\u7d50\u69cb\u7684\u5448\u73fe\u61c9\u8a72\u662f\n\nTarget\n    |\n    |-------Lun0\n    |-------Lun1\n    ...\n\n\u800c iSCSI initiator \u7684 PDU \u662f\u91dd\u5c0d Target \u50b3\u9001\u7684\uff0c\u4e5f\u5c31\u662f Session \u8ddf Target \u662f\u6210\u5c0d\u7684\u3002\n\niSCSI initiator ====<PDU>====> Session <------> Target\n\n\u6240\u4ee5\u7576 Session \u6536\u5230 PDU \u4e4b\u5f8c\uff0c\u5c31\u8981\u62c6\u958b\u4f86\uff0c\u4e26\u4e14\u6c7a\u5b9a\u8981\u5c07 SCSI Command \u50b3\u9001\u5230\u54ea\u500b Lun\u3002\n\n\u56e0\u6b64\uff0c\u6211\u73fe\u5728\u7684 target \u8cc7\u6599\u7d50\u69cb\u662f\u9577\u9019\u6a23\u3002\nnext \u662f\u70ba\u4e86\u8981\u4e32\u8d77\u6b64 iSCSI Target \u5167\u6240\u6709\u7684 target\uff0c\u5176\u5be6\u4f7f\u7528\u4e00\u500b Array \u4f86\u5132\u5b58\u61c9\u8a72\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\u800c luns \u5c31\u662f\u5b58\u653e\u6b64 target \u5e95\u4e0b Lun \u7684 List\uff0c\u9019\u500b\u61c9\u8a72\u5c31\u6539\u6210 Array \u6703\u6bd4\u8f03\u5408\u9069\u4e86\uff0c\u4e0d\u53ef\u80fd\u4e4b\u5f8c\u90fd\u7528 List \u7684\u65b9\u5f0f\u4f86\u5c0b\u8a2a\u3002\n\u9019\u6a23\u5149\u662f\u5c0b\u8a2a\u7684\u6642\u9593\u5c31\u6703\u592a\u4e45\u4e86\u3002\n\u800c auth_group \u8ddf portal_group \u5c31\u53ea\u662f\u6b64 target \u6240\u9700\u8981\u5f97\u8a2d\u5b9a\uff0c\u8ca0\u8cac\u7ba1\u7406\u5c0d\u5916\u7684\u9023\u7dda\u8207\u8a8d\u8b49\u7684\u65b9\u5f0f\u3002\n\nlun \u7684\u8a2d\u8a08\n\n\niSCSI lun struct\n\u6211\u60f3\u61c9\u8a72\u7b97\u662f\u7b49\u50f9\u65bc IPStor \u4e2d\u7684 virtual_device\u3002\n\u6240\u4ee5\u9019\u908a\u4e5f\u662f\u4f7f\u7528\u4e00\u500b List \u4f86\u4e32\u9023 lun\uff0c\u6211\u60f3\u9019\u500b\u662f\u6c92\u6709\u610f\u7fa9\u7684\uff0c\u56e0\u70ba lun \u6839\u672c\u4e0d\u9700\u8981\u77e5\u9053\u5176\u4ed6 lun \u7684\u8cc7\u8a0a\u3002\n\u53cd\u5012\u662f\u6bd4\u8f03\u91cd\u8981\u7684\u90e8\u4efd\u5c31\u662f\u6b64 lun \u7684 implement \u65b9\u5f0f\u61c9\u8a72\u8981\u5982\u4f55\u88ab\u8868\u9054\u8207\u4f7f\u7528\u3002\n\u4f8b\u5982\u589e\u52a0\u4e00\u500b execute_scsi_cmd() \u7684 function\uff0c\u88e1\u9762\u50b3\u905e lun_cmd \u7684\u8cc7\u6599\u7d50\u69cb\u3002\n\u9019\u6a23\u4ed6\u5c31\u53ef\u4ee5\u57f7\u884c\u4e86\uff1f\n\npi_lun                            vdev_pass\n   |                                  |\n   |----- execute_scsi_cmd()--------->|\n\n\u90a3\u9ebc\u9019\u500b pi_lun \u8cc7\u6599\u7d50\u69cb\u6240\u5b58\u5728\u7684\u610f\u7fa9\u4e3b\u8981\u5c31\u662f\u5c07 iSCSI \u624d\u6703\u6709\u7684\u6771\u897f\u653e\u5728\u9019\u88e1\u3002\n\u4f8b\u5982\u8aaa\u5b83\u5c6c\u65bc\u54ea\u500b target\uff0c\u9084\u6709\u6b64 disk \u7684\u578b\u614b\u7b49\u3002\ninqury \u7562\u7adf\u4e5f\u662f\u4ee5 SCSI Command \u7684\u65b9\u5f0f\u4f86\u5448\u73fe\uff0c\u6700\u5f8c\u90fd\u9084\u662f\u5c07\u8cc7\u6599\u5beb\u5165 data \u9019\u500b\u7a7a\u9593\u88e1\u9762\u3002\n\u6240\u4ee5\u6211\u60f3\u61c9\u8a72\u4e0d\u9700\u8981\u53e6\u5916\u589e\u52a0 inqury \u7684 function\uff0c\u61c9\u8a72\u9806\u5176\u81ea\u7136\u5c07\u6240\u6709\u7684 lun_cmd \u90fd\u50b3\u5165 execute_scsi \u4f86\u57f7\u884c\u3002\n\n\niSCSI lun \u7684\u521d\u59cb\u5316\n\u5728 iSCSI config \u4e2d\u61c9\u8a72\u7d00\u9304\u8457 iSCSI lun \u521d\u59cb\u5316\u5167\u5bb9\uff0c\u5305\u62ec\u4ed6\u61c9\u8a72\u5c0d\u61c9\u7684 Path \u8207\u578b\u614b\u3002\n\u56e0\u6b64\u5728\u9019\u908a\u521d\u59cb\u5316\u7684\u6642\u5019\uff0c\u5c31\u61c9\u8a72\u4e5f\u8981\u628a virtual device struct \u7684\u90e8\u4efd\u4e5f\u4e00\u8d77\u521d\u59cb\u5316\u3002\n\n\u8b80\u53d6 Config file\n        |\n\u5efa\u7acb Target struct\n        |\n\u5efa\u7acb Target \u5e95\u4e0b\u7684 iSCSI lun\uff0c\u6839\u64da lun \u7684\u578b\u614b\n        |\n\u5efa\u7acb iSCSI lun \u5be6\u969b\u5c0d\u61c9\u7684 virtual device\n========|=====================================\n\u521d\u59cb\u5316 virtual device \u5efa\u7acb\u76f8\u5c0d\u61c9\u7684 implement \u65b9\u5f0f (ex. pass through)\n(\u82e5\u662f pass through \u5c31\u61c9\u8a72\u8981\u5305\u62ec\u53d6\u5f97 cam_dev \u8207 ccb \u7684\u52d5\u4f5c)\n\n\n\nvirtual device implement \u90e8\u4efd\u7684\u521d\u59cb\u5316\n\u6bcf\u4e00\u7a2e virtual device implement \u7684\u521d\u59cb\u5316\u65b9\u5f0f\u61c9\u8a72\u90fd\u4e0d\u4e00\u6a23\uff0c\n\u4f46\u662f\u6700\u91cd\u8981\u5f97\u90e8\u4efd\u5c31\u662f\u8981\u63d0\u4f9b\u4e00\u500b\u7269\u4ef6\u8b93 iSCSI lun \u53ef\u4ee5\u5c07 SCSI Command \u8f49\u767c\u904e\u4f86\u3002\n\n\nvirtual device implement struct\n\u89e3\u6c7a\u4e86 iSCSI \u4e0a\u9762 lun \u7684\u8868\u73fe\u4e4b\u5f8c\uff0c\u518d\u4f86\u5c31\u662f\u5728 vdev \u80cc\u5f8c\u7684\u60c5\u6cc1\u4e86\u3002\n\u96d6\u7136\u8aaa pi_lun \u7684 execute_scsi_cmd() \u662f\u76f4\u63a5\u6307\u5230 vdev_pass \u7684 execute_scsi_cmd()\uff0c\n\u4f46\u662f\u9084\u6b20\u7f3a\u57f7\u884c\u6240\u9700\u8981\u7684\u8cc7\u6599\uff0c\u4f8b\u5982 File Path \u7b49\u3002\u6240\u4ee5\n\npi_lun                                                  vdev_pass\n  |                                                         |\n  |- (uint8_t*) vdev_info                                   |\n  |--------- execute_scsi_cmd(uint8_t* vdev_info)-------->  |\n\n\u8b93 vdev_pass \u88e1\u9762\u7684 execute_scsi_cmd \u81ea\u884c\u8f49\u63db vdev_info \u7684\u578b\u614b\u8b8a\u6210\u4ed6\u81ea\u5df1\u60f3\u8981\u7684\u3002\n\n\n\n\niSCSI \u7684 Test Data\niSCSI login - session type = normal\n\nlogin init handler\n\n********** login handler ***********\nBHS dump\n0x000000: 43 81 00 00 00 00 00 7f C.......\n0x000008: 40 00 01 37 00 01 00 00 @..7....\n0x000010: 00 00 00 01 00 01 00 00 ........\n0x000018: 00 00 00 01 00 00 00 01 ........\n0x000020: 00 00 00 00 00 00 00 00 ........\n0x000028: 00 00 00 00 00 00 00 00 ........\n\nData dump\n0x000000: 49 6e 69 74 69 61 74 6f Initiato\n0x000008: 72 4e 61 6d 65 3d 69 71 rName=iq\n0x000010: 6e 2e 31 39 39 31 2d 30 n.1991-0\n0x000018: 35 2e 63 6f 6d 2e 6d 69 5.com.mi\n0x000020: 63 72 6f 73 6f 66 74 3a crosoft:\n0x000028: 73 77 69 6e 64 2d 70 63 swind-pc\n0x000030: 00 53 65 73 73 69 6f 6e .Session\n0x000038: 54 79 70 65 3d 4e 6f 72 Type=Nor\n0x000040: 6d 61 6c 00 54 61 72 67 mal.Targ\n0x000048: 65 74 4e 61 6d 65 3d 69 etName=i\n0x000050: 71 6e 2e 32 30 31 32 2d qn.2012-\n0x000058: 30 36 2e 63 6f 6d 2e 65 06.com.e\n0x000060: 78 61 6d 70 6c 65 3a 74 xample:t\n0x000068: 61 72 67 65 74 30 00 41 arget0.A\n0x000070: 75 74 68 4d 65 74 68 6f uthMetho\n0x000078: 64 3d 4e 6f 6e 65 00 00 d=None..\n\n\n********** login handler response***********\n\nSend PDU BHS dump\n0x000000: 23 81 00 00 00 00 00 00 #.......\n0x000008: 40 00 01 37 00 01 00 00 @..7....\n0x000010: 00 00 00 01 00 00 00 00 ........\n0x000018: 00 00 00 00 00 00 00 00 ........\n0x000020: 00 00 00 00 00 00 00 00 ........\n0x000028: 00 00 00 00 00 00 00 00 ........\n\nSend PDU Data dump\n0x000000: 54 61 72 67 65 74 50 6f TargetPo\n0x000008: 72 74 61 6c 47 72 6f 75 rtalGrou\n0x000010: 70 54 61 67 3d 31 00 41 pTag=1.A\n0x000018: 75 74 68 4d 65 74 68 6f uthMetho\n0x000020: 64 3d 4e 6f 6e 65 00 54 d=None.T\n0x000028: 61 72 67 65 74 41 6c 69 argetAli\n0x000030: 61 73 3d 54 61 72 67 65 as=Targe\n0x000038: 74 20 66 6f 72 20 74 65 t for te\n0x000040: 73 74 00                st.\n\n\nlogin negotiate handler\n\n********** login negotiate handler ***********\n\nBHS dump\n\n0x000000: 43 87 00 00 00 00 01 2c C......,\n0x000008: 40 00 01 37 00 01 00 00 @..7....\n0x000010: 00 00 00 01 00 01 00 00 ........\n0x000018: 00 00 00 01 00 00 00 01 ........\n0x000020: 00 00 00 00 00 00 00 00 ........\n0x000028: 00 00 00 00 00 00 00 00 ........\n\nData dump\n\n0x000000: 48 65 61 64 65 72 44 69 HeaderDi\n0x000008: 67 65 73 74 3d 4e 6f 6e gest=Non\n0x000010: 65 2c 43 52 43 33 32 43 e,CRC32C\n0x000018: 00 44 61 74 61 44 69 67 .DataDig\n0x000020: 65 73 74 3d 4e 6f 6e 65 est=None\n0x000028: 2c 43 52 43 33 32 43 00 ,CRC32C.\n0x000030: 45 72 72 6f 72 52 65 63 ErrorRec\n0x000038: 6f 76 65 72 79 4c 65 76 overyLev\n0x000040: 65 6c 3d 32 00 49 6e 69 el=2.Ini\n0x000048: 74 69 61 6c 52 32 54 3d tialR2T=\n0x000050: 4e 6f 00 49 6d 6d 65 64 No.Immed\n0x000058: 69 61 74 65 44 61 74 61 iateData\n0x000060: 3d 59 65 73 00 4d 61 78 =Yes.Max\n0x000068: 52 65 63 76 44 61 74 61 RecvData\n0x000070: 53 65 67 6d 65 6e 74 4c SegmentL\n0x000078: 65 6e 67 74 68 3d 36 35 ength=65\n0x000080: 35 33 36 00 4d 61 78 42 536.MaxB\n0x000088: 75 72 73 74 4c 65 6e 67 urstLeng\n0x000090: 74 68 3d 32 36 32 31 34 th=26214\n0x000098: 34 00 46 69 72 73 74 42 4.FirstB\n0x0000a0: 75 72 73 74 4c 65 6e 67 urstLeng\n0x0000a8: 74 68 3d 36 35 35 33 36 th=65536\n0x0000b0: 00 4d 61 78 43 6f 6e 6e .MaxConn\n0x0000b8: 65 63 74 69 6f 6e 73 3d ections=\n0x0000c0: 33 32 00 44 61 74 61 50 32.DataP\n0x0000c8: 44 55 49 6e 4f 72 64 65 DUInOrde\n0x0000d0: 72 3d 59 65 73 00 44 61 r=Yes.Da\n0x0000d8: 74 61 53 65 71 75 65 6e taSequen\n0x0000e0: 63 65 49 6e 4f 72 64 65 ceInOrde\n0x0000e8: 72 3d 59 65 73 00 44 65 r=Yes.De\n0x0000f0: 66 61 75 6c 74 54 69 6d faultTim\n0x0000f8: 65 32 57 61 69 74 3d 30 e2Wait=0\n0x000100: 00 44 65 66 61 75 6c 74 .Default\n0x000108: 54 69 6d 65 32 52 65 74 Time2Ret\n0x000110: 61 69 6e 3d 36 30 00 4d ain=60.M\n0x000118: 61 78 4f 75 74 73 74 61 axOutsta\n0x000120: 6e 64 69 6e 67 52 32 54 ndingR2T\n0x000128: 3d 31 36 00             =16.\n\n\n********** login negotiate handler ***********\n\nSend PDU bhs dump\n0x000000: 23 87 00 00 00 00 00 00 #.......\n0x000008: 40 00 01 37 00 01 ba dd @..7....\n0x000010: 00 00 00 01 00 00 00 00 ........\n0x000018: 00 00 00 01 00 00 00 00 ........\n0x000020: 00 00 00 00 00 00 00 00 ........\n0x000028: 00 00 00 00 00 00 00 00 ........\n\nSend PDU data dump\n\n0x000000: 44 65 66 61 75 6c 74 54 DefaultT\n0x000008: 69 6d 65 32 57 61 69 74 ime2Wait\n0x000010: 3d 30 00 44 65 66 61 75 =0.Defau\n0x000018: 6c 74 54 69 6d 65 32 52 ltTime2R\n0x000020: 65 74 61 69 6e 3d 36 30 etain=60\n0x000028: 00 48 65 61 64 65 72 44 .HeaderD\n0x000030: 69 67 65 73 74 3d 4e 6f igest=No\n0x000038: 6e 65 00 4d 61 78 52 65 ne.MaxRe\n0x000040: 63 76 44 61 74 61 53 65 cvDataSe\n0x000048: 67 6d 65 6e 74 4c 65 6e gmentLen\n0x000050: 67 74 68 3d 36 35 35 33 gth=6553\n0x000058: 36 00 44 61 74 61 44 69 6.DataDi\n0x000060: 67 65 73 74 3d 4e 6f 6e gest=Non\n0x000068: 65 00                   e.\n\n\n\nfull feature\n\nBHS dump\n\n0x000000: 01 c0 00 00 00 00 00 00 ........\n0x000008: 00 00 00 00 00 00 00 00 ........\n0x000010: 00 00 00 00 00 00 00 10 ........\n0x000018: 00 00 00 00 00 00 00 02 ........\n0x000020: a0 00 00 00 00 00 00 00 ........\n0x000028: 00 10 00 00 00 00 00 00 ........\n\n/root/Program/iSCSI/src/session_reader.c:  86:set_read_data_segment_iovec: Data Segment length is 0\n/root/Program/iSCSI/src/session_reader.c: 138:read_to_iovec: PDU read from 6 with length 0\n\nData dump", 
      "tags": "FreeBSD", 
      "loc": "/stories/iscsi_target_note.html", 
      "title": "iSCSI target \u958b\u767c\u7b46\u8a18"
    }, 
    {
      "text": "\u83ab\u540d\u5176\u5999\u9032\u5165\u4e86 FreeBSD Driver \u9818\u57df Orz \u8aaa\u597d\u7684 Java \u5462 ? T_T\n\n\u53c3\u8003\u8cc7\u6599\nFreeBSD Device Drivers\n\n\n\u5148\u5225\u7ba1\u9019\u500b\u4e86\uff0c\u4f60\u6709\u807d\u904e Hello World \u55ce ?\n\n#include <sys/param.h>\n#include <sys/module.h>\n#include <sys/kernel.h>\n#include <sys/systm.h>\n\nstatic int\nhello_modevent(module_t mod __unused, int event, void *arg __unused)\n{\n    int error = 0;\n\n    switch(event){\n        case MOD_LOAD:\n            uprintf(\"Hello, world!\\n\");\n            break;\n        case MOD_UNLOAD:\n            uprintf(\"Good-bye, cruel world!\\n\");\n            break;\n        default:\n            error = EOPNOTSUPP;\n            break;\n    }\n\n    return (error);\n}\n\nstatic moduledata_t hello_mod = {\n    \"hello\",\n    hello_modevent,\n    NULL\n};\n\nDECLARE_MODULE(hello, hello_mod, SI_SUB_DRIVERS, SI_ORDER_MIDDLE);\n\n\nKMOD= hello\nSRCS= hello.c\n\n.include <bsd.kmod.mk>\n\n\n\u9019\u908a\u4e0d\u5f97\u4e0d\u8aaa FreeBSD \u5728\u958b\u767c Kernel Module \u7684\u6642\u5019\u6bd4 Linux \u65b9\u4fbf\u5f88\u591a\u3002\n\u9023 Makefile \u7684\u8a2d\u90fd\u5b9a\u5e6b\u4f60\u6e96\u5099\u597d\u3002\n\u5728 include \"bsd.kmod.mk\" \u4e4b\u5f8c\uff0c\u53ef\u4ee5\u4f7f\u7528\n\nmake load\n\u8207\n\nmake unload\n\u4f86\u4ee3\u66ff kldload ./hello.ko \u8207 kldunload hello.ko\u3002\nNote:\n\n.. <sys/systm.h>:: \u662f systm.h \u4e0d\u662f system.h\n\n\n\nHello Character Drivers\nstruct cdevsw \u5b9a\u7fa9\u5728 <sys/conf.h> \u4e4b\u4e2d\u3002\n\n\nCommon Access Method\nFreeBSD CAM implementation contains SIMs for\nSCSI Parallel Interface (SPI)\nFibre Channel (FC)\nUSB Mass Storage (UMASS)\nFireWire (IEEE 1394)\nAdvanced Technology Attachment Packet Interface (ATAPI)\nIt has peripheral modules\ndisks (ds)\nCD-ROMs (cd)\ntapes (sa)\ntape changers (ch)\nprocessor type devices (pt)\nenclosure services (ses)\nAlso, it provides a \"pass-through\" interface that allows user applications to send I/O requests directly to any CAM-controlled device.\n\n\n\u7e2e\u5beb\u7ffb\u8b6f\nCTL (CAM target layer)\nhttp://www.youtube.com/watch?v=eJv7GQ9rfDo", 
      "tags": "FreeBSD", 
      "loc": "/stories/freebsd-driver-dev.html", 
      "title": "FreeBSD Driver \u958b\u767c\u7b46\u8a18"
    }, 
    {
      "text": "\u6211\u60f3\u61c9\u8a72\u8981\u6539\u6210\u8f15\u8f15\u9b06\u9b06\u958b\u767c FreeBSD \u7db2\u8def\u7a0b\u5f0f\u624d\u662f\n\nKqueue - scalable event notification interface\n\n\u53c3\u8003\u8cc7\u6599\nkqueue wiki\nkqueue man page\nepoll wiki\n\u4f7f\u7528 kqueue \u5728 FreeBSD \u4e0a\u958b\u767c\u9ad8\u6027\u80fd\u61c9\u7528\u670d\u52d9\u5668", 
      "tags": "FreeBSD", 
      "loc": "/stories/freebsd-socket-note.html", 
      "title": "FreeBSD Socket \u7b46\u8a18"
    }, 
    {
      "text": "Create iSCSI Target\nThis API is to create a new iSCSI target\nHTTP method:POST\nURI Pattern:/iscsi-targets\n\nParameters\nname:iSCSI Target name\ntarget_alias:iSCSI Target alias\nauth_method:iSCSI target auth method\nuse digest:use digest for PDU header and data or not\n\n\nExample. Create iSCSI Target: JSON Request\n\n{\n    \"iscsi_target\":{\n        \"name\": \"iqn.2012-05.pi-coral.com.disk1\",\n        \"target_alias\": \"iSCSI Data Disk1\",\n        \"AuthMethod\": \"Auto\",\n        \"UseDigest\": \"Auto\"\n    }\n}\n\n\n\nExample. Create iSCSI Target:JSON Response\n\n{\n    \"iscsi_target\":{\n        \"id\": \"5aa119a8-d25b-45a7-8d1b-88e127885635\",\n        \"links\": [\n            {\n                \"href\": \"http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/iscsi-targets/5aa119a8-d25b-45a7-8d1b-88e127885635\",\n                \"ref\": \"self\"\n            },\n            {\n                \"href\": \"http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/iscsi-targets/5aa119a8-d25b-45a7-8d1b-88e127885635\",\n                \"ref\": \"self\"\n            }\n        ],\n        \"name\": \"iqn.2012-05.pi-coral.com\"\n    }\n}\n\n\n\n\nUpdate iSCSI Target\nHTTP method:PUT\nURI Pattern:/iscsi-targets/<iscsi target id>\n\nParameters\nmax_connextions:\u00a0Default is 1\nMaximum number of connections requested/acceptable.\nfirst_burst_length:\u00a0Default is 65536 (64 Kbytes)\nMaximum amount in bytes of unsolicited data an iSCSI initiator may send to the target during the execution of a single SCSI Command.\nmax_burst_length:\u00a0Default is 262411 (256 Kbytes)\nMaximum SCSI data payload in bytes in a Data-In or Data-Out PDU with the F bit set to one.\nmax_receive_data_segment_length:\u00a0Default is 8192 bytes.\nMaximuxm data segment length in bytes it can receive in an iSCSI PDU.\nportal_group:A portal specifies the IP address and port number to be used for iSCSI connections.\ninitiator_group:\u00a0Spetified name allow login/discovery\n\n\nExample. Update iSCSI Target: JSON Request\n\n{\n    \"iscsi_target\":{\n        \"name\": \"iqn.2012-05.pi-coral.com.disk1\",\n        \"target_alias\": \"iSCSI Data Disk1\",\n        \"AuthMethod\": \"Auto\",\n        \"UseDigest\": \"Auto\"\n    }\n}\n\n\n\nExample. Update iSCSI Target: JSON Response\n\n\n\nCreate Portal Group\n\nExample. Create Portal Group: JSON Request\n\n\nExample. Create Portal Group: JSON Response\n\n\n\nCreate Initiator Group\n\nParameters\ncomment:The description of this initiator group.\ninitiator_name:Spetified name allow login/discovery. Special word \"ALL\" match all of initiators.\nnetmask:192.168.2.0/24 means the initiators from 192.168.2.0/24 can login and discovery this target.\n\n\nExample. Create Initiator Group: JSON Request\n\n{\n    \"initiator_group\":{\n        \"name\": \"initiator_group1\",\n        \"comment\": \"All initiators from 192.168.2.0/24\",\n        \"initiator_name\": \"All\",\n        \"netmask\": \"192.168.2.0/24\"\n    }\n}\n\n\n\nExample. Create Initiator Group: JSON Response\n\n{\n    \"initiator_group\":{\n        \"id\": \"5aa119a8-d25b-45a7-8d1b-88e127885635\",\n        \"links\": [\n            {\n                \"href\": \"http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/iscsi-targets/5aa119a8-d25b-45a7-8d1b-88e127885635\",\n                \"ref\": \"self\"\n            },\n            {\n                \"href\": \"http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/iscsi-targets/5aa119a8-d25b-45a7-8d1b-88e127885635\",\n                \"ref\": \"self\"\n            }\n        ],\n        \"name\": \"initiator_group1\"\n    }\n}", 
      "tags": "FreeBSD", 
      "loc": "/stories/iscsi_rest_api.html", 
      "title": "iSCSI REST API \u8a2d\u8a08"
    }, 
    {
      "text": "\u6703\u60f3\u8981\u91cd\u62fe Scala \u8ddf Play \u4e3b\u8981\u662f\u56e0\u70ba\u770b\u5230\u4e86\u9019\u7bc7\u6587\u7ae0\n\u600e\u9ebc\u8a2d\u8a0822K?\n\u56e0\u70ba\u89ba\u5f97\u9019\u500b\u8a2d\u8a08\u7406\u5ff5\u771f\u7684\u662f\u592a\u6b63\u9762\u4e86 XDDD\n\n\u6240\u4ee5\u6211\u8981\u4ee5\u6b63\u9762\u7684\u610f\u5ff5\u4f86\u8a2d\u8a08\u9019\u500b\u7db2\u7ad9\uff01\n\u2014Art Pai\n\n\u525b\u597d\u4e4b\u524d\u4e5f\u4e00\u76f4\u5c0d Play Framework \u5f88\u6709\u8208\u8da3\uff0c\u6240\u4ee5\u5c31\u5927\u6982\u82b1\u4e86\u5169\u500b\u5c0f\u6642\u628a API \u7c21\u55ae\u7684\u63a5\u4e0a\u53bb\uff0c\u9806\u4fbf\u73a9\u4e00\u4e0b Play Framework 2.0\u3002\n\u539f\u59cb\u78bc\n\u81ea\u5f9e\u958b\u59cb\u5de5\u4f5c\u4e4b\u5f8c\uff0c\u6211\u5c31\u653e\u68c4\u4e86\u6211\u6703\u628a\u6771\u897f\u8a18\u8d77\u4f86\u9019\u4ef6\u4e8b\u60c5\u3002\n\u6240\u4ee5\u6211\u6c7a\u5b9a\u628a\u4f7f\u7528 Play \u5be6\u4f5c\u7684\u904e\u7a0b\u8a18\u9304\u4e00\u4e0b\uff0c\u4ee5\u65b9\u4fbf\u6211\u65e5\u5f8c\u56de\u61b6\u3002\n\u6574\u500b\u5be6\u4f5c\u904e\u7a0b\u662f\u53c3\u8003 Your first Play application \u9019\u7bc7\u6587\u7ae0\u7684\u3002\nP.S \u9019\u7bc7\u6587\u7ae0\u5beb\u5230\u4e00\u534a\u7684\u6642\u5019 Play 2.1 \u51fa\u4e86 Orz ...\n\n\n\u5b89\u88dd Play Framework\nPlay \u807d\u8aaa\u662f\u5b78\u7fd2 Ruby On Rails \u98a8\u683c\u7684 Java/Scala web framework\uff0c\u6211\u5f9e 1.x \u7684\u6642\u5019\u5c31\u6709\u5728\u95dc\u6ce8\u4ed6\u4e86\u3002\n\u4e5f\u66fe\u7d93\u60f3\u8981\u63a8\u5751\u7d66\u5b78\u5f1f\uff0c\u8b93\u5be6\u9a57\u5ba4\u4f7f\u7528 Play + Scala \u4f86\u958b\u767c\uff0c\u53ef\u60dc\u6700\u5f8c\u56e0\u70ba\u9019\u5169\u8005\u90fd\u592a\u65b0\u9084\u4e0d\u7a69\u5b9a\u800c\u4f5c\u5ee2\u3002\n\u4f46\u662f\u5230\u4e86\u73fe\u5728\uff0c\u6211\u767c\u73fe\u4ed6\u7684\u5b89\u88dd\u8207\u4f7f\u7528\u8b8a\u5f97\u975e\u5e38\u5bb9\u6613\u4e0a\u624b\u3002\n\u5b89\u88dd Play \u552f\u4e00\u8981\u4f5c\u5f97\u4e8b\u60c5\u5c31\u662f\u4e0b\u8f09 Play\u3002\nPlay\u5b98\u7db2\nplay-2.0.4.zip\u4e0b\u8f09\u9ede\n\u89e3\u58d3\u7e2e\u4e4b\u5f8c\uff0c\u5c07\u4f60\u89e3\u58d3\u7e2e\u7684\u76ee\u9304\u4f4d\u7f6e\u52a0\u5165 PATH \u5c31\u7b97\u5b89\u88dd\u5b8c\u7562\u4e86\u3002\n\n\n\u5efa\u7acb Play Project\n\nplay new 22k\n\n\n\u6703\u5728\u4f60\u6240\u57f7\u884c\u7684\u4f4d\u7f6e\u4e0b\u5efa\u7acb\u4e00\u500b 22k \u7684\u8cc7\u6599\u593e\uff0c\u5176\u8cc7\u6599\u593e\u7d50\u69cb\u5982\u4e0b\n\n\u251c\u2500\u2500 app\n\u2502   \u251c\u2500\u2500 controllers\n\u2502   \u2502   \u2514\u2500\u2500 Application.scala\n\u2502   \u2514\u2500\u2500 views\n\u2502       \u251c\u2500\u2500 index.scala.html\n\u2502       \u2514\u2500\u2500 main.scala.html\n\u251c\u2500\u2500 conf\n\u2502   \u251c\u2500\u2500 application.conf\n\u2502   \u2514\u2500\u2500 routes\n\u251c\u2500\u2500 project\n\u2502   \u251c\u2500\u2500 build.properties\n\u2502   \u251c\u2500\u2500 Build.scala\n\u2502   \u2514\u2500\u2500 plugins.sbt\n\u251c\u2500\u2500 public\n\u2502   \u251c\u2500\u2500 images\n\u2502   \u2502   \u2514\u2500\u2500 favicon.png\n\u2502   \u251c\u2500\u2500 javascripts\n\u2502   \u2502   \u2514\u2500\u2500 jquery-1.7.1.min.js\n\u2502   \u2514\u2500\u2500 stylesheets\n\u2502       \u2514\u2500\u2500 main.css\n\u2514\u2500\u2500 README\n\n\n\n\u4f7f\u7528 Play\n\u5728 22k \u7684\u8cc7\u6599\u593e\u5e95\u4e0b\u8f38\u5165\n\nplay\n\n\n\u4e4b\u5f8c\u5c31\u9032\u5165 Play \u7684\u547d\u4ee4\u5217\u6a21\u5f0f:\n\nWelcome to Play 2.0!\n\nThese commands are available:\n-----------------------------\nclasspath                  Display the project classpath.\nclean                      Clean all generated files.\ncompile                    Compile the current application.\nconsole                    Launch the interactive Scala console (use :quit to exit).\ndependencies               Display the dependencies summary.\ndist                       Construct standalone application package.\nexit                       Exit the console.\nh2-browser                 Launch the H2 Web browser.\nlicense                    Display licensing informations.\npackage                    Package your application as a JAR.\nplay-version               Display the Play version.\npublish                    Publish your application in a remote repository.\npublish-local              Publish your application in the local repository.\nreload                     Reload the current application build file.\nrun <port>                 Run the current application in DEV mode.\ntest                       Run Junit tests and/or Specs from the command line\neclipsify                  generate eclipse project file\nidea                       generate Intellij IDEA project file\nsh <command to run>        execute a shell command\nstart <port>               Start the current application in another JVM in PROD mode.\nupdate                     Update application dependencies.\n\nType `help` to get the standard sbt help.\n\nPlay \u672c\u8eab\u4e5f\u5c07\u958b\u767c\u5e38\u7528\u7684\u5de5\u5177\u90fd\u6574\u5408\u5728\u4e00\u8d77\u4e86\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u53bb\u7169\u60f1 Scala \u6216 Library \u8981\u54ea\u88e1\u4e0b\u8f09\u7b49\u554f\u984c\u3002\n\u4e26\u4e14\u4e5f\u63d0\u4f9b\u4e86\u8ddf IDE \u6574\u5408\u7684\u65b9\u5f0f\u3002:\n\neclipsify\nidea\n\n\u6703\u81ea\u52d5\u7522\u751f eclipse \u6216 idea \u7684 Project \u8a2d\u5b9a\uff0c\u8b93\u4f7f\u7528\u8005\u4ee5\u76f4\u63a5\u532f\u5165 IDE \u4e2d\u958b\u767c\uff0c\n\u4f46\u662f\u6211\u5728\u4f7f\u7528\u7684\u6642\u5019\u767c\u73fe eclipse \u4e26\u7121\u6cd5\u6b63\u78ba\u7de8\u8b6f\u8207\u6aa2\u67e5\u8a9e\u6cd5\u932f\u8aa4\uff0c\u56e0\u6b64\u9084\u662f\u53ea\u80fd\u9760 play \u4f86\u9032\u884c\u7de8\u8b6f\u8207\u5075\u932f\u3002\n\nrun\n\u53ef\u4ee5\u555f\u52d5 Server ( http://localhost:9000 ) \u8b93\u4f60\u76f4\u63a5\u89c0\u770b\u57f7\u884c\u7d50\u679c\uff0c\u4e26\u4e14\u4e5f\u6709\u63d0\u4f9b\u826f\u597d\u7684 error \u756b\u9762\u8b93\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u700f\u89bd\u5668\u4e0a\u9762\u770b\u5230\u57f7\u884c\u932f\u8aa4\u7684\u5730\u65b9\u3002\n\n\n\n\n\u9023\u63a5 \u63ed\u973222k \u7684 API\n\u63ed\u973222k \u6240\u63d0\u4f9b\u7684 API \u662f XML \u7684\u683c\u5f0f\uff0c\u6b63\u597d\u662f Scala \u7684\u5f37\u9805\u4e4b\u4e00\uff0c\u56e0\u6b64\u5206\u6790\u5167\u5bb9\u8b8a\u5f97\u975e\u5e38\u5bb9\u6613\u3002\n\npackage models\n\nimport scala.xml.XML\nimport java.net.URL\nimport scala.xml.Node\n\nobject 22KOpenData {\n  val listDataURL = \"http://www.22kopendata.org/api/list_data\"\n\n  def listData(size:Int, pageNum:Int) = {\n        val url = new URL(listDataURL+\"/\"+size+\"/\"+pageNum)\n    val connection = url.openConnection()\n    val feedXML = XML.load(connection.getInputStream)\n    parseFeedXML(feedXML)\n  }\n\n  def parseFeedXML(feedXML: Node) = (feedXML \\ \"job\").map(parseJob)\n\n  def findFirstElement(node: Node)(tagName: String) = (node \\ tagName).first.text\n\n  def parseJob(jobNode: Node) = {\n    val nodeParser = findFirstElement(jobNode)_\n    Job(\n      nodeParser(\"count\"),\n      nodeParser(\"company_name\"),\n      nodeParser(\"company_location\"),\n      nodeParser(\"job_name\"),\n      nodeParser(\"salary\"),\n      nodeParser(\"note1\"),\n      nodeParser(\"note2\"),\n      nodeParser(\"job_url\"),\n      nodeParser(\"job_url_screenshot\"),\n      nodeParser(\"job_salary_pic\"))\n  }\n}\n\ncase class Job(\n        count: String,\n        company_name: String,\n        company_location: String,\n        job_name: String,\n        salary: String,\n        note1: String,\n        note2: String,\n        job_url: String,\n        job_url_screenshort:String,\n        job_salary_pic: String\n)\n\n\u4e3b\u8981\u5c31\u53ea\u662f\u5c07 XML \u7684\u5167\u5bb9\u5c0d\u61c9\u5230\u4e00\u500b case class \u5167\u800c\u5df2\u3002\n\u9019\u500b\u6211\u5c07\u4ed6\u6b78\u985e\u5728 models \u5e95\u4e0b\uff0c\u6240\u4ee5\u76ee\u524d app \u7684\u8cc7\u6599\u593e\u7d50\u69cb\u9577\u6210\u9019\u6a23:\n\n\u251c\u2500\u2500 app\n\u2502   \u251c\u2500\u2500 controllers\n\u2502   \u2502   \u2514\u2500\u2500 Application.scala\n\u2502   \u2514\u2500\u2500 views\n\u2502       \u251c\u2500\u2500 index.scala.html\n\u2502       \u2514\u2500\u2500 main.scala.html\n\u2502   \u251c\u2500\u2500 models\n\u2502   \u2502   \u2514\u2500\u2500 22KOpenData.scala\n\n\n\n\u5957\u7528 Art Pai \u6240\u8a2d\u8a08\u7684 CSS Template\n\u81f3 Art Pai \u7684\u7db2\u7ad9\u4e0b\u8f09 CSS Template\n\u5c07\u58d3\u7e2e\u6a94\u7684\u6a94\u6848\u9664\u4e86 index.html \u4e4b\u5916\uff0c\u5168\u90e8\u8907\u88fd\u5230 22k \u8cc7\u6599\u593e\u4e2d public \u8cc7\u6599\u593e\u5e95\u4e0b:\n\npublic\n\u251c\u2500\u2500 images\n\u2502   \u251c\u2500\u2500 background.png\n\u2502   \u251c\u2500\u2500 glyphicons-halflings.png\n\u2502   \u251c\u2500\u2500 glyphicons-halflings-white.png\n\u2502   \u2514\u2500\u2500 middleman.png\n\u251c\u2500\u2500 javascripts\n\u2502   \u251c\u2500\u2500 all.js\n\u2502   \u251c\u2500\u2500 bootstrap.min.js\n\u2502   \u2514\u2500\u2500 jquery.min.js\n\u2514\u2500\u2500 stylesheets\n\u2502   \u251c\u2500\u2500 all.css\n\u2502   \u251c\u2500\u2500 bootstrap.min.css\n\u2502   \u251c\u2500\u2500 bootstrap-responsive.min.css\n\u2502   \u2514\u2500\u2500 normalize.css\n\n\n\n\u5efa\u7acb Controller\nPlay \u8a2d\u5b9a routes \u7684\u65b9\u5f0f\u975e\u5e38\u7684\u76f4\u89ba\uff08\u9060\u671b struts 1.x Orz\uff09:\n\n# Routes\n# This file defines all application routes (Higher priority routes first)\n# ~~~~\n\n# Home page\nGET     /                           controllers.Application.index\n\n# Tasks\nGET             /jobs/:pageNum                          controllers.Application.jobs(pageNum: Int)\n\n# Map static resources from the /public folder to the /assets URL path\nGET     /assets/*file               controllers.Assets.at(path=\"/public\", file)\n\n\u53ef\u4ee5\u76f4\u63a5\u5c07 path \u8207 function \u505a\u5c0d\u61c9\u3002\n\u914d\u5408 API \u7684\u8a2d\u8a08\u65b9\u5f0f\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u589e\u52a0\u4e86\u4e00\u500b\n\n/jobs/:pageNum\n\u7684\u8def\u5f91\uff0c\u5c0d\u61c9 \u63ed\u973222k \u7684\n\nhttp://www.22kopendata.org/api/list_data/(\u6bcf\u9801\u7b46\u6578,\u6700\u592720)/(\u76ee\u524d\u9801\u6578)\n\u7b46\u6578\u5247\u5c0d\u61c9 Art Pai \u7684\u8a2d\u8a08\u6bcf\u9801 9 \u7b46\u3002\n\npackage controllers\n\nimport play.api._\nimport play.api.mvc._\nimport play.api.data._\nimport play.api.data.Forms._\nimport models._\n\nobject Application extends Controller {\n\n  val rowSize = 3\n\n  def index = Action {\n    Redirect(routes.Application.jobs(1))\n  }\n\n  def jobs(pageNum:Int = 1) = Action {\n    val dataList = OpenDataAPI.listData(9,pageNum).toList\n        Ok(views.html.index(dataList.grouped(rowSize).toList, dataList.size < 9 ? 1:pageNum + 1 ))\n  }\n\n}\n\n\u4e4b\u5f8c index \u9019\u500b function \u518d redirect \u81f3 jobs \u9019\u500b function \u4e26\u4e14\u9810\u8a2d\u503c\u70ba page 1\u3002\n\n\n\u5efa\u7acb View\n\u53c3\u8003 Art Pai \u7684 index.html \u4f86\u5efa\u7acb view\u3002\nview \u7684 \u53c3\u6578\n\u5728 view \u7684\u6a94\u6848\u88e1\u9762\uff0c\u96d6\u7136\u662f html \u7684\u683c\u5f0f\uff0c\u4f46\u662f\u6211\u5011\u9084\u662f\u53ef\u4ee5\u5728\u9019\u88e1\u9762\u4f7f\u7528 scala \u7684\u8a9e\u6cd5\u3002\n\u6240\u4ee5\u8981\u8868\u793a\u9019\u500b view \u53ef\u4ee5\u63a5\u6536\u5169\u500b\u53c3\u6578\u7684\u8a71\uff0c\u4f7f\u7528 @ \u4f5c\u70ba\u8df3\u812b\u7b26\u865f\n\n@(jobrows: List[List[Job]], nextPageNum: Int)\n@import helper._\n\u5c0d\u61c9\u5230 controller \u7684\n\nOk(views.html.index(dataList.grouped(rowSize).toList, dataList.size < 9 ? 1:pageNum + 1 ))\n\n\u53ef\u662f\u500b\u4eba\u89ba\u5f97\u4e0d\u61c9\u8a72\u5728 view \u88e1\u9762\u653e\u592a\u591a\u908f\u8f2f\uff0c\u5426\u5247\u6703\u8b93 view \u7684\u6b0a\u8cac\u592a\u8907\u96dc\u3002\n\u4fee\u6539 css \u7684 include \u8def\u5f91\n\n<link href=\"@routes.Assets.at(\"stylesheets/bootstrap.min.css\")\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"@routes.Assets.at(\"stylesheets/all.css\")\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<script src=\"@routes.Assets.at(\"javascripts/jquery.min.js\")\" type=\"text/javascript\"></script>\n<script src=\"@routes.Assets.at(\"javascripts/bootstrap.min.js\")\" type=\"text/javascript\"></script>\n\n\u5176\u4e2d\u7684\n\n@routes.Assets.at(\"stylesheets/bootstrap.min.css\")\n\u5c0d\u61c9\u5230 route \u4e2d\u9810\u8a2d\u7684:\n\n# Map static resources from the /public folder to the /assets URL path\nGET     /assets/*file               controllers.Assets.at(path=\"/public\", file)\n\n\u4e5f\u5c31\u662f\u9023\u7d50\u5230 public \u8cc7\u6599\u593e\u4e2d\u7684 stylesheets/bootstrap.min.css\u3002\n\u4f7f\u7528 for \u8ff4\u5708\n\u5728\u63a5\u6536\u4e86 List \u578b\u614b\u7684 Job \u8cc7\u6599\u4e4b\u5f8c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 for \u8ff4\u5708\u4f86\u8655\u7406\uff0c\u4e0d\u8981\u624b\u5de5\u8907\u88fd 1, 2 ,3 ... \u7684\u8cbc\u4e0a Orz\u3002\n\u6211\u770b\u904e\u985e\u4f3c\u7684\u7a0b\u5f0f\u78bc\uff0c\u975e\u5e38\u7684 ...\n\n@for(jobrow <- jobrows){\n<div class=\"row\">\n   @for(job <- jobrow){\n   <div class=\"span4\">\n      <article class=\"job\">\n         <header class=\"clearfix\">\n            <div class=\"meta\">\n               <span class=\"count\">@job.count</span>\n            </div>\n            <div class=\"more\">\n               <a href=\"#job-detail@job.count\" data-toggle=\"modal\">\u8a73\u7d30\u8cc7\u8a0a</a>\n            </div>\n         </header>\n         <div class=\"card\">\n            <div class=\"card-body\">\n               <h1>@job.company_name</h1>\n               <p>@job.job_name</p>\n            </div>\n            <div class=\"card-footer\">\n               <span class=\"label label-important\">@job.note1</span>\n               <span class=\"label label-info\">@job.note2</span>\n            </div>\n         </div>\n      </article>\n   </div>\n   }\n</div>\n}\n\n\u9019\u908a\u6211\u7528\u4e86\u5169\u500b for \u8ff4\u5708\u4f86\u8655\u7406\u4e5d\u5bae\u683c\u7684\u6392\u7248\u65b9\u5f0f\uff08\u7b2c\u4e00\u500b for \u8655\u7406 row\uff0c\u7b2c\u4e8c\u500b\u8655\u7406 job \u7684\u8cc7\u6599\uff09\n\u5728\u9019\u88e1\u9762\u53ef\u4ee5\u770b\u5230\n\n@job.company_name\n\u4e4b\u985e\u7684\u8a9e\u6cd5\uff0c\u9019\u4ee3\u8868\u76f4\u63a5\u5b58\u53d6\u9019\u500b\u8b8a\u6578\u3002\n\u4e0b\u9762\u662f index.scala.html \u7684\u5b8c\u6574\u5167\u5bb9\u3002\n\n@(jobrows: List[List[Job]], nextPageNum: Int)\n@import helper._\n@main(\"22K Job Board\") {\n<!doctype html>\n<html>\n   <head>\n      <meta charset=\"utf-8\" />\n      <!-- Always force latest IE rendering engine or request Chrome Frame -->\n      <meta content=\"IE=edge,chrome=1\" http-equiv=\"X-UA-Compatible\" />\n      <!-- Use title if it's in the page YAML frontmatter -->\n      <title>22K Job Board</title>\n      <link href=\"@routes.Assets.at(\"stylesheets/bootstrap.min.css\")\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n      <link href=\"@routes.Assets.at(\"stylesheets/all.css\")\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n      <script src=\"@routes.Assets.at(\"javascripts/jquery.min.js\")\" type=\"text/javascript\"></script>\n      <script src=\"@routes.Assets.at(\"javascripts/bootstrap.min.js\")\" type=\"text/javascript\"></script>\n   </head>\n   <body class=\"index\">\n      <div class=\"navbar navbar-fixed-top\">\n         <div class=\"navbar-inner\">\n            <div class=\"container\">\n               <a class=\"brand\" href=\"1\">22K Job Board <span class=\"slogan\">22K\u4e5f\u6709\u8d85\u7d1a\u597d\u5de5\u4f5c</span></a>\n            </div>\n         </div>\n      </div>\n      <div id=\"main\">\n         <div class=\"container\">\n            @for(jobrow <- jobrows){\n            <div class=\"row\">\n               @for(job <- jobrow){\n               <div class=\"span4\">\n                  <article class=\"job\">\n                     <header class=\"clearfix\">\n                        <div class=\"meta\">\n                           <span class=\"count\">@job.count</span>\n                        </div>\n                        <div class=\"more\">\n                           <a href=\"#job-detail@job.count\" data-toggle=\"modal\">\u8a73\u7d30\u8cc7\u8a0a</a>\n                        </div>\n                     </header>\n                     <div class=\"card\">\n                        <div class=\"card-body\">\n                           <h1>@job.company_name</h1>\n                           <p>@job.job_name</p>\n                        </div>\n                        <div class=\"card-footer\">\n                           <span class=\"label label-important\">@job.note1</span>\n                           <span class=\"label label-info\">@job.note2</span>\n                        </div>\n                     </div>\n                  </article>\n               </div>\n               }\n            </div>\n            }\n         </div>\n         <div class=\"more-job\">\n            <a href=\"@nextPageNum\" class=\"btn btn-large btn-block\">\u66f4\u591a\u5b78\u7fd2\u6a5f\u6703</a>\n         </div>\n      </div>\n      </div>\n      <footer id=\"footer\">\n         <div class=\"container\">\n            <blockquote>\n               <p>\u540c\u6a23\u5728\u300c22K \u85aa\u6c34\u300d\u9019\u689d\u5782\u76f4\u865b\u7dda\u4e0a\uff0c\u6709\u8d85\u7d1a\u721b\u7684\u5de5\u4f5c\uff0c\u4e5f\u6709\u8d85\u7d1a\u597d\u7684\u5de5\u4f5c\uff0c\u7aef\u770b\u4f60\u5982\u4f55\u9078\u64c7\u3002\u4e8b\u5be6\u4e0a\uff0c\u540c\u6a23\u5728\u4efb\u4f55\u85aa\u8cc7\u6c34\u6e96\u7684\u5782\u76f4\u7dda\u4e0a\uff0c\u90fd\u6709\u8d85\u7d1a\u721b\u7684\u5de5\u4f5c\uff0c\u4e5f\u6709\u8d85\u7d1a\u597d\u7684\u5de5\u4f5c\u3002\n               </p>\n               <small>Mr Jamie <cite title=\"Source Title\">\u6797\u4e4b\u6668</cite></small>\n            </blockquote>\n            <blockquote>\n               <p>\u6240\u4ee5\u91cd\u9ede\u6839\u672c\u4e0d\u662f 22K\uff0c\u91cd\u9ede\u662f\u5e74\u8f15\u4eba\uff0c\u65e2\u7136\u4f60\u7684\u653f\u5e9c\u3001\u4f60\u7684\u5b78\u6821\u5df2\u7d93\u8aa4\u4e86\u4f60\uff0c\u4f60\u8a72\u7528\u4ec0\u9ebc\u65b9\u6cd5\uff0c\u627e\u5230\u9858\u610f\u6559\u4f60\u7684\u5e2b\u7236\uff0c\u82b1 1 \u842c\u500b\u5c0f\u6642\u8ddf\u4ed6\u5b78\u7fd2\uff0c\u6700\u5f8c\u8b8a\u6210\u7099\u624b\u53ef\u71b1\uff0c\u6709\u8d85\u5f37\u6230\u529b\u7684\u4eba\u624d\u3002\u90a3\u6642\u4ec0\u9ebc 22K\uff0c\u82b1 100K \u4e5f\u4e0d\u4e00\u5b9a\u8acb\u5f97\u52d5\u4f60\u3002\n               </p>\n               <small>Mr Jamie <cite title=\"Source Title\">\u6797\u4e4b\u6668</cite></small>\n            </blockquote>\n         </div>\n      </footer>\n      @for(jobrow <- jobrows){\n      @for(job <- jobrow){\n      <div id=\"job-detail@job.count\" class=\"modal job-detail hide fade\">\n         <div class=\"modal-header\">\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n            <h3><span class=\"salary\">\u6708\u85aa @job.salary \u5143</span>\u7684\u5b78\u7fd2\u6a5f\u6703\uff01</h3>\n         </div>\n         <div class=\"modal-body\">\n            <table class=\"table table-bordered\">\n               <tr>\n                  <th>\u5b78\u7fd2\u74b0\u5883</th>\n                  <td>@job.company_name</td>\n                  <th>\u5b78\u7fd2\u8077\u4f4d</th>\n                  <td>@job.job_name</td>\n               </tr>\n               <tr>\n                  <th>\u5b78\u7fd2\u5730\u9ede</th>\n                  <td>@job.company_location</td>\n                  <th>\u5b78\u7fd2\u5167\u5bb9</th>\n                  <td><a href=\"@job.job_url\">\u4f60\u53ef\u4ee5\u5b78\u5230...</a></td>\n               </tr>\n            </table>\n         </div>\n         <div class=\"modal-footer\">\n            <a href=\"@job.job_url\" class=\"btn btn-primary btn-block btn-large\">\u61c9\u5fb5\u8077\u7f3a</a>\n         </div>\n      </div>\n      }\n      }\n   </body>\n   }\n\n\n\n\u6e2c\u8a66\u7d50\u679c\n\u57f7\u884c\n\nrun\n\u5c31\u53ef\u4ee5\u5728 http://localhost:9000 \u770b\u5230\u57f7\u884c\u7d50\u679c\u4e86\u3002\n\n\n\u90e8\u5c6c\u5230 Heroku\nHeroku \u73fe\u5728\u6709\u652f\u63f4 Play framework \u4e86\uff0c\u6240\u4ee5\u6574\u500b\u90e8\u5c6c\u7684\u904e\u7a0b\u4e5f\u975e\u5e38\u7c21\u55ae\u3002\n\u53ef\u4ee5\u53c3\u8003 Getting Started with Play! on Heroku\u3002\n\n\n\n\u6211\u5f9e\u4f86\u90fd\u4e0d\u77e5\u9053\u81ea\u5df1\u623f\u9593\u7684\u90a3\u6247\u9580\u5c31\u662f\u4efb\u610f\u9580\uff0c \u53ea\u8981\u8d70\u51fa\u53bb\u5c31\u80fd\u9023\u5230\u4efb\u4f55\u5730\u65b9\u53bb\u3002\n\u7af9\u672c\u7950\u592a\u8702\u871c\u8207\u56db\u8449\u8349", 
      "tags": "Other", 
      "loc": "/posts/play-note-1.html", 
      "title": "Scala \u4f7f\u7528 Play \u7b46\u8a18 (1)"
    }, 
    {
      "text": "\u4e4b\u524d\u96d6\u7136\u5f9e Octopress \u8df3\u5230 Pelican \u812b\u96e2\u4e86 Ruby \u7684\u74b0\u5883\uff0c\u4e5f\u82b1\u4e86\u4e00\u4e9b\u6642\u9593\u5728\u4fee\u6539 Theme\u3002\n\u4f46\u662f\u9084\u662f\u5f88\u96e3\u559c\u6b61\u4e0a Pelican\uff0c\u6700\u4e3b\u8981\u7684\u5c31\u662f\u4ed6\u7684\u624b\u518a\u5f88\u96e3\u95b1\u8b80\uff0c\u800c\u4e14\u8cc7\u8a0a\u6709\u9ede\u5c11 Orz\u3002\nNikola \u7684\u624b\u518a\u5c31\u6bd4\u8f03\u7c21\u6f54\u6e05\u695a\uff0c\u4e5f\u6bd4\u8f03\u597d\u67e5\u8a62\u3002\n\u4e14\u67e5\u8a62\u4e86\u4e00\u4e0b Nikola \u7684\u4e8b\u8e5f\u4e4b\u5f8c\u767c\u73fe\u4ed6\u592a\u5e25\u4e86\uff01\nWiki \u5c3c\u53e4\u62c9 \u7279\u65af\u62c9\n\u6240\u4ee5\u5f8c\u4f86\u5c31\u6c7a\u5b9a\u8df3\u904e\u4f86\u4e86\uff5e\n\n\u5728 Windows \u4e0a\u5b89\u88dd Nikola\n\u5728 Windows \u4e0a\u9762\u5b89\u88dd Nikola \u5be6\u5728\u662f\u6709\u9ede\u60b2\u5287\uff0c\u56e0\u70ba\u4ed6\u6240\u4f7f\u7528\u7684 Library \u6709\u4e00\u4e9b\u6703\u4f7f\u7528\u5230 C \u7684\u7a0b\u5f0f\u78bc\u3002\n\u56e0\u6b64\u9700\u8981\u7de8\u8b6f\uff0c\u53ef\u662f\u4ed6\u53c8\u6703\u9023\u7d50\u5230\u5176\u4ed6 C Library\uff08\u4f8b\u5982 pillow or pil\uff09\uff0c\u6240\u4ee5\u5c31\u5361\u5728\u5b89\u88dd\u76f8\u4f9d\u6027\u5957\u4ef6\u9019\u4e00\u95dc\u3002\n\u96d6\u7136\u7528 pip \u5b89\u88dd pil \u6216\u8005\u662f pillow \u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u5b89\u88dd\u5b8c\u4e4b\u5f8c\u6703\u56e0\u70ba\u7f3a\u5c11\u67d0\u4e9b library \u800c\u5c0e\u81f4\u50cf jpg \u7b49\u5716\u7247\u683c\u5f0f\u4e0d\u88ab\u652f\u63f4\u3002\n\u6700\u5f8c\u662f\u627e\u5230\u4e86 Unofficial Windows Binaries for Python Extension Packages \u4e0b\u8f09\u4e86 pil \u624d\u89e3\u6c7a\u4e86\u76f8\u4f9d\u6027\u5b89\u88dd\u554f\u984c\u3002\n\u9019\u4e9b\u76f8\u4f9d\u6027\u7684 Library \u5b89\u88dd\u5b8c\u7562\u4e4b\u5f8c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 pip \u5b89\u88dd Nikola \u4e86\u3002\nBut ! \u5c31\u662f\u9019\u500b But !\u3002\n\u7576\u4f60\u958b\u5fc3\u5b89\u88dd\u5b8c\u7562 Nikola \u4e4b\u5f8c\u6703\u767c\u73fe\u7121\u6cd5\u4f7f\u7528 nikola \u7684\u6307\u4ee4\u3002\n\u56e0\u70ba\u4ed6\u653e\u5728 Python Scripts \u8cc7\u6599\u593e\u5e95\u4e0b\u7684 Script \u6a94\u540d\u662f nikola\uff0cWindows \u4e0d\u6703\u89ba\u5f97\u4ed6\u662f\u57f7\u884c\u6a94\uff0c\u6240\u4ee5\u6c92\u6709\u8fa6\u6cd5\u57f7\u884c\u6307\u4ee4\u3002\n( \u5982\u679c\u6709\u4eba\u6709\u77e5\u9053\u5176\u4ed6\u57f7\u884c\u65b9\u5f0f\u7684\u8a71\u8acb\u8ddf\u6211\u8aaa m(_ _)m )\n\u4e00\u958b\u59cb\u6211\u5f88\u5929\u771f\u7684\u89ba\u5f97\u6539\u6210 nikola.py \u5c31\u6c92\u6709\u554f\u984c\u4e86\uff0c\u4f46\u662f\u5728\u57f7\u884c\u4e2d import \u6703\u51fa\u554f\u984c\uff0c\u56e0\u70ba nikola \u9019\u500b\u540d\u5b57\u91cd\u8907\u4e86 Orz\u3002\n\u6240\u4ee5\u6700\u5f8c\u662f\u591a\u5beb\u4e00\u500b nikola.bat\n\nC:\\Python27\\python.exe C:\\Python27\\Scripts\\nikola %1 %2 %3 %4\n\n\u653e\u5728 Scripts \u8cc7\u6599\u593e\u5e95\u4e0b\uff0c\u4f86\u89e3\u6c7a\u9019\u500b\u554f\u984c\u3002\n\u4e0a\u9762\u7684 Script \u56e0\u70ba\u6211\u627e\u4e0d\u5230 Windows \u88e1\u9762\u4ee3\u8868\u6240\u6709\u50b3\u5165\u53c3\u6578\u7684\u7b26\u865f\uff0c\n\u53ea\u597d\u5c31\u571f\u6cd5\u7149\u92fc\u4e00\u500b\u4e00\u500b\u8f38\u5165\uff0c\u6240\u4ee5\u6700\u591a\u53ea\u80fd\u8f38\u5165\u56db\u500b\u53c3\u6578\u3002\n\uff08\u5982\u679c\u6709\u4eba\u6709\u597d\u5f97\u89e3\u6c7a\u65b9\u5f0f\u4e5f\u8acb\u6559\u6211\u4e00\u4e0b m(_ _)m )\n\n\n\nNikola \u7684\u4e00\u4e9b\u6307\u4ee4\n\u521d\u59cb\u5316\n\nnikola init <<\u8cc7\u6599\u593e\u540d\u7a31>>\n\u7de8\u8b6f\n\nnikola build\n\u555f\u52d5\u6e2c\u8a66 Server\n\nnikola serve\n\u6216\n\nnikola serve --address 0.0.0.0 --port 8080\n\n\nNikola \u7684\u8a9e\u6cd5\u7b46\u8a18\n\u9019\u908a\u7d00\u9304\u4e00\u4e0b Nikola \u88e1\u9762\u624d\u6709\u7684\u8a9e\u6cd5\nNote:\n\n.. Note:: \u9019\u5c31\u662f Note \u7684\u6548\u679c\n\n\nNote\n\u9019\u5c31\u662f Note \u7684\u6548\u679c\n\nContents:\n\n.. contents::\n\nContents \u52a0\u4e0a\u4e00\u4e9b\u5176\u4ed6\u7684 Class \u5c6c\u6027:\n\n.. class:: alert alert-info pull-left\n\n.. contents::\n\nSildes:\n\n.. slides::\n\n   https://dl.dropbox.com/u/15537823/Blog/SildeDemo/wallpaper-1427130.jpg\n   https://dl.dropbox.com/u/15537823/Blog/SildeDemo/wallpaper-1427132.jpg\n   https://dl.dropbox.com/u/15537823/Blog/SildeDemo/wallpaper-1427197.jpg\n\n\n        \n        \n  \n  \n\n        \n\n\n\n\n                        \u2039\n                \u203a\n                Youtube:\n\n.. youtube:: gtTyWCjvSfI\n\n\u9019\u90e8\u52d5\u756b\u771f\u7684\u5f71\u97ff\u4e86\u6211\u6574\u500b\u4eba\u751f\u963f\uff0c\u5922\u5e7b\u822c\u7684 80 \u5e74\u4ee3 XDDDD\n\n\u9019\u4e26\u975e\u55ae\u7d14\u53ea\u662f\u6d41\u901d\u7684\u5b63\u7bc0\uff0c\u4ea6\u662f\u90a3\u300c\u6c38\u9060\u7684\u590f\u5b63\u300d\u901d\u53bb\u7684\u5e74\u4ee3\u3002\u5922\u5e7b\u822c\u7684 80's\n\u2014\u304d\u307e\u3050\u308c\u30aa\u30ec\u30f3\u30b8\u2606\u30ed\u30fc\u30c9", 
      "tags": "Other", 
      "loc": "/posts/pelican-to-nikola.html", 
      "title": "Pelican \u8f49\u79fb\u5230 Nikola"
    }, 
    {
      "text": "\u6211\u5e38\u7528\u7684 Linux \u74b0\u5883\u4e00\u5b9a\u6703\u88dd\u4e0b\u9762\u5e7e\u500b\u5de5\u5177\nzsh \u8207 oh-my-zsh\nvim \u5f88\u591a\u5f88\u591a vim plugin\ntmux \u8207\u4ed6\u7684\u5feb\u6a02\u8a2d\u5b9a\u6a94\n\u4e00\u958b\u59cb\u958b\u767c\u74b0\u5883\u53ea\u6709\u4e00\u5169\u53f0\uff0c\u4e00\u500b\u500b\u624b\u52d5\u5b89\u88dd\u9084\u6c92\u4ec0\u9ebc\u554f\u984c\u3002\n\u518d\u52a0\u4e0a\u90a3\u6642\u5f8c\u6709\u5f9e vgod \u7684 \u5206\u4eab\u6211\u7684 vim \u8a2d\u5b9a\u6a94 \u9019\u6587\u7ae0\u4e2d\u5b78\u5230\u4f7f\u7528 pathogen + github \u4f86\u7ba1\u7406 vim\u3002\n\u6240\u4ee5\u4e00\u76f4\u5c31\u61f6\u5f97\u53bb\u60f3\u8fa6\u6cd5\u6574\u7406\u9019\u4e9b\u8a2d\u5b9a\u6a94\u3002\n\u53ef\u662f\u6700\u8fd1\u8981\u7ba1\u7406\u7684\u6a5f\u5668\u8b8a\u591a\u4e86\uff0c\u800c\u4e14\u52a0\u4e0a\u6700\u8fd1\u518d\u9032\u884c porting \u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u53c8\u6709\u5404\u7a2e\u4e0d\u540c\u7248\u672c\u7684 Linux \u9700\u8981\u8a2d\u5b9a\u3002\n\u5c31\u5728\u4eca\u5929\uff0c\u7d42\u65bc \u7206\uff5e\uff5e\uff5e\uff5e\u767c\uff5e\uff5e\uff5e\uff5e\u5566\uff01\uff01\uff01\uff01\n\u611f\u8b1d JosephJ \u7684 \u4e00\u500b\u6307\u4ee4\u5b89\u88dd\u6240\u6709 Linux \u8a2d\u5b9a\u6a94 \u4ee5\u53ca\u8a72\u7bc7\u6587\u7ae0\u7684\u56de\u61c9\u3002\n\u6211\u6700\u5f8c\u4e5f\u5f9e pathogen.vim \u53db\u9003\uff0c\u4f7f\u7528 github + shell script + vundle \u4f86\u5b8c\u6210\u6211 zsh\u3001tmux \u8207 vim \u7684\u8a2d\u5b9a\u3002\n\u95dc\u65bc vundle \u7684\u4f7f\u7528\u65b9\u5f0f\u8207\u8a2d\u5b9a\u6211\u662f\u53c3\u8003 \u4f7f\u7528Vundle\u66f4\u597d\u7684\u7ba1\u7406\u4f60\u7684Vim\u63d2\u4ef6 \u96d6\u7136\u662f\u7c21\u9ad4\u7684\u3002\u4e0d\u904e\u8a2d\u5b9a\u8207\u4f7f\u7528\u65b9\u5f0f\u90fd\u5beb\u5f97\u975e\u5e38\u8a73\u7d30\u3002\n\u7d93\u904e\u4e00\u500b\u65e9\u4e0a\u7684\u52aa\u529b\uff0c\u6211\u4e5f\u7d42\u65bc\u53ef\u4ee5\u4f7f\u7528\n\nwget -O - https://raw.github.com/Swind/linux-config/master/install.sh | sh\n\n\u628a Linux \u7d66\u8a2d\u5b9a\u5b8c\u7562\u4e86\uff5e\n2013.02.08 update\n\u6211\u767c\u73fe\u5728\u5176\u4ed6\u6a5f\u5668\u4e0a\u4f7f\u7528\u7684\u6642\u5019\u6703\u6709:\n\nERROR: certificate common name \u201c*.a.ssl.fastly.net\u201d doesn\u2019t match requested host name \u201craw.github.com\u201d.\nTo connect to raw.github.com insecurely, use \u2018--no-check-certificate\u2019.\n\n\u7684\u932f\u8aa4\u8a0a\u606f\uff0c\u76ee\u524d\u6211\u9084\u6c92\u6709\u5f88\u4ed4\u7d30\u7684\u53bb\u627e\u539f\u56e0\u3002\n\u4e0d\u904e\u5982\u4ed6\u6240\u6558\u8ff0\u7684\uff0c\u52a0\u5165 --no-check-certificate \u5c31\u6c92\u6709\u554f\u984c\u4e86\u3002\n\nwget --no-check-certificate -O - https://raw.github.com/Swind/linux-config/master/install.sh | sh\n\n\u9664\u6b64\u4e4b\u5916 JosephJ \u6240\u7d66\u7684\u5efa\u8b70\u4e5f\u975e\u5e38\u7684\u5be6\u7528\uff0c\n\u5c07\u5e38\u7528\u7684\u5de5\u5177\u8207\u6307\u4ee4\u6574\u7406\u6210\u4e00\u4efd\u6587\u4ef6\uff0c\u4f86\u5354\u52a9\u7ba1\u7406\u8207\u8a18\u61b6\u3002\n\u76ee\u524d\u6211\u662f\u7528 Nikola (\u5c0d\u6c92\u932f\uff0c\u6240\u5f9e Octopress \u8df3\u5230 Pelican \u53c8\u8df3\u5230 Nikola \u4e86 XD) stories \u4f86\u4f5c\u7b46\u8a18\u3002\n\n\u76ee\u524d\u5b89\u88dd\u7684 script \u662f\u53c3\u8003 JosephJ \u7684\u5167\u5bb9\u4fee\u6539\u6210\u9019\u6a23\n\n#!/bin/bash\nCONFIG_HOME=.myconfig\n\nwarn(){\n        echo \"$1\" >&2\n}\n\ndie(){\n        warn \"$1\"\n        exit 1\n}\n\n[ -e \"~/.config\" ] && die \"~/config already exists.\"\n\ncd ~\n\n#Checkout my config\ngit clone git://github.com/Swind/linux-config.git \"$CONFIG_HOME\"\n\nln -s $CONFIG_HOME/.vim .vim\nln -s .vim/.vimrc .vimrc\nln -s $CONFIG_HOME/.zshrc .zshrc\nln -s $CONFIG_HOME/.tmux.conf .tmux.conf\n\n#install vundle\ngit clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle\n\n#install oh-my-zsh\ncurl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh\n\necho \"Configuration files has been installed.\"\ncd \"$CONFIG_HOME\"\n\n\n\n\u8a71\u8aaa\uff0c\u6c34\u661f\u9818\u822a\u54e1\u771f\u7684\u4e0d\u6127\u662f\u6587\u9752\u52d5\u756b\u4e4b\u9996\u963f\uff01\uff01\u4eca\u5929\u7684\u60c5\u6cc1\u8b93\u6211\u60f3\u8d77\u4e86\u52d5\u756b\u4e2d\u7684\u9019\u53e5\u8a71\u3002\n\n\u5982\u679c\u5982\u679c\u5c0d\u81ea\u5df1\u7684\u80fd\u529b\u611f\u5230\u6eff\u8db3\u7684\u8a71\uff0c\u5c31\u4e0d\u6703\u518d\u9032\u6b65\u4e86\u3002\u6240\u4ee5\u8a8d\u6e05\u81ea\u5df1\u9084\u9060\u9060\u4e0d\u884c\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e8b\u60c5\u3002\n\u6643ARIA The ORIGINATION", 
      "tags": "", 
      "loc": "/posts/install-linux-config.html", 
      "title": "\u4e00\u9375\u5b89\u88dd Linux \u8a2d\u5b9a\u6a94"
    }, 
    {
      "text": "Contents\nGit\u6f02\u4eae\u4e00\u9ede\u7684 log \u986f\u793a\u65b9\u5f0f\n\u8b93\u6240\u6709 submodule \u57f7\u884c git pull\n\u6240\u6709 submodule checkout master\n\nsg3 utils\nLinux \u7cfb\u7d71\u8a2d\u5b9a\nEclipse \u76f8\u95dc\nGDB\nVIM\ntmux - The Terminal Multiplexer\nCMake\u5efa\u7acb\u5728\u6700\u4e0a\u5c64\u7684 CMakeLists.txt\uff0c\u5e95\u4e0b\u6709 src \u8207 tests \u5206\u5225\u653e\u7f6e\u539f\u59cb\u78bc\u8207\u6e2c\u8a66\u7a0b\u5f0f\u78bc\n\u5728 src \u5e95\u4e0b\u7684 CMakeLists.txt\n\u5728 tests \u5e95\u4e0b\u7684 CMakeLists.txt\n\n\n\nGit\n\n\u6f02\u4eae\u4e00\u9ede\u7684 log \u986f\u793a\u65b9\u5f0f\n\ngit config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --\"\n\n\u51fa\u8655 \u9177\u6bbc - Coolbash.cn - Git \u986f\u793a\u6f02\u4eae\u65e5\u8a8c\u7684\u5c0f\u6280\u5de7\n\n\n\u8b93\u6240\u6709 submodule \u57f7\u884c git pull\n\ngit submodule foreach git pull\n\n\n\n\u6240\u6709 submodule checkout master\n\ngit submodule foreach git checkout master\n\n\n\n\nsg3 utils\n\u5217\u51fa\u6240\u6709 scsi \u786c\u9ad4\n\nsg_scan\n\n\u8b80\u6a94\u6848\n\nsg_raw.exe -v -r 512 \u2013o read512byte.txt PD3 28 00 00 00 03 00 00 00 01 00\n\n\u5beb\u6a94\u6848\n\u5176\u4e2d wdata512byte \u662f\u4e8b\u5148\u5beb\u597d\u7684\u4e00\u500b\u6a94\u6848\uff0c\u5f8c\u9762\u7684 01 \u4ee3\u8868\u7684\u662f\u8981\u5beb\u7684 sector \u6578\u91cf\u3002\n\nsg_raw -v -s 512 PD3 2a 00 00 00 01 00 00 00 01 00 < wdata512byte\n\n\n\nLinux \u7cfb\u7d71\u8a2d\u5b9a\nSSH login without password\n\n#!/bin/bash\n\nif [ -f ~/.ssh/id_rsa.pub 0 ]\nthen\n        account=$1\n        ip=$2\n        ssh-keygen -t rsa\n        ssh $account@$ip mkdir -p .ssh\n        cat ~/.ssh/id_rsa.pub | ssh $account@$ip 'cat >> ~/.ssh/authorized_keys'\nfi\n\n\u4f7f\u7528 rz \u8207 sz\n\nyum install lrzsz\n\n\u5224\u65b7 Linux \u767c\u884c\u7248\u672c\n\ncat /etc/issue\n\n\n\nEclipse \u76f8\u95dc\n\u641c\u5c0b\n\nShift + Ctrl + T \u53ef\u4ee5\u641c\u5c0b Class\nShift + Ctrl + R \u53ef\u4ee5\u641c\u5c0b\u6a94\u6848\n\n\u6539\u8b8a\u9078\u64c7\u4e4b\u5f8c\u6703\u628a\u76f8\u540c\u540d\u7a31\u7684\u9078\u64c7\u8d77\u4f86\u7684\u529f\u80fd\u7684\u984f\u8272\n\nMark occurences\n\u4fee\u6539\u7684\u5730\u65b9\u5728\n\nPreferences > General > Editors > Text Editors > Annotations\n\n\nGDB\n\u4f7f\u7528 gdb \u89c0\u770b core file \u8cc7\u8a0a\n\ngdb -c <corefile> <execfile>\n\u986f\u793a\u6240\u6709 thread\n\ninfo threads\n\u9032\u5165\u67d0\u500b thread\n\nthread <thread number>\n\n\nVIM\n\u907f\u514d\u5728 paste \u7684\u6642\u5019\u89f8\u767c tab \u529f\u80fd\n\nset paste\nvgod \u6709\u4f5c\u500b\u5feb\u901f\u9375 , + p\n\n\ntmux - The Terminal Multiplexer\n\u5b98\u7db2 http://tmux.sourceforge.net/\n\u8a2d\u5b9a\u6a94 https://github.com/Swind/linux-config/blob/master/.tmux.conf\n\u6307\u4ee4\n\ntmux        #\u555f\u52d5 tmux \u4e26\u4e14\u5efa\u7acb\u65b0\u7684 Session\ntmux attach #\u9023\u7dda\u5230\u5df2\u7d93\u5b58\u5728\u7684 Session\n\n\u71b1\u9375\nCtrl + a\n\u555f\u52d5\u71b1\u9375\nn\n\u4e0b\u4e00\u500b\u8996\u7a97\np\n\u4e0a\u4e00\u500b\u8996\u7a97\n|\n\u5728\u524d\u5f8c\u5169\u500b\u8996\u7a97\u79fb\u52d5\nc\n\u5efa\u7acb\u65b0\u8996\u7a97\n&\n\u95dc\u9589\u8996\u7a97\n\n\nCMake\n\n\u5efa\u7acb\u5728\u6700\u4e0a\u5c64\u7684 CMakeLists.txt\uff0c\u5e95\u4e0b\u6709 src \u8207 tests \u5206\u5225\u653e\u7f6e\u539f\u59cb\u78bc\u8207\u6e2c\u8a66\u7a0b\u5f0f\u78bc\n\nproject(ProjectName)\n\nset(ProjectName_version_major 0)\nset(ProjectName_version_minor 1)\n\nset(CMAKE_VERBOSE_MAKEFILE OFF) #Show all compile message\n\n# 2.6.3 is needed for ctest support\ncmake_minimum_required(VERSION 2.6.3)\n\nlink_directories(\"/usr/local/lib\")\n\n#CMake Config\nset (CMAKE_C_COMPILER \"/usr/bin/clang\")      #Use Clang as C default compiler\nset (CMAKE_CXX_COMPILER \"/usr/bin/clang++\")  #Use Clang++ as C++ default compiler\n\nset (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/CMakeModules/\")\nenable_testing()\n\nadd_subdirectory(src)\nadd_subdirectory(tests)\n\n# Show the environment variables\nmessage(\"\n-------------------------------------------------------\nProjectName Version ${ProjectName_version_major}.${ProjectName_version_minor}\n\nCurrent compiler options:\n    CC:                                 ${CMAKE_C_COMPILER}\n    CXX:                                ${CMAKE_CXX_COMPILER}\n    CFLAGS:                             ${CPPUTEST_C_FLAGS}\n    CXXFLAGS:                           ${CPPUTEST_CXX_FLAGS}\n    LDFLAGS:                            ${CPPUTEST_LD_FLAGS}\n\nPorject Information:\n    Project Name:                       ${PROJECT_NAME}\n    Project Source Dir:                 ${PROJECT_SOURCE_DIR}\n    Project Binary Dir:                 ${PROJECT_BINARY_DIR}\n-------------------------------------------------------\n\")\n\n\n\n\u5728 src \u5e95\u4e0b\u7684 CMakeLists.txt\n\nset(CMAKE_VERBOSE_MAKEFILE ON) #Show all compile message\n\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Werror\")\n\nSUBDIRS(subdirs)\n\nINCLUDE_DIRECTORIES(./subdirs)\n\n#Use Google Performance Tools\nFIND_PACKAGE(GooglePerfTools REQUIRED)\ninclude_directories(${GOOGLE_PERFTOOLS_INCLUDE_DIR})\n\nSET(sub_modules\n        sub_modules.c\n)\n\nSET(LinkLibraries\n        sub_modules\n    )\n\nADD_EXECUTABLE(iscsid ${sub_modules})\nADD_LIBRARY(iscsi_test ${LinkLibraries})\n\nTARGET_LINK_LIBRARIES(iscsid ${LinkLibraries})\n\n\n\n\u5728 tests \u5e95\u4e0b\u7684 CMakeLists.txt\n\n#Tell cmake there are c and cpp files in this project\nproject(UnitTest C CXX)\n\nset(CMAKE_VERBOSE_MAKEFILE OFF)\ncmake_minimum_required(VERSION 2.6.3)\n\n#========CMake parameters\nenable_testing()\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/CMakeModules/\")\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -g\")\n\ninclude_directories(\"/usr/local/include\")\ninclude_directories(\"${CMAKE_SOURCE_DIR}/src/config\")\nlink_directories(\"/usr/local/lib\")\n\n#========Add libraries\n\nSET(LIBS\n        ${LIBS}\n        ${CHECK_LIBRARIES}\n        pthread\n\n    SOURCE\n        source_modules\n\n    TEST\n        test_modules\n)\n\nset(SOURCE\n    CppUTestExample.cpp\n)\n\ninclude_directories(. ../src/sub_modules)\nINCLUDE_DIRECTORIES(.)\n\nadd_executable(Runner ${SOURCE})\ntarget_link_libraries(Runner ${LIBS})\n\nadd_test(Runner ${CMAKE_CURRENT_BINARY_DIR}/Runner)", 
      "tags": "Linux", 
      "loc": "/stories/linux-note.html", 
      "title": "Linux \u6307\u4ee4\u7b46\u8a18"
    }, 
    {
      "text": "\u6703\u60f3\u5230\u7528\u9019\u500b\u662f\u7531\u65bc EPUBConverter Go \u7684\u7248\u672c\u96d6\u7136\u904b\u4f5c\u4e0a\u5df2\u7d93\u6bd4 Scala \u7248\u672c\u5feb\u4e0a\u4e0d\u5c11\u4e86\u3002\n\u4f46\u6211\u767c\u73fe\u5728\u57f7\u884c\u7684\u6642\u5019 CPU \u4f7f\u7528\u7387\u4e00\u76f4\u90fd\u53ea\u6709 25 %\uff0c\u6240\u4ee5\u624d\u60f3\u8a66\u8a66\u770b\u4f7f\u7528 goroutine \u770b\u80fd\u4e0d\u80fd\u8b93\u4ed6\u8f49\u63db\u66f4\u5feb\u4e00\u9ede\u3002\n\u4f9d\u7167\u6587\u4ef6\u6240\u8aaa\uff0c\u5728\u57f7\u884c IO \u76f8\u95dc\u52d5\u4f5c\u7684\u6642\u5019\uff0c\u6703\u5c07 CPU \u8b93\u7d66 goroutine \u4f86\u4f7f\u7528\uff0c\u90a3\u9ebc\u5c0d\u65bc EPUBConverter \u7684\u6548\u80fd\u61c9\u8a72\u6703\u6709\u986f\u8457\u7684\u63d0\u6607\u3002\n\u96d6\u7136\u6709\u4eba\u8aaa goroutine \u8ddf Scala \u7684 actor \u6709\u9ede\u50cf\uff0c\u4f46\u662f actor \u7684\u6a21\u578b\u5c31\u5f88\u5177\u9ad4\u8ddf\u660e\u78ba\u3002\n\u800c goroutine \u5247\u662f\u63d0\u4f9b\u4e00\u500b\u65b9\u4fbf\u5feb\u901f\u7684 thread \u64cd\u4f5c\u65b9\u5f0f\u3002\n\n\ngoroutine \u7684\u4f7f\u7528\u65b9\u5f0f\ngoroutine \u7684\u4f7f\u7528\u975e\u5e38\u7c21\u55ae\uff0c\u53ea\u8981\u5728\u547c\u53eb function \u7684\u6642\u5019\u5728\u524d\u9762\u52a0\u4e0a go \u5c31\u53ef\u4ee5\u4e86\u3002\n\ngo func()\n\u81f3\u65bc\u8981\u8ddf goroutine \u7684\u6e9d\u901a\u5247\u662f\u4f7f\u7528 channel\u3002\nchannel \u76ee\u524d\u6211\u4f7f\u7528\u7684\u611f\u89ba\u5f88\u50cf\u662f java \u4e2d\u7684 blocking queue\u3002\n\u4ed6\u7684\u5ba3\u544a\u65b9\u5f0f\u53ea\u8981\u5728\u4e00\u822c\u5ba3\u544a\u7684\u6642\u5019\u52a0\u500b chan \u7684\u95dc\u9375\u5b57\u5c31\u53ef\u4ee5\u4e86\u3002\n\nvar count chan int\n\n\u9019\u6a23\u5c31\u53ef\u4ee5\u900f\u904e <- \u8ce6\u503c\u8207\u53d6\u503c\n\n//\u5c07 i assign \u7d66 count\ncount <- i\n//\u5f9e count \u53d6\u51fa\u503c\nvalue := <- count\n\n\u800c\u8981\u6c7a\u5b9a channel \u53ef\u4ee5\u653e\u7684\u6578\u91cf\u5247\u662f\u53ef\u4ee5\u900f\u904e\n\ncount := make(chan int, 4)\n\n\u7684\u65b9\u5f0f\u4f86\u6c7a\u5b9a\u3002\n\u4ee5\u4e0a\u9762\u7684\u7a0b\u5f0f\u78bc\u70ba\u4f8b\u5b50\uff0c\u7576 count \u88e1\u9762\u6c92\u6709\u6771\u897f\u6642\uff0c\u4f7f\u7528 <- count \u6703 block \u4f4f\u76f4\u5230\u6709\u503c\u5beb\u5165\u3002\n\u800c\u4f7f\u7528 count <- \u7684\u6642\u5019\u7576\u88e1\u9762\u7684\u503c\u8d85\u904e 4 \u500b\u7684\u6642\u5019\uff0c\u5247\u6703 block \u4f4f\u7121\u6cd5\u5beb\u5165\uff0c\u76f4\u5230\u6709\u503c\u88ab\u53d6\u51fa\u3002\n\n\ngoroutine \u7684\u8a2d\u5b9a\n\u96d6\u7136\u5f8c\u4f86\u4f7f\u7528\u4e86 goroutine \u8b93\u6bcf\u4e00\u500b EPUB \u96fb\u5b50\u66f8\u7684\u8f49\u63db\u90fd\u53ef\u4ee5\u5e73\u884c\u8655\u7406\uff0c\n\u4f46\u662f\u6211\u767c\u73fe CPU \u4f7f\u7528\u7387\u537b\u4f9d\u7136\u53ea\u6709 25 %\u3002\n\u5f8c\u4f86\u624d\u767c\u73fe\u662f\u9084\u8981\u518d\u8a2d\u5b9a GOMAXPROCS \u4f86\u8b93 Go \u77e5\u9053\u8981\u7528\u5e7e\u500b\u6838\u5fc3\u3002\n\n//\u900f\u904e runtime.NumCPU() \u53d6\u5f97 CPU \u6838\u5fc3\u6578\nruntime.GOMAXPROCS(runtime.NumCPU())\n\n\u9019\u6a23\u5c31\u7d42\u65bc\u770b\u5f97\u5230 CPU \u4f7f\u7528\u7387\u5230 100% \u4e86 ...\n\n\nGolang \u7684 benchmark \u6e2c\u8a66\ntesting package\nGo \u53e6\u5916\u4e00\u9ede\u8b93\u6211\u9084\u883b\u559c\u6b61\u7684\u5c31\u662f\uff0c\u4ed6\u7684\u8a2d\u8a08\u975e\u5e38\u7684\u5be6\u7528\u3002\n\u96d6\u7136\u9084\u6c92\u6709\u5f88\u5b8c\u6574\uff0c\u4f46\u662f\u4e00\u822c\u958b\u767c\u5e38\u7528\u7684\u6771\u897f\u4ed6\u90fd\u6703\u5e6b\u4f60\u60f3\u5230\u3002\n\u4f8b\u5982\u5beb\u5728 test case \u5167\u7684 benchmark\u3002\n\npackage main\n\nimport (\n        \"runtime\"\n        \"testing\"\n)\n\nfunc BenchmarkConvertCore4(b *testing.B) {\n        // 4 \u4ee3\u8868\u4f7f\u7528\u7684\u6838\u5fc3\u6578\n        executeConvert(\"./testdata\", 4)\n}\n\n\u6e2c\u8a66\u7d50\u679c\n\u4f7f\u7528\u56db\u6838\u5fc3:\n\nBenchmarkConvertCore4          1        9775559100 ns/op\nok      epubconverter   10.282s\n\n\u4f7f\u7528\u55ae\u6838:\n\nBenchmarkConvertCore1          1        33146895900 ns/op\nok      epubconverter   33.673s", 
      "tags": "Go", 
      "loc": "/posts/goroutine-note-1.html", 
      "title": "Golang - Goroutine \u7b46\u8a18 (1)"
    }, 
    {
      "text": "\u4e00\u958b\u59cb\u7684 Scala \u7248\u672c\u672c\u4f86\u662f\u81ea\u5df1\u5beb\u4f86\u81ea\u5df1\u7528\u7684\u5c0f\u5de5\u5177\uff0c\u53ef\u662f\u6c92\u60f3\u5230\u7adf\u7136\u6709\u4eba\u6709\u7528\u9084\u6709\u56de\u5831\u554f\u984c\u3002\n\u5927\u53d7\u611f\u52d5\u4e4b\u9918\uff08\u8aa4\uff09\uff0c\u800c\u51fa\u73fe\u4e86\u9019\u500b\u5168\u65b0\u611f\u53d7\u7684 EPUBConverter 0.0.2\uff0c\u7d55\u5c0d\u4e0d\u662f\u56e0\u70ba\u624b\u7662\u60f3\u8981\u8a66\u8a66\u770b Go\u3002\nP.S 2012.12.09 \u66f4\u65b0 - \u4fee\u6b63\u4e86\u9ce5 Bug \u6240\u4ee5\u5230 0.0.3 \u4e86\u3002\nEPUBConverter 0.0.3 \u4e0b\u8f09\nEPUBConverter Source Code\n\u9019\u500b\u7248\u672c\u6bd4\u4e4b\u524d\u597d\u5f97\u5730\u65b9\u5728\u65bc\uff0c\u9019\u6b21\u4f7f\u7528\u4e86 \u65b0\u540c\u6587\u5802 \u7684\u7c21\u7e41\u8f49\u63db\u5c0d\u7167\u8868\u3002\n\u9664\u4e86\u55ae\u5b57\u8f49\u63db\u4e4b\u5916\uff0c\u9084\u591a\u4e86\u4e00\u500b\u8a5e\u5f59\u8f49\u63db\u3002\n\u6240\u4ee5\u8f49\u63db\u54c1\u8cea\u61c9\u8a72\u6703\u6bd4\u4e4b\u524d Scala \u7684\u7248\u672c\u597d\u5f88\u591a\uff0c\u611f\u8b1d\u65b0\u540c\u6587\u5802\u5206\u4eab\u5c0d\u7167\u8868\u3002\n\u4ed6\u7684 Bookmarklet \u7248\u672c\u4e5f\u975e\u5e38\u597d\u7528\uff0c\u57fa\u672c\u4e0a\u6211 Go \u7684\u8f49\u63db\u908f\u8f2f\u5c31\u662f\u5f9e Bookmarklet \u7248\u672c\u79fb\u690d\u904e\u4f86\u7684\u3002\n\u4f46\u662f\u7531\u65bc\u6211\u76f4\u63a5\u5c07\u5c0d\u7167\u8868\u8f49\u63db\u6210 Golang \u88e1\u9762\u7684 map \u4e86\uff0c\u6240\u4ee5\u9019\u6b21\u5c31\u6c92\u6709\u8fa6\u6cd5\u8b93\u4f7f\u7528\u8005\u81ea\u5df1\u6539\u5c0d\u7167\u8868\u4e86\u3002\n\u4e0d\u904e\u6709\u8208\u8da3\u7684\u4eba\uff0c\u5728\u539f\u59cb\u78bc\u7684 tongwen_table \u8cc7\u6599\u593e\u5e95\u4e0b\uff0c\u6211\u6709\u653e\u4e86\u4e00\u500b\u7c21\u55ae\u7684\u8f49\u63db\u5de5\u5177\u3002\n\u53ef\u4ee5\u5229\u7528\u90a3\u500b\u91cd\u65b0\u7522\u751f Go \u7684 map\uff0c\u4f46\u662f\u6700\u5f8c\u9084\u662f\u5f97\u91cd\u65b0\u7de8\u8b6f\u6574\u500b EPUBConverter \u5c31\u662f\u4e86\u3002\n\n\u5ef6\u7e8c\u4e4b\u524d\u7684\u6211\u7684\u5077\u61f6\u5beb\u6cd5\uff0c\u9019\u6b21\u4e5f\u662f\u5beb\u6b7b\u53ea\u6703\u8f49\u63db source \u8cc7\u6599\u593e\u5e95\u4e0b\u7684 epub \u6a94\u6848\uff0c\u8f38\u51fa\u5230 target \u8cc7\u6599\u593e\u3002\n\u53ef\u662f\u9019\u6b21\u5168\u90e8\u90fd\u5728\u8a18\u61b6\u9ad4\u88e1\u9762\u8655\u7406\uff0c\u6240\u4ee5\u4e0d\u6703\u5148\u89e3\u58d3\u7e2e\u5230\u78c1\u789f\u4e0a\u7136\u5f8c\u58d3\u7e2e\u518d\u522a\u9664\u4e86\u3002\n\n/EPUBConverter\n           source\n           target\n           epubconverter.exe\n\n\u4ee5\u4e0a\uff0c\u5982\u679c\u6709\u4ec0\u9ebc\u554f\u984c\u7684\u8a71\u4e5f\u6b61\u8fce\u56de\u8986\uff0c\u5982\u679c\u6211\u6709\u9322\u6709\u9592\u800c\u4e14\u6c92\u4e8b\u505a\u7684\u8a71 Orz\u3002\n\u6703\u627e\u500b\u6642\u9593\u7e7c\u7e8c\u4fee\u6b63\u7684\uff0c\u96d6\u7136\u76ee\u524d\u6211\u4e5f\u60f3\u4e0d\u5230\u8981\u52a0\u5565\u529f\u80fd\u3002\n\nGo \u7684\u5fc3\u5f97\n\u5176\u5be6\u9019\u6bb5\u624d\u662f\u672c\u6587 Orz\u3002\n\u9019\u6b21\u5beb Go \u6211\u662f\u4f7f\u7528 Sublime Text 2 \u4f86\u4f5c\u70ba\u6211\u7684\u7de8\u8f2f\u5668\u3002\n\u96d6\u7136\u842c\u80fd\u7684 Elcipse \u4e5f\u6709\u652f\u63f4\uff0c\u4f46\u662f\u6211\u73fe\u5728\u662f\u80fd\u4e0d\u7528\u5c31\u4e0d\u7528\uff0c\u4ed6\u771f\u7684\u592a\u80a5\u4e86\u3002\nGo \u7684\u8a2d\u8a08\u8b93\u6211\u89ba\u5f97\u4ed6\u975e\u5e38\u7684\u52d9\u5be6\uff0c\u8003\u616e\u5230\u73fe\u5728 Coding \u7684\u9700\u6c42\u3002\n\u4f8b\u5982\u81ea\u5df1\u5c31\u6709\u5305\u6db5 gofmt \u9019\u500b format \u5de5\u5177\uff0c\u4e26\u4e14\u53ef\u4ee5\u4f7f\u7528 go install \u4f86\u5b89\u88dd remote respository \u7684 package\u3002\n\u81f3\u5c11\u514d\u53bb\u4e86\u6bcf\u6b21\u8981\u5b78\u4e00\u500b\u65b0\u8a9e\u8a00\uff0c\u5c31\u5fc5\u9808\u6771\u627e\u897f\u627e\u5404\u5f0f\u5404\u6a23\u5de5\u5177\u4f86\u9032\u884c\u6574\u5408\u3002\n\n\nGo \u7684\u8a9e\u6cd5\u7d00\u9304\n\u9019\u4e00\u6b21\u5beb\u5f97\u6642\u5019\u9084\u6c92\u6709\u628a Go \u7684\u8a9e\u6cd5\u770b\u5b8c\uff0c\u6240\u4ee5\u6709\u5f88\u591a\u90fd\u662f\u4e82\u7528\u7684\uff0c\u4e26\u4e14\u628a Go \u7576 C \u5728\u5beb Orz\u3002\n\nfor \u8ff4\u5708\n\u5beb\u7fd2\u6163\u4e86 Scala\uff0c\u770b\u5230 for \u8ff4\u5708\u5c31\u5f88\u81ea\u7136\u7684\u6703\u53bb\u627e\u662f\u5426\u6709 for-each \u7684\u8a9e\u6cd5\u3002\n\u5728 Go \u88e1\u9762\u5982\u679c\u8981\u5c0b\u8a2a slice \u6216 map \u7b49\u5bb9\u5668\u88e1\u9762\u7684\u6bcf\u4e00\u500b\u5143\u7d20\uff0c\u4f7f\u7528\u7684\u662f for + range\n\nfor index, element := range slice {\n        ...\n}\n\n\u7531\u65bc Go \u652f\u63f4\u591a\u500b\u56de\u50b3\u503c\uff0c\u6240\u4ee5 for \u5f8c\u9762\u7684 index \u8207 element \u662f\u6703\u96a8\u8457 range \u5f8c\u9762\u6240\u63a5\u7684\u5c0d\u8c61\u800c\u6539\u8b8a\u7684\u3002\n\u4f8b\u5982\u662f map \u7684\u8a71\uff0c\u90a3\u9ebc\u56de\u50b3\u503c\u5c31\u6703\u662f key, value\u3002\n\n\n\u51fd\u5f0f\u8207\u8b8a\u6578\u7684\u540d\u7a31\n\u5927\u5beb\u958b\u982d\u7684\u5c31\u662f\u53ef\u4ee5\u5728\u5176\u4ed6 package \u88ab\u547c\u53eb\uff0c\u5c0f\u5beb\u5f97\u5c31\u53ea\u80fd\u5728\u81ea\u5df1\u7684 package \u88e1\u9762\u88ab\u547c\u53eb\u3002\n\n\n\u8b80\u6a94\u8207\u5beb\u6a94\n\u5148\u4f86\u6bb5\u7a0b\u5f0f\u78bc\n\nfor {\n        if length, err = reader.Read(part); err != nil {\n                break\n        }\n\n        if length != 0 {\n                f.Write(part[:length])\n        } else {\n                break\n        }\n}\n\n\u5728 C\u3001C++\u3001Java\u3001Scala \u7b49\u8a9e\u8a00\u57fa\u672c\u4e0a\u5728 Write \u7684 function \u4e2d\uff0c\u90fd\u6703\u6709\u4e00\u500b\u53c3\u6578\u662f\u7528\u4f86\u5e36\u8981\u5beb\u7684\u9577\u5ea6\u3002\n\u53ef\u662f Go \u6c92\u6709 T_T\uff0c\u6240\u4ee5\u9019\u6bb5\u7a0b\u5f0f\u78bc\u5728\u525b\u5beb\u597d\u5f97\u6642\u5019\u5beb\u4e86\u4e00\u5806\u5783\u573e\u8cc7\u6599\u9032\u53bb\u3002\u56e0\u70ba\u6bcf\u6b21\u90fd\u628a\u6574\u500b buffer \u5beb\u5165\u3002\n\u4e00\u76f4\u5230\u53bb stackoverflow \u67e5\u8a62\u624d\u767c\u73fe\uff0c\u539f\u4f86\u8981\u5584\u7528\n\npart[:length]\n\u9019\u6a23\u7684\u8a9e\u6cd5\u4f86\u53d6\u51fa slice \u4e2d\u7279\u5b9a\u7684\u67d0\u6bb5\u5340\u57df\u3002\n\u66f4\u8a73\u7d30\u7684 slice \u5167\u5bb9\u53ef\u4ee5\u53c3\u8003 Go Slices - usage and internals\n\u5269\u4e0b\u7684\u4e4b\u5f8c\u6709\u60f3\u5230\u518d\u88dc\u4e0a\uff0c\u4e0d\u904e Go \u5beb\u8d77\u4f86\u4e5f\u883b\u6109\u5feb\u7684\uff0c\u6211\u60f3\u4ee5\u5f8c\u7528 Scala \u8ddf Go \u7684\u6642\u9593\u61c9\u8a72\u6703\u4e00\u534a\u4e00\u534a\u4e86\u3002", 
      "tags": "Go", 
      "loc": "/posts/epubconverter-0_0_2.html", 
      "title": "EPUBConverter 0.0.2 - \u5176\u5be6\u5df2\u7d93\u91cd\u5beb\u4e86 Orz"
    }, 
    {
      "text": "Spray\n\u6700\u521d\u662f\u60f3\u8981\u5efa\u7acb\u4e00\u500b\u63d0\u4f9b\u67e5\u8a62\u670d\u52d9\u7684 RESTful API Server\uff0c\u53ef\u4ee5\u8b93 Client \u7684\u61c9\u7528\u7a0b\u5f0f\u900f\u904e RESTful API \u67e5\u8a62\u4e00\u4e9b\u8cc7\u6599\u3002\n\u4f46\u662f\u770b\u4f86\u770b\u53bb\uff0c\u7528 Play2\u3001Jersey\u3001RESTEasy \u7b49\u90fd\u883b\u9ebb\u7169\u7684\uff0c\u800c\u4e14\u9084\u9700\u8981\u4f7f\u7528 Web container\uff08\u50cf Tomcat\u3001Jetty \u7b49\uff09\u3002\n\u6240\u4ee5\u624d\u627e\u5230\u9019\u500b Spray\uff0c\u800c\u4e14\u53c8\u662f\u7528 Scala \u958b\u767c\u7684\uff0c\u5be6\u5728\u6c92\u6709\u7406\u7531\u4e0d\u8a66\u8a66\u770b\u963f\u3002 XD\n\u82e5\u4f60\u9023\u5230\u5b98\u7db2\u770b\u6703\u767c\u73fe\u4ed6\u5206\u6210\u5f88\u591a\u6a21\u7d44\uff0c\u8001\u5be6\u8aaa\u6211\u4e5f\u6c92\u6709\u8a73\u7d30\u7814\u7a76\u6bcf\u500b\u6a21\u7d44\u7684\u529f\u80fd\u3002\n\u56e0\u70ba spray-can \u7684\u7bc4\u4f8b\u770b\u8d77\u4f86\u6700\u7c21\u55ae\u4e26\u4e14\u4e5f\u7b26\u5408\u6211\u7684\u9700\u6c42\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u7528\u4ed6\u4e86\u3002\n\u60f3\u77ad\u89e3\u66f4\u8a73\u7d30\u5167\u5bb9\u7684\u53ef\u4ee5\u53c3\u8003 spray-can \u7bc4\u4f8b\u6587\u4ef6 \u8207 Running Standalone Web Applications on Cloud Foundry\n\n\n\u74b0\u5883\u6e96\u5099\nspray-can \u7684\u7bc4\u4f8b \u5df2\u7d93\u6709\u5efa\u7acb\u597d\u4e00\u500b\u7c21\u55ae\u7684 HttpServer \u4e86\uff0c\n\u6240\u4ee5\u6211\u5011\u5148\u5c07 Spray \u5f9e Github \u4e0a Clone \u4e0b\u4f86\u3002\n\ngit clone git://github.com/spray/spray.git\n\n\u7136\u5f8c\u8907\u88fd\u51fa spray/examples/spray-can/simple-http-server\u3002\n\u63a5\u8457\u5728 simple-http-server \u5e95\u4e0b\uff0c\u5efa\u7acb build.sbt \u8b93 SBT \u53bb include \u6240\u9700\u8981\u7684 Library\u3002\n\u9806\u4fbf\u8a2d\u5b9a package-dist  \u9019\u500b sbt plugin \u6240\u9700\u8981\u7684\u8cc7\u6599\u3002\npackage-dist \u53ef\u4ee5\u5354\u52a9\u6211\u5011\u5c07 Project \u6240\u9700\u8981\u7684 Library \u8207\u7a0b\u5f0f\u672c\u8eab\u5168\u90e8\u6253\u5305\u6210\u4e00\u500b zip \u6a94\u3002\n\u4f46\u662f\u9019\u500b plugin \u53ea\u80fd\u4f7f\u7528\u5728 sbt 0.11.x\uff0c\u76ee\u524d\u6211\u9084\u6c92\u6709\u770b\u5230\u53ef\u4ee5\u5728 0.12.x \u7684\u7248\u672c\u3002\n\u5982\u679c\u4f60\u4e0d\u60f3\u7528\u7684\u8a71\u53ef\u4ee5\u62ff\u6389 Start \u5230 End \u4e2d\u9593\u7684\u5167\u5bb9\u3002\n\u800c\u6700\u4e0b\u9762\u7684\n\nEclipseKeys.createSrc := EclipseCreateSrc.Default + EclipsCreateSrc.Resource\n\u5247\u662f\u91dd\u5c0d sbteclipse \u505a\u7684\u8a2d\u5b9a\uff0c\u8b93 plugin \u5728\u7522\u751f eclipse project \u7684\u6642\u5019\u53ef\u4ee5\u5c07 src/main/resources \u4e5f\u52a0\u5165 source folder\u3002\n\n//Start - For package-dist\nimport com.twitter.sbt._\n\nseq(PackageDist.newSettings: _*)\n\nseq(GitProject.gitSettings: _*)\n\npackageDistZipName := \"DictionaryServer.zip\"\n//End - For package-dist\n\norganization := \"cc.spray\"\n\nname := \"DictionaryServer\"\n\nmainClass in (Compile, packageBin) := Some(\"cc.spray.example.Main\")\n\nversion := \"0.1.0-SNAPSHOT\"\n\nscalaVersion := \"2.9.2\"\n\nresolvers ++= Seq(\n\"Typesafe repo\" at \"http://repo.typesafe.com/typesafe/releases/\",\n\"spray repo\" at \"http://repo.spray.cc/\"\n)\n\nlibraryDependencies ++= Seq(\n    \"com.typesafe.akka\" % \"akka-actor\" % \"2.0.3\",\n    \"cc.spray\" % \"spray-server\" % \"1.0-M2\",\n    \"cc.spray\" % \"spray-can\" % \"1.0-M2\",\n    \"org.slf4j\" % \"slf4j-api\" % \"1.6.6\",\n    \"ch.qos.logback\" % \"logback-classic\" % \"1.0.7\"\n)\n\n//sbteclipse setting\nEclipseKeys.createSrc := EclipseCreateSrc.Default + EclipseCreateSrc.Resource\n\n\u9019\u908a\u6ce8\u610f\u4e00\u4e0b Spray \u7684\u7248\u672c\u554f\u984c\uff0c\u73fe\u5728\u6700\u65b0\u7684 Example \u7a0b\u5f0f\u78bc\u662f\u91dd\u5c0d\u6700\u65b0\u7248\u672c\u7684 spray\uff0c\u4f46\u4ed6\u5011\u9084\u6c92\u6709\u6b63\u5f0f release\uff0c\n\u4e26\u4e14\u4ed6\u5011\u9084\u63db\u4e86 package name \u7b49\uff0c\u6240\u4ee5\u6211\u90fd\u662f\u4f7f\u7528 1.0-M2 \u7684\u7248\u672c\uff0c\u7576\u7136 Library \u4e5f\u662f\u4f7f\u7528 1.0-M2\u3002\n\u5230\u9019\u908a\uff0c\u6211\u5011\u7684\u74b0\u5883\u5c31\u6e96\u5099\u7684\u5dee\u4e0d\u591a\u4e86\u3002\u63a5\u4e0b\u4f86\uff0c\u53ea\u8981\u57f7\u884c\u7bc4\u4f8b\u7a0b\u5f0f\u78bc\u5c31\u53ef\u4ee5\u6709\u4e00\u500b\u53ef\u4ee5\u63d0\u4f9b Web Service \u7684 Http Server \u4e86\u3002\n\n\nStart Http Server\n\u5982\u679c\u4f60\u5c0d\u65bc Akka \u7684\u7528\u6cd5\u6709\u4e00\u9ede\u6982\u5ff5\u7684\u8a71\uff0c\u90a3\u9ebc Spray \u5c0d\u4f60\u4f86\u8aaa\u61c9\u8a72\u662f\u975e\u5e38\u597d\u4e0a\u624b\u7684\u3002\nMain.scala \u555f\u52d5\u4e00\u500b IoWorker Actor \u8ca0\u8cac low-level \u7684 network I/O\uff0c\n\u63a5\u4e0b\u4f86\u5c07 IoWorker Actor \u4ee5\u53ca Service Actor \u50b3\u5165 HttpServer Actor\u4e26\u555f\u52d5 Http Server\u3002\n\u4e4b\u5f8c\u900f\u904e\u767c\u9001\u4e00\u500b HttpServer.Bind \u7684 Message \u7d66 Server \u8a2d\u5b9a IP \u8207 Port\u3002\n\u9019\u6a23\u5c31\u5b8c\u6210\u4e86 Server \u7684\u555f\u52d5\u8207\u8a2d\u5b9a\u4e86\u3002\n\n// we need an ActorSystem to host our application in\nval system = ActorSystem(\"SimpleHttpServer\")\n\n// the handler actor replies to incoming HttpRequests\nval handler = system.actorOf(Props[TestService])\n\n// every spray-can HttpServer (and HttpClient) needs an IoWorker for low-level network IO\n// (but several servers and/or clients can share one)\nval ioWorker = new IoWorker(system).start()\n\n// create and start the spray-can HttpServer, telling it that we want requests to be\n// handled by our singleton handler\nval server = system.actorOf(\nprops = Props(new HttpServer(ioWorker, MessageHandlerDispatch.SingletonHandler(handler))),\nname = \"http-server\"\n)\n\n// a running HttpServer can be bound, unbound and rebound\n// initially to need to tell it where to bind to\nserver ! HttpServer.Bind(\"localhost\", 8080)\n\n// finally we drop the main thread but hook the shutdown of\n// our IoWorker into the shutdown of the applications ActorSystem\nsystem.registerOnTermination {\nioWorker.stop()\n}\n\n\n\n\u63d0\u4f9b Service\n\n\u8655\u7406 Http Request\n\u63d0\u4f9b Service \u7684 Actor \u6703\u63a5\u6536\u5230 HttpRequest \u7684 Message\uff0cHttpRequest \u7684\u5167\u5bb9\u5982\u4e0b\u3002\n\ncase class HttpRequest(\n            method   : HttpMethod = HttpMethods.GET,\n            uri      : String = \"/\",\n            headers  : List[HttpHeader] = Nil,\n            content  : Option[HttpContent] = None,\n            protocol : HttpProtocol = `HTTP/1.1`)\n\n\u7136\u5f8c\u5c31\u53ef\u4ee5\u5229\u7528 match \u4f86\u8655\u7406\u5404\u7a2e\u4e0d\u540c\u7684 HttpRequest\uff0c\n\u4f8b\u5982\u6709\u9023\u7dda\u5230 http://localhost:8080/ \u7684 GET \u8acb\u6c42\uff0c\n\u5c31\u6703\u5c0d\u61c9\u5230\u7b2c\u4e00\u500b HttpRequest \"/\"\u3002\n\nprotected def receive = {\n\n    case HttpRequest(GET, \"/\", _, _, _) =>\n        sender ! index\n\n    case HttpRequest(GET, \"/ping\", _, _, _) =>\n        sender ! response(\"PONG!\")\n\n    case HttpRequest(GET, \"/stats\", _, _, _) =>\n        val client = sender\n        context.actorFor(\"../http-server\").ask(HttpServer.GetStats)(1.second).onSuccess {\n\n    case x: HttpServer.Stats => client ! statsPresentation(x)\n    }\n.\n.\n.\n}\n\n\n\n\u5efa\u7acb Http Response\nResponse \u7684\u5167\u5bb9\u4e5f\u975e\u5e38\u597d\u8a2d\u5b9a\uff0c\u4ee5\u525b\u525b\u9001\u56de sender \u7684 index \u70ba\u4f8b\u5b50\uff0c\nSpray \u4f7f\u7528\u4e00\u500b HttpResonse \u7684 case class \u4f86\u4ee3\u8868 Response \u7684\u5167\u5bb9\u3002\n\u53ea\u8981\u8a2d\u5b9a\u597d headers\u3001body \u8207 status \u5c31\u53ef\u4ee5\u50b3\u9001\u56de\u53bb Sender \u4e86\u3002\n\nlazy val index = HttpResponse(\nheaders = List(HttpHeader(\"Content-Type\", \"text/html\")),\nbody =\n  <html>\n    <body>\n      <h1>Say hello to <i>spray-can</i>!</h1>\n      <p>Defined resources:</p>\n      <ul>\n        <li><a href=\"/ping\">/ping</a></li>\n        <li><a href=\"/search\">/search</a></li>\n        <li><a href=\"/stats\">/stats</a></li>\n        <li><a href=\"/crash\">/crash</a></li>\n        <li><a href=\"/timeout\">/timeout</a></li>\n        <li><a href=\"/timeout/timeout\">/timeout/timeout</a></li>\n        <li><a href=\"/stop\">/stop</a></li>\n      </ul>\n    </body>\n  </html>.toString.getBytes(\"ISO-8859-1\"),\nstatus = 200)", 
      "tags": "Scala,Akka", 
      "loc": "/posts/build-restful-api-server-by-spray.html", 
      "title": "\u7528 Spray \u5efa\u7acb\u4e00\u500b\u7c21\u55ae\u7684 RESTful API Server"
    }, 
    {
      "text": "\u4eca\u5929\u65e9\u4e0a\u5148\u7c21\u55ae\u4e86\u4f9d\u7167\u6628\u5929\u756b\u5f97\u67b6\u69cb\u5716\u505a\u4e86\u4e00\u500b\u96db\u578b\uff0c\u6574\u500b\u8dd1\u8d77\u4f86\u529f\u80fd\u662f\u4ee5\u4e86\uff0c\u4f46\u662f\u6d41\u7a0b\u6574\u500b\u60b2\u5287 Orz ...\n\u5148\u662f Exception Handling \u505a\u7684\u4e0d\u5920\u597d\uff0c\u7d50\u679c\u5c31\u771f\u7684\u662f \"Let it Crash\" \u4e00\u76f4\u6b7b\u4e00\u76f4\u6b7b\u4e00\u76f4\u6b7b\uff0c\u597d\u50cf\u5728\u73a9 D3 \u7684\u7149\u7344\u6a21\u5f0f\u4e00\u6a23\u3002\n\u518d\u4f86\u662f\u6211\u6c92\u6709\u53bb\u8a2d\u5b9a Dispatcher \u6240\u4ee5 Thread \u7528\u4e86\u5341\u5e7e\u500b\u3002\u5982\u679c\u6211\u6c92\u6709\u770b\u932f\u7684\u8a71\uff0c\u4f9d\u7167 Akka reference.conf \u7684\u8a2d\u5b9a\uff0c\nDefault Dispatcher \u4f7f\u7528 fork-join-executor\uff0c\u4ed6\u7684\u9810\u8a2d\u8a2d\u5b9a\u5982\u4e0b\n\nfork-join-executor {\n  # Min number of threads to cap factor-based parallelism number to\n  parallelism-min = 8\n\n  # Parallelism (threads) ... ceil(available processors * factor)\n  parallelism-factor = 3.0\n\n  # Max number of threads to cap factor-based parallelism number to\n  parallelism-max = 64\n}\n\n\u5f88\u7c21\u55ae\u7684 parallelism-min \u8207 parallelism-max \u7684\u503c\u4ee3\u8868\u8457 Thread \u7684\u4e0a\u4e0b\u9650\uff0c\u90a3\u9ebc parallelism_factor \u5462\uff1f\n\u4ed6\u540c\u6a23\u4e5f\u662f\u9650\u5236 Thread \u7684\u4e0a\u9650\uff0c\u4e0a\u9650\u7684\u8a08\u7b97\u65b9\u5f0f\u70ba\n\nparallelism-factor * \u4f60\u7684\u8655\u7406\u5668\u6838\u5fc3\u6578\n\u6240\u4ee5\u6211\u7684\u56db\u6838\u5fc3\u684c\u6a5f\u4f7f\u7528\u9019\u500b Dispatcher \u6700\u591a\u6703\u958b\u5230 12 \u500b Thread Orz ...\n\n\u96e3\u602a\u6211\u7684 Thread \u6703\u6eff\u5929\u98db\u4e86\n\u9019\u908a\u6211\u8981\u5148\u641e\u5b9a\u6211\u4e4b\u524d\u4e00\u76f4\u9003\u907f\u7684 Akka \u8a2d\u5b9a\u6a94\uff0c\u4e4b\u524d\u6703\u9003\u907f\u662f\u56e0\u70ba\u6211\u7528 Eclipse \u7684 ScalaIDE \u52a0\u4e0a sbt \u4f86\u958b\u767c\u3002\n\u4e0d\u77e5\u9053\u70ba\u4ec0\u9ebc\u4e4b\u524d\u8a2d\u5b9a\u6a94\u5728 build \u7684\u6642\u5019\u4e00\u76f4\u4e0d\u6703\u81ea\u52d5\u653e\u5230\u7de8\u8b6f\u5b8c\u6210\u7684\u76ee\u9304\u4e0b\u9762\uff0c\u6240\u4ee5\u5c31\u6574\u500b\u6012\u5b8c\u5168\u4e0d\u60f3\u641e\u8a2d\u5b9a\u6a94\u9019\u7a2e\u6771\u897f\u3002\n\u90a3\u6642\u5019\u662f\u5077\u61f6\u76f4\u63a5\u5beb\u5728\u7a0b\u5f0f\u78bc\u88e1\u9762\u3002\n\nval config = \"\"\"\n   my-dispatcher {\n     # Dispatcher is the name of the event-based dispatcher\n     type = Dispatcher\n     # What kind of ExecutionService to use\n     executor = \"fork-join-executor\"\n     # Configuration for the fork join pool\n     fork-join-executor {\n       # Min number of threads to cap factor-based parallelism number to\n       parallelism-min = 2\n       # Parallelism (threads) ... ceil(available processors * factor)\n       parallelism-factor = 2.0\n       # Max number of threads to cap factor-based parallelism number to\n       parallelism-max = 10\n     }\n     # Throughput defines the maximum number of messages to be\n     # processed per actor before the thread jumps to the next actor.\n     # Set to 1 for as fair as possible.\n     throughput = 1\n   }\n   \"\"\"\nval system = ActorSystem(\"MySystem\",ConfigFactory.load(customConf))\n\n\u4e0a\u9762\u628a\u8a2d\u5b9a\u6a94\u5167\u5bb9\u76f4\u63a5\u5132\u5b58\u6210\u5b57\u4e32\uff0c\u7136\u5f8c\u7528 ConfigFactory.load \u5c31\u53ef\u4ee5\u7522\u751f\u8a2d\u5b9a\u6a94\u4e86\uff0c\u4e0d\u904e\u4e00\u76f4\u653e\u5728\u7a0b\u5f0f\u78bc\u88e1\u9762\u4e5f\u4e0d\u662f\u4e00\u4ef6\u5065\u5eb7\u7684\u4e8b\u60c5\u3002\n\u6240\u4ee5\u9084\u662f\u82b1\u4e86\u4e00\u9ede\u6642\u9593\u8655\u7406\u4e4b\u524d\u5728 Eclipse \u4e0a\u9762\u9047\u5230\u7684\u554f\u984c\u3002\n\u4e0d\u904e\u4fd7\u8a71\u8aaa\u5f97\u597d\uff0c\u8d8a\u96e3\u627e\u7684 Bug \u8d8a\u8822 ... \u6211\u53c8\u518d\u6b21\u9a57\u8b49\u4e86\u9019\u500b\u9053\u7406 Orz\n\u5982\u679c\u4f60\u662f\u4f7f\u7528 sbt \u4e0a\u9762\u7684 sbt-eclipse \u4f86\u5efa\u7acb Eclipse Project\uff0c\u7531\u65bc plugin \u4e0d\u8cbc\u5fc3\u6216\u8005\u5f88\u8cbc\u5fc3\u7684\u8a2d\u8a08\u3002\n\u4ed6\u5728 Eclipse \u88e1\u9762\u4e26\u4e0d\u6703\u5e6b\u4f60\u5efa\u7acb resources \u7684 source folder\uff0c\n\u6240\u4ee5\u8acb\u624b\u52d5\u5728 src/main \u4e0b\u9762\u5efa\u7acb\u4e00\u500b resources \u7684 source folder\u3002\n\u63a5\u8457\u662f\u7b28\u9ede Orz\uff0c\u8acb\u9032\u5165 Project \u7684\u8a2d\u5b9a\u756b\u9762\uff0c\u7136\u5f8c\u9078\u64c7 Java Build Path \u7684\u5167 Source \u7684 Tab\u3002\n\u8acb\u5c07 src/main/resources \u7684 Output folder \u7684\u8def\u5f91\u8a2d\u5b9a\u7684\u8ddf src/main/scala \u4e00\u6a23\u3002\n\u4e4b\u524d\u90fd\u6c92\u6709\u90e8\u5c6c\u5230\u6211\u60f3\u8981\u5f97\u5730\u65b9\u5c31\u662f\u56e0\u70ba\u4ed6\u662f\u653e\u5230 default output folder \u4e5f\u5c31\u662f bin \u5e95\u4e0b Orz\u3002\n\u4e4b\u5f8c\u5c31\u53ef\u4ee5\u53c3\u8003 Configure \u8207 Dispatcher \u7684\u5167\u5bb9\u53bb\u8a2d\u5b9a\u4e86\u3002\n\u9019\u6a23\u5c31\u89e3\u6c7a\u4e86\u6211\u4e4b\u524d\u4e00\u76f4\u61f6\u5f97\u627e\u5f97\u554f\u984c\uff0c\u518d\u4f86\u61c9\u8a72\u5c31\u6703\u8a73\u7d30\u8a2d\u5b9a\u4e00\u4e0b Scatter-Gather \u6240\u8981\u7528\u7684 Dispatcher \u4e86\u3002", 
      "tags": "Scala,Akka", 
      "loc": "/posts/akka-2_0-note-6.html", 
      "title": "Akka 2.0 \u7b46\u8a18(6) - Dispatcher \u7684\u8a2d\u5b9a"
    }, 
    {
      "text": "\u7e7c\u4e0a\u6b21\u5b8c\u5168\u770b\u4e0d\u61c2\u7684 Dataflow \u4e4b\u5f8c\uff0c\u6211\u9084\u662f\u60f3\u8981\u4e00\u500b Akka \u7684 Scatter Gather \u5be6\u4f5c\u65b9\u5f0f\uff0c\u56e0\u6b64\u60f3\u8a66\u8457\u81ea\u5df1\u5be6\u505a\u770b\u770b\u3002\n\u4e0b\u5716\u662f Enterprise Integration Patterns  \u66f8\u4e2d\u7684 Scatter-Gather \u6982\u5ff5\u5716\u3002\n\u5f9e\u5716\u4e2d\u53ef\u4ee5\u767c\u73fe\uff0c\u4e2d\u9593\u5c0d\u65bc Vendor A\u3001B \u8207 C \u9032\u884c Broadcast \u7684\u884c\u70ba\u8ddf Akka \u5167\u7684 Router \u5f88\u50cf\uff0c\n\u6240\u4ee5\u7576\u6211\u6b63\u5728\u601d\u8003 Router \u662f\u5426\u5408\u9069\u4f5c\u70ba\u9019\u7a2e\u7528\u9014\u7684\u6642\u5019\uff0c\u6211\u60f3\u5230\u4e86 Let it Crash \u88e1\u9762 Watch the Routees \u9019\u7bc7\u6587\u7ae0\u3002\n\u9019\u7bc7\u6587\u7ae0\u88e1\u9762\u4ed6\u7d00\u9304\u4e86\u5728 Akka mailinglist \u4e2d\u56de\u7b54\u5225\u4eba\u554f\u984c\u6642\u6240\u5beb\u7684\u7bc4\u4f8b\u7a0b\u5f0f\u3002\n\u6574\u500b use case \u662f\u8981\u57f7\u884c\u4e00\u500b Job\uff0c\u9019\u500b Job \u7531\u8a31\u591a Tasks \u7d44\u6210\uff0c\u5728\u57f7\u884c\u7684\u904e\u7a0b\u4e2d\n\u6703\u5c07\u9019\u4e9b Tasks \u900f\u904e router \u5206\u6d3e\u7d66 worker actors \u57f7\u884c\u3002\n\u6700\u5f8c\u6536\u96c6\u6240\u6709 worker \u7684\u57f7\u884c\u7d50\u679c\uff0c\u4e26\u4e14\u5c07\u4ed6\u5011\u5408\u4f75\u4e4b\u5f8c\u56de\u50b3\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c worker \u5728\u57f7\u884c\u904e\u7a0b\u4e2d\u767c\u751f\u932f\u8aa4\u6642\uff0c\u61c9\u8a72\u8981\u9032\u884c retry\uff0c\u5728\u9032\u884c\u5e7e\u6b21 retry \u5f8c\u4f9d\u7136\u6709\u932f\u8aa4\u6642\uff0cWorker \u5c31\u6703\u505c\u6b62\uff0c\u4e26\u4e14\u4e2d\u6b62\u6574\u500b Job\u3002\n\nMaster Actor\n\n/*\n *  Master Actor\uff0c\u8ca0\u8cac\u6574\u500b\u5de5\u4f5c\u904b\u4f5c\u6d41\u7a0b\u7684 Actor\u3002\n *  \u63a5\u6536 Job\u3001\u5206\u6d3e Task \u4ee5\u53ca\u7576\u767c\u73fe Worker Terminal \u6216\u8005\u662f\u5168\u90e8 Task \u90fd\u57f7\u884c\u5b8c\u7562\u4e4b\u5f8c\u3002\n *  \u5c07\u7d50\u679c\u6574\u7406\u597d\u4e4b\u5f8c\u56de\u50b3\n */\n\nclass Master extends Actor {\n  var results = Map[Int, Int]()\n  var replyTo: ActorRef = _\n\n/*\n *  Router \u9019\u908a\u7684 Router \u7a2e\u985e\u662f\u4f7f\u7528 RoundRobinRouter\uff0c\n *  \u4ed6\u6703\u8f2a\u6d41\u5c07 Message \u50b3\u7d66\u5e95\u4e0b\u7684 Worker\u3002\n *  \u4f8b\u5982\uff1a\u82e5\u4ed6\u5e95\u4e0b\u6709 5 \u500b Worker\uff0c\u90a3\u9ebc\u5c31\u6703\n *\n *     Worker 1\n *     Worker 2\n *     ...\n *     Worker 5\n *     Worker 1\n *\n *  \u9019\u6a23\u7684\u9806\u5e8f\u50b3\u905e\u3002\n */\n\n  val router = context.actorOf(Props(new Worker).\n    withRouter(RoundRobinRouter(5,\n      supervisorStrategy = OneForOneStrategy(\n        maxNrOfRetries = 2) {\n          case _: IOException => Restart\n        })), name = \"router\")\n\n  router ! CurrentRoutees\n\n  def receive = {\n    case RouterRoutees(routees) =>\n      routees foreach context.watch\n\n    case \"start\" =>\n      replyTo = sender\n      for (id \u2190 1 to 10) router ! (id, \"22\")\n\n    case (id: Int, result: Int) =>\n      results += (id -> result)\n      if (results.size == 10)\n        replyTo ! results.values.sum\n\n    case Terminated(actor) =>\n      replyTo ! -1\n      context.stop(self)\n  }\n}\n\n\nMaster Actor \u7684\u521d\u59cb\u5316\n\u4e0a\u9762\u7684\u7a0b\u5f0f\u78bc\u7684\u8a3b\u89e3\u6709\u7a0d\u5fae\u4ecb\u7d39\u4e00\u4e0b Master \u8207 Router \u7684\u529f\u80fd\uff0c\u9019\u908a\u5c31\u91dd\u5c0d\u7a0b\u5f0f\u78bc\u7684\u904b\u4f5c\u5167\u5bb9\u4f5c\u4e9b\u8b1b\u89e3\u3002\n\u9996\u5148\u6211\u5011\u5148\u770b\u5230\u9019\u6bb5\u7a0b\u5f0f\u78bc\n\nrouter ! CurrentRoutees\n\nCurrentRoutess \u9019\u908a\u56f0\u64fe\u4e86\u6211\u4e00\u6bb5\u6642\u9593\uff0c\u56e0\u70ba\u6211\u5728 Akka \u7684\u6587\u4ef6\u88e1\u9762\u4e26\u6c92\u6709\u770b\u5230\u9019\u500b\u7269\u4ef6\u7684\u8aaa\u660e\uff0c\u4e14\u5728 API Document \u88e1\u9762\u6211\u4e5f\u6c92\u6709\u770b\u5230\u76f8\u95dc\u7684\u4ecb\u7d39 Orz ...\n\u4e00\u76f4\u5230\u4ed4\u7d30\u770b receive \u88e1\u9762\u7684\u5167\u5bb9\u4e4b\u5f8c\u624d\u767c\u73fe\uff0c\u9019\u7a0b\u5f0f\u78bc\u7684\u529f\u80fd\u662f\u767c\u4e00\u500b Message \u7d66 Router\uff0cRouter \u5728\u63a5\u6536\u5230\u9019\u500b\u8a0a\u606f\u4e4b\u5f8c\uff0c\n\u5c31\u6703\u5c07\u76ee\u524d Router \u88e1\u9762\u7684\u6240\u6709\u7684 Worker Actor\uff08\u5728 Let it Crash \u88e1\u9762\u7a31\u4ed6\u70ba Routee\uff09 \u7528 RouterRoutees \u9019\u500b case class \u5305\u88dd\u56de\u50b3\u3002\n\n\u4e4b\u5f8c\u5c31\u53ef\u4ee5\u5229\u7528 context.watch \u5c07\u9019\u500b Worker Actor \u8a3b\u518a\u8d77\u4f86\u3002\n\u9019\u6a23\u7576 Worker Actor \u56e0\u70ba\u932f\u8aa4\u592a\u591a\u6b21\u800c\u7d50\u675f\u7684\u6642\u5019\uff0c\u5c31\u6703\u63a5\u6536\u5230\u4e00\u500b Terminated \u7684 Message\uff0c\n\u4e4b\u5f8c\u6211\u5011\u5c31\u56de\u50b3 -1 \u4e26\u4e14\u547c\u53eb context.stop(self) \u7d50\u675f Master Actor\uff0c\u9019\u4e5f\u6703\u9023\u5e36\u8b93 Worker Actor \u7d50\u675f\u3002\n\n\n\nMaster Actor \u7684 Scatter \u8207 Gather\n\u8aaa\u5230 Scatter \u7684\u90e8\u4efd\u7684\u8a71\u6211\u60f3\u61c9\u8a72\u5c31\u8981\u4ecb\u7d39\u4e00\u4e0b\u6211\u5011\u9019\u908a\u4f7f\u7528\u7684 Router \u4e86\u3002\nRouter \u5176\u5be6\u672c\u8eab\u8ddf\u6211\u5011\u9019\u908a\u6240\u5be6\u505a\u7684 Master Actor \u5f88\u50cf\uff0c\u900f\u904e Router \u5c31\u53ef\u4ee5\u5c07\u8a0a\u606f\u5206\u6d3e\u7d66\u4ed6\u5e95\u4e0b\u7684 Actor \uff0c\u4ed6\u5c31\u6709\u9ede\u50cf\u662f\u4ef2\u4ecb\u5546\u4e00\u6a23\u3002\n\u4f60\u628a\u8981\u505a\u7684\u5de5\u4f5c\u4ea4\u7d66\u4ed6\uff0c\u4ed6\u6703\u8ca0\u8cac\u627e\u5230\u5408\u9069\u7684\u4eba\u5c07\u5de5\u4f5c\u5206\u6d3e\u51fa\u53bb\u3002\nRouter \u5206\u6d3e\u5de5\u4f5c\u7684\u65b9\u5f0f\u6709\u597d\u5e7e\u7a2e\uff0c\u53ef\u4ee5\u5230  Router  \u7684\u6587\u4ef6\u770b\u4e00\u4e0b\uff0c\u9019\u908a\u4f7f\u7528\u7684\u662f\u7d93\u5178\u7684 RoundRobinRouter\u3002\n\u4ed6\u6703\u5c07\u5de5\u4f5c\u8f2a\u6d41 forward \u7d66\u5e95\u4e0b\u7684 Actor\uff0c\u9019\u908a\u6703\u7528\u5230 forward \u662f\u56e0\u70ba\u5728 Akka \u88e1\u9762\uff0c\u7576\u4f60\u50b3\u9001\u4e00\u500b Message \u7d66\u67d0\u500b Actor \u7684\u6642\u5019\uff0c\n\u5176\u5be6\u9084\u6703\u9644\u5e36\u4e0a\u4e86 Sender \u7684\u8cc7\u8a0a\uff0c\u6240\u4ee5\u5982\u679c Message \u7684\u50b3\u9001\u8def\u5f91\u662f\u7528\u4e00\u822c\u7684\u50b3\u9001\u65b9\u5f0f\u7684\u8a71\n\nMain -> Router -> Worker Actor\n\u90a3\u9ebc Worker Actor \u7684 Sender \u5c31\u6703\u8b8a\u6210 Router\uff0c\u6240\u4ee5 Router \u6240\u4f7f\u7528\u7684\u50b3\u905e\u65b9\u5f0f\u662f forward\uff0c\u9019\u6a23 Worker Actor \u63a5\u6536\u5230 Message \u4e4b\u5f8c\u5c31\u9084\u662f\u6703\u8a8d\u70ba Main \u662f Sender\u3002\n\u9019\u6a23\u624d\u80fd\u5c07\u8a0a\u606f\u6b63\u78ba\u7684\u56de\u50b3\u56de\u53bb\u3002\nScatter \u7684\u90e8\u4efd\u5c31\u9019\u9ebc\u7c21\u55ae\u89e3\u6c7a\uff0c\u4f46\u662f\u4e0b\u4e00\u500b Gather \u7684\u90e8\u4efd\u5c31\u6bd4\u8f03\u9ebb\u7169\u4e86\u3002\n\u7406\u7531\u5f88\u7c21\u55ae\u3002\u56e0\u70ba Router \u53ea\u6709\u8ca0\u8cac\u5206\u6d3e\u7684\u90e8\u4efd\uff0cWorker Actor \u56de\u50b3\u7684\u5c0d\u8c61\u662f\u4e00\u958b\u59cb\u767c Message \u7684 Actor\uff0c\n\u6240\u4ee5\u8981\u53e6\u5916\u91dd\u5c0d\u56de\u50b3\u7684 Message \u4f5c\u8655\u7406\u3002\u4e0b\u9762\u7684\u7a0b\u5f0f\u78bc\u6703\u5728\u56de\u50b3\u7684\u8a0a\u606f\u7d2f\u7a4d\u5230 10 \u500b\u4e4b\u5f8c\u624d\u5c07\u5168\u90e8\u4e00\u8d77\u52a0\u7e3d\u56de\u50b3\u3002\n\ncase (id: Int, result: Int) =>\n   results += (id -> result)\n   if (results.size == 10)\n     replyTo ! results.values.sum\n\n\u4f46\u662f\u5f88\u660e\u986f\u7684\uff0c\u9019\u6a23\u9084\u4e0d\u8db3\u5920\uff0c\u5982\u679c\u540c\u6642\u9593 Master Actor \u63a5\u6536\u5230\u591a\u500b Job\uff0c\u90a3\u9ebc\u8981\u5982\u4f55\u5206\u8fa8 Worker Actor \u6240\u56de\u50b3\u7684 Result \u662f\u54ea\u500b Job \u7684\uff1f\n\u76ee\u524d\u60f3\u5230\u7684\u89e3\u6c7a\u65b9\u5f0f\u6709\n\u7c21\u55ae\u4f86\u8aaa\u5c31\u662f\u9650\u5236\u8b93\u4e00\u500b Master Actor \u540c\u6642\u53ea\u6703\u6709\u4e00\u500b Job \u9032\u884c\uff0c\u5982\u679c\u6709\u591a\u500b Job \u8981\u9032\u884c\u5c31\u4f7f\u7528\u591a\u500b Master Actor\uff0c\u9644\u5e36\u4e00\u984cActor \u7684\u6578\u91cf\u4e26\u4e0d\u4ee3\u8868 Thread \u7684\u6578\u91cf\uff0c\u9019\u90e8\u4efd\u53ef\u4ee5\u900f\u904e Dispatcher \u7684\u8a2d\u5b9a\u4f86\u63a7\u5236\u3002\n\u589e\u52a0 Job ID\uff0c\u8b93\u6bcf\u500b Job \u90fd\u6709\u81ea\u5df1\u7684 ID\uff0c\u4e26\u4e14\u9019\u500b ID \u4e5f\u6703\u52a0\u5728 Result \u88e1\u9762\uff0c\u9019\u6a23\u5c31\u53ef\u4ee5\u8fa8\u8b58 Result \u662f\u54ea\u500b Job\u7684\u4e86\u3002\n\u672c\u4f86\u6211\u89ba\u5f97\u7b2c\u4e00\u500b\u65b9\u6cd5\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u56e0\u70ba\u9019\u6a23\u592a\u6d6a\u8cbb\u8cc7\u6e90\u4e14\u6bcf\u6b21\u90fd\u8981\u5efa\u7acb Master Actor \u5f88\u9ebb\u7169\u3002\n\u4f46\u662f\u9019\u6a23\u7684\u4f5c\u6cd5\u5f88\u55ae\u7d14\u4e5f\u5f88\u597d\u64f4\u5145\uff0c\u53cd\u6b63\u53ea\u8981\u589e\u52a0 Master Actor \u5c31\u80fd\u591a\u8655\u7406\u5e7e\u500b Job\uff0c\u8981\u7ba1\u7406\u8cc7\u6e90\u5c31\u7b49\u65bc\u7ba1\u7406 Master Actor \u7684\u6578\u91cf\u5c31\u597d\u4e86\u3002\n\u7b2c\u4e8c\u7a2e\u4f5c\u6cd5\u6703\u589e\u52a0\u6574\u500b\u7a0b\u5f0f\u7684\u8907\u96dc\u5ea6\uff0c\u56e0\u70ba\u9700\u8981\u591a\u4e00\u500b Map \u4f86\u66ab\u5b58 Result\uff08\u5149\u9019\u500b\u5c31\u6709\u9ede\u9ebb\u7169\u4e86\uff09\uff0c\u9700\u8981\u591a\u50b3\u905e Job ID \u7684\u8cc7\u8a0a\u7b49\u3002\u4f46\u597d\u8655\u61c9\u8a72\u5c31\u662f\u6703\u6bd4\u8f03\u7bc0\u7701\u8a18\u61b6\u9ad4\u8207 CPU \u7b49\u3002\n\u4f46\u662f\u5728\u9019\u500b CPU\u3001Memory \u4e0d\u503c\u9322\u7684\u5e74\u4ee3\u4e14\u9019\u500b\u53c8\u53ea\u662f\u6211\u7684\u73a9\u5177\u7684\uff0c\u6240\u4ee5\u6211\u6703\u9078\u64c7\u7b2c\u4e00\u7a2e\u65b9\u5f0f\u4f86\u5be6\u505a\u3002\n\n\n\nWorker Actor\n\u9019\u662f\u5728 Let it Crash \u88e1\u9762 Worker Actor \u7684\u7a0b\u5f0f\u78bc\uff0c\u4ed6\u63a5\u6536\u7684 Message \u578b\u614b\u5f88\u7c21\u55ae\u53ea\u6709\u4e00\u7a2e (id,s:String)\uff0c\u9019\u662f\u5728 Scala \u7a31\u4e4b\u70ba Tuple \u7684\u7269\u4ef6\u3002\n\u6703\u6709\u5169\u7a2e\u662f\u56e0\u70ba\u9019\u500b\u7bc4\u4f8b\u6703\u6a21\u64ec\u7576 Worker Actor \u57f7\u884c\u767c\u751f Exception \u7684\u60c5\u6cc1\u3002\n\nclass Worker extends Actor {\n  def receive = {\n    case (id, s: String) if Random.nextInt(4) == 0 =>\n      throw new IOException(\"failed\")\n    case (id, s: String) =>\n      sender ! (id, s.toInt)\n  }\n\n  override def preRestart(\n    reason: Throwable, message: Option[Any]) {\n    // retry\n    message foreach { self forward _ }\n  }\n}\n\n\u6bd4\u8f03\u6709\u8da3\u7684\u662f preRestart \uff0c\u9019\u53ef\u4ee5\u8ddf\u524d\u9762 Master Actor \u5167\u7684 Router \u4e00\u8d77\u770b\u4e00\u4e0b\u3002\n\nval router = context.actorOf(Props(new Worker).\n    withRouter(\n    RoundRobinRouter(5,\n      supervisorStrategy = OneForOneStrategy(\n        maxNrOfRetries = 2) {\n          case _: IOException => Restart\n        })), name = \"router\")\n\n\u4e0a\u9762\u7684 OneForOneStrategy \u662f Akka \u7684\u7279\u7522\uff0c\u4ed6\u53ef\u4ee5\u8a2d\u5b9a Supervisor\uff08\u5c31\u662f\u8a72 Actor \u7684\u7ba1\u7406\u8005\uff0c\u4f8b\u5982 Worker Actor \u7684 supervisor \u662f Router\uff09\n\u5c0d\u65bc\u4ed6\u5e95\u4e0b Actor \u7684\u61c9\u5c0d\u7b56\u7565\u3002\u9019\u908a\u662f\u8a2d\u5b9a\u7576 Worker Actor \u6709\u4e1f\u51fa IOException \u7684\u6642\u5019\uff0c\u6240\u63a1\u53d6\u7684\u61c9\u5c0d\u662f\u5c07\u8a72 Worker Actor Restart\u3002\n\u4f46\u662f\u9019\u500b restart \u6b21\u6578\u6709\u9650\u5236\uff0c\u5728 maxNrOfRetries = 2 \uff0c\u56e0\u6b64 Worker Actor \u6700\u591a\u53ea\u6703 Restart \u5169\u6b21\uff0c\u5169\u6b21\u4e4b\u5f8c\u5c31\u6703\u88ab\u505c\u6b62\u4e26\u4e14\u50b3\u4e00\u500b Terminated \u7684\u8a0a\u606f\u7d66 Master Actor\u3002\n\u800c preRestart \u88e1\u9762\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u5c31\u662f\u5728 Restart \u524d\u5c07\u76ee\u524d\u7684 Message \u5168\u90e8\u7528 forward \u7684\u65b9\u5f0f\u50b3\u7d66\u81ea\u5df1\u4e00\u6b21\uff0c\u5426\u5247 Restart \u5f8c\u9019\u4e9b message \u5c31\u6703\u88ab\u6e05\u7406\u6389\u3002\n\u9019\u6a23\u4e4b\u524d\u7684\u5de5\u4f5c\u5c31\u6703\u907a\u5931\u4e86\u3002\nLet it Crash \u7684 Watch the Routees \u5e6b\u52a9\u771f\u7684\u5f88\u5927\uff0c\u52a0\u4e0a\u6700\u8fd1\u518d\u770b Scala in Depth  \u5c0d\u65bc\u8981\u505a\u7684 Scatter-Gather \u6bd4\u8f03\u6709\u4e00\u4e9b\u60f3\u6cd5\u4e86\uff0c\n\u4e0b\u4e00\u7bc7\u61c9\u8a72\u5c31\u6703\u8aaa\u660e\u5982\u4f55\u6642\u505a\u7684\u3002\n\n\n\u4e0b\u96c6\u9810\u544a ?", 
      "tags": "Scala,Akka", 
      "loc": "/posts/akka-2_0-note-5.html", 
      "title": "Akka 2.0 \u7b46\u8a18(5) - Scatter Gather"
    }, 
    {
      "text": "\u9019\u6574\u7bc7\u7684\u539f\u56e0\u8d77\u65bc\uff0c\u6d17\u6fa1\u7684\u6642\u5019\u60f3\u5230\u7684\uff0c\nAkka \u7684 Future \u5230\u5e95\u6709\u6c92\u6709\u5b58\u5728\u7684\u610f\u7fa9\u5462\uff1f\n\u56e0\u70ba\u7576\u4e00\u500b Actor \u7528 reply \u6216\u8005 sender \u56de\u50b3\u7d50\u679c\u7684\u6642\u5019\uff0c\u5176\u5be6\u53ef\u4ee5\u518d receive \u4e0d\u540c\u7684\u578b\u614b\u7684 Message \u5c31\u597d\u4e86\u3002\n\u800c\u4e14\u9019\u6a23\u9084\u4e0d\u6703\u56e0\u70ba Await \u800c\u9700\u8981 block thread\uff0c\u6e1b\u5c11 dead lock \u7684\u767c\u751f\u3002\n\u6211\u4e4b\u524d\u5c31\u5e79\u904e\u5f88\u8822\u7684\u4e8b\u60c5\uff0c\u56e0\u70ba Actor \u628a Thread Pool \u88e1\u9762\u7684 Thread \u7528\u5149\u4e86\uff0c\u6240\u4ee5\u4ed6\u5e95\u4e0b\u5e6b\u4ed6\u5de5\u4f5c\u7684 Actor \u5c31\u53d6\u4e0d\u5230 Thread \u53ef\u4ee5\u57f7\u884c\uff0c\n\u56e0\u6b64\u5168\u90e8 Timeout Orz ...\n\u76ee\u524d\u552f\u4e00\u80fd\u60f3\u5230\u7684\u7528\u6cd5\u5c31\u662f\u5728\u767c\u51fa\u8a0a\u606f\u7684\u5730\u65b9\u4e0d\u662f\u4e00\u500b Actor \u7684\u6642\u5019\uff0c\u9019\u6642\u5019\u5c31\u6c92\u6709 receive \u53ef\u4ee5\u63a5\u6536\u7d50\u679c\u4e86\u3002\n\u6240\u4ee5\u9700\u8981\u4f7f\u7528 Future \u4f86\u7b49\u5f85\u7d50\u679c\uff0c\u4e5f\u5c31\u662f Future \u61c9\u8a72\u53ea\u88ab\u7528\u5728\u9700\u8981\u7b49\u5f85\u7684\u6642\u5019\uff0c\u5982\u679c\u662f\u5728\u4e00\u500b Actor \u88ab\u57f7\u884c\u7684\u6642\u5019\u4f7f\u7528 Future\u3002\n\u5f88\u5bb9\u6613\u6d6a\u8cbb\u6389\u4e00\u500b Thread\uff0c\u61c9\u8a72\u662f\u8981\u53e6\u5916\u958b\u4e00\u500b\u65b0\u7684 case class \u4f86\u5c08\u9580\u8655\u7406\u7d50\u679c\u624d\u662f\u3002\n\u4f46\u662f\u9019\u908a\u53c8\u51fa\u73fe\u4e86\u4e00\u500b\u66f4\u8907\u96dc\u7684\u554f\u984c\u4e86\uff0c\u56e0\u70ba\u6211\u5c07\u5de5\u4f5c\u5206\u7d66\u4e0d\u540c\u7684 Actor \u53bb\u57f7\u884c\uff0c\u5fc5\u9808\u8981\u7b49\u5230\u6240\u6709 Actor \u90fd\u57f7\u884c\u5b8c\u7562\uff0c\u6574\u5408\u6240\u6709\u7684\u7d50\u679c\u3002\n\u90a3\u9ebc\u5982\u679c\u662f\u7528 receive \u6211\u8981\u600e\u6a23\u624d\u80fd\u77e5\u9053\u6211\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u5df2\u7d93\u5b8c\u6210\u4e86\u5462\uff1f\n\u7c21\u55ae\u4f86\u8aaa\uff0c\u6211\u5c31\u662f\u9700\u8981\u5be6\u505a\u4e00\u500b  Scatter-Gather \uff0c\u624d\u6703\u83ab\u540d\u5176\u5999\u7684\u770b\u5230 Akka \u7684 Dataflow\u3002\n\n\nAkka Dataflow\n\u8d77\u56e0\u5728\u65bc\u6211\u7528 Scatter-Gather \u8207 Akka \u641c\u5c0b\u6587\u7ae0\u7684\u6642\u5019\u627e\u5230\u9019\u7bc7 Scatter-Gather with Akka Dataflow \u3002\n\u4e00\u770b\u88e1\u9762\u7684 Code \u771f\u662f\u9a5a\u70ba\u5929\u4eba\uff0c\u6211\u4e00\u884c\u90fd\u770b\u4e0d\u61c2 Orz ...\n\u7136\u5f8c Akka  Dataflow Concurrency \u7684\u5167\u5bb9\u53c8\u975e\u5e38\u7684\u7cbe\u7c21 Orz\uff0c\u800c\u4e14\u4ed6\u53c8\u7528\u5230\u4e86 Scala Continuations \uff0c\n\u9019\u6771\u897f\u7684\u6587\u4ef6\u4e5f\u975e\u5e38\u7684 Orz\uff0c\u9023 Programming in Scala 2nd \u90fd\u6c92\u6709\u63d0\u5230\u9019\u500b\u6771\u897f\uff0c\u8b93\u6211\u5b8c\u5168\u653e\u68c4\u9019\u500b\u6771\u897f Orz ..\n\u4f46\u662f\u627e\u5230\u90fd\u627e\u5230\u4e86\uff0c\u6211\u60f3\u5be6\u505a\u500b\u6a19\u672c\u51fa\u4f86\u4e5f\u4e0d\u932f\uff0c\u6240\u4ee5\u624d\u6703\u6709\u9019\u7bc7\u6771\u897f\u3002\n\u4e0b\u9762\u9019\u500b\u7248\u672c\u6539\u81ea\u4e0a\u9762\u6240\u63d0\u5230\u7684 Scatter-Gather with Akka Dataflow\n\u56e0\u70ba\u90a3\u500b Blog \u7684\u7bc4\u4f8b\u6211\u4f30\u8a08\u4f86\u81ea\u65bc Akka 1.3.1 \u4e4b\u524d\u7684\u7248\u672c\uff0c\u6240\u4ee5\u6211\u505a\u4e86\u4e00\u4e9b\u66f4\u52d5\u624d\u80fd\u5728 Akka 2.0 \u4e0a\u9762\u8dd1\u3002\n\u5f88\u5e78\u904b\u6216\u8005\u662f\u5f88\u4e0d\u5e78\u7684\u662f Dataflow \u7684\u90e8\u4efd\u5247\u662f\u5f9e Akka 1.x \u5c31\u6c92\u6709\u8b8a\u52d5\u904e\u4e86\uff0c\u6240\u4ee5\u57fa\u672c\u908f\u8f2f\u90fd\u6c92\u6709\u6539\u8b8a\u3002\n\nimport scala.util.continuations._\n\nimport akka.actor.Actor\nimport akka.actor.ActorRef\nimport akka.actor.ActorSystem\nimport akka.actor.Props\nimport akka.dispatch.Future.flow\nimport akka.dispatch._\nimport akka.pattern.ask\nimport akka.util.duration._\nimport akka.util.Timeout\n\nobject ScatterGatherDataFlow {\n  def main(args: Array[String]) {\n    implicit val timeout = Timeout(10 seconds)\n    val system = ActorSystem()\n    val recipients = (1 to 5).map(i => system.actorOf(Props(new Recipient(i))))\n    val aggregator = system.actorOf(Props(new Aggregator(recipients)))\n    val results1 = Await.result(aggregator ? Message(\"Hello\"), timeout.duration)\n    val results2 = Await.result(aggregator ? Message(\"World\"), timeout.duration)\n\n    results1.asInstanceOf[Future[String]] map { res =>\n      println(\"Result: %s\" format (res))\n    }\n    results2.asInstanceOf[Future[String]] map { res =>\n      println(\"Result: %s\" format (res))\n    }\n\n    system.awaitTermination\n  }\n}\n\nclass Aggregator(recipients: Iterable[ActorRef]) extends Actor {\n\n  implicit val defaultDispatcher = context.dispatcher\n  implicit val timeout = Timeout(10 seconds)\n\n  def receive = {\n    case msg @ Message(text) =>\n      println(\"Started processing message `%s`\" format (text))\n\n      val result = Promise[String]()\n      val promises = List.fill(recipients.size)(Promise[String]())\n\n      recipients.zip(promises).map {\n        case (recipient, promise) =>\n          (recipient ? msg).mapTo[String] map { result: String =>\n            println(\"Binding recipient's response: %s\" format (result))\n            flow {\n              promise << result\n            }\n          }\n      }\n\n      flow {\n          def gather(promises: List[Future[String]], result: String = \"\"): String @cps[Future[Any]] =\n            promises match {\n              case head :: tail => gather(tail, head() + result)\n              case Nil          => result\n            }\n\n        println(\"Binding result...\")\n        result << gather(promises)\n      }\n\n      sender ! result\n  }\n\n}\n\nclass Recipient(id: Int) extends Actor {\n\n  def receive = {\n    case Message(msg) =>\n      Thread.sleep(1000)\n      sender ! (\"%s, [%s]! \".format(msg, id))\n  }\n\n}\n\ncase class Message(text: String)\n\n\u9644\u4e0a\u57f7\u884c\u7d50\u679c\n\n\u6211\u76ee\u524d\u53ea\u6709\u505a\u5230\u5c07\u9019\u6bb5\u7a0b\u5f0f\u78bc\u4fee\u6539\u5230\u53ef\u4ee5\u52d5\u800c\u5df2\uff0c\u5be6\u969b\u6574\u500b\u904b\u4f5c\u6d41\u7a0b\u8207\u5927\u6982\u9084\u4e0d\u662f\u5b8c\u5168\u4e86\u89e3\u3002\n\u4e00\u65b9\u9762\u662f\u56e0\u70ba\u6709\u95dc\u65bc Dataflow \u7684\u8cc7\u6599\u592a\u5c11\uff0c\u4e8c\u4f86\u662f Scala Continuations \u7684\u8cc7\u6599\u4e5f\u5f88\u5c11 Orz \u3002\n\u4e26\u4e14\u9019\u500b\u529f\u80fd\u6211\u89ba\u5f97\u4e0d\u592a\u597d Debug \uff0c\u95b1\u8b80\u4e0a\u4e5f\u6709\u9ede\u4e0d\u7fd2\u6163\uff0c\u56e0\u6b64\u4e0d\u6703\u63a1\u7528\u9019\u500b\u65b9\u5f0f\u3002\n\u6216\u8a31\u6709\u4e00\u5929\u6211\u4e86\u89e3\u4e86 Dataflow \u7684\u597d\u7684\u6642\u5019\u6211\u6703\u5728\u56de\u982d\u628a\u9019\u7a0b\u5f0f\u78bc\u7684\u8aaa\u660e\u88dc\u9f4a\u3002\n\n\nEclipse \u8207 Sbt \u7684\u8a2d\u5b9a\n\u4e0a\u9762\u9019\u6bb5\u7a0b\u5f0f\u78bc\u7531\u65bc\u6709\u7528\u5230 Scala Continuations  \u6240\u4ee5 Eclipse \u6216\u8005 sbt \u9700\u8981\u4f5c\u4e00\u4e9b\u8a2d\u5b9a\uff0c\u8b93\u4ed6\u53ef\u4ee5\u4f7f\u7528 scala \u7684 continuations plugin\u3002\nEclipse \u7684\u90e8\u4efd\u9700\u8981\u5728 Compiler Standard \u7684\u8a2d\u5b9a\u4e2d p \u7684\u90e8\u4efd\u589e\u52a0 continuations:enable\n\u5728 Compiler Advanced \u7684\u8a2d\u5b9a\u4e2d Xplugin \u589e\u52a0 libcontinuations.jar\n\u5982\u679c\u662f sbt \u7684\u8a71\u53ea\u8981\u589e\u52a0\u4e0b\u9762\u7684\u5167\u5bb9\u5230 build.sbt \u88e1\u9762\u5373\u53ef\u3002", 
      "tags": "Scala,Akka", 
      "loc": "/posts/akka-2_0-note-4.html", 
      "title": "Akka 2.0 \u7b46\u8a18(4) - Dataflow \u8acb\u4e0d\u8981\u671f\u5f85\u9019\u7bc7\u6211\u6703\u63d0\u5230\u4ec0\u9ebc"
    }, 
    {
      "text": "\u800c\u662f\u6211\u5be6\u5728\u662f\u4e0d\u64c5\u9577\u5beb\u4f5c\uff0c\u904e\u53bb\u4f5c\u6587\u53ea\u6709 20 \u5206\u771f\u7684\u4e0d\u662f\u62ff\u5047\u7684\u3002\n\u524d\u4e00\u7bc7\u7684 \u958b\u59cb\u4f7f\u7528 Future \u53ea\u6709\u4ecb\u7d39\u4e00\u4e9b\u57fa\u672c\u7684\u4f7f\u7528\u65b9\u5f0f\u800c\u5df2\uff0c\u7136\u5f8c\u4f9d\u7167\u524d\u9762\u7684\u7a0b\u5f0f\u78bc\u662f\u7d55\u5c0d\u8dd1\u4e0d\u8d77\u4f86\u7684 Orz ...\n\n\u539f\u56e0\u5728\u65bc Future \u9700\u8981\u4e00\u500b Execution Contexts \u985e\u4f3c Java \u88e1\u9762\u7684 Executor\uff0c\u4e5f\u5c31\u662f Thread Pool\u3002\n\nExecution Contexts\n\u56e0\u70ba Future \u9664\u4e86\u8ddf Actor \u914d\u5408\u4f7f\u7528\u4e4b\u5916\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002\n\u4f8b\u5982\u524d\u9762\u8207 Actor \u914d\u5408\u4f7f\u7528\u7684\u4f8b\u5b50scala\n\nval list = List[String](\"Tony\",\"Lion\",\"Teddy\",\"Brain\",\"Jess\",\"Kay\",\"Michael\")\nval listOfFutures = list map {\n   name =>\n      (countActor ? name).mapTo[Int]\n}\nval futureList = Future.sequence(listOfFutures)\n\n\u5176\u5be6\u53ef\u4ee5\u6539\u6210\u9019\u6a23:\n\nval futureList = Future.sequence(list.map(name => Future(name.length)))\n\n\u56e0\u6b64\u5728\u4f7f\u7528 Future \u4e4b\u524d\u5fc5\u9808\u8981\u8a2d\u5b9a ExecutionContext \u8b93 Future \u53ef\u7528\u4f86\u57f7\u884c\u5de5\u4f5c\u3002\nP.S\n\u9019\u6a23\u7684\u7d50\u679c\u4e5f\u662f\u6703\u56de\u50b3\u4e00\u500b Future[List[Int]]\u3002\n\u5f88\u660e\u986f\u7684\u9019\u6a23\u7684\u4f5c\u6cd5\u7c21\u55ae\u5f88\u591a\uff0c\u56e0\u70ba\u5c11\u5efa\u7acb Actor \u4e5f\u4e0d\u9700\u8981\u518d\u5c07 Actor \u6240\u56de\u50b3\u7684\u503c\u8f49\u578b\uff08\u5c31\u662f\u524d\u9762\u770b\u5230\u7684 mapTo[Int]\uff09\u3002\n\u6211\u662f\u9084\u883b\u559c\u6b61\u9019\u6a23\u505a\u7684\uff0c\u4e0d\u904e\u7531\u65bc\u5f8c\u9762\u8981\u4f7f\u7528\u5230 Router \u6240\u4ee5\u5c31\u6c92\u6709\u76f4\u63a5\u4f7f\u7528 Future \u4e86\u3002\n\n\u8a2d\u5b9a Execution Context\n\u96d6\u7136\u6587\u4ef6\u4e2d\u6709\u63d0\u5230\u5982\u679c scope \u5167\u5b58\u5728 ActorSystem \uff0c\u4ed6\u6703\u81ea\u5df1\u4f7f\u7528 ActorSystem \u7684 default dispatcher\uff0c\n\u4e0d\u904e\u5f88\u53ef\u60dc\u7684\u9019\u500b\u529f\u80fd\u6211\u6c92\u6709\u6e2c\u8a66\u51fa\u4f86\uff0c\u4e0d\u7136\u5c31\u662f\u6211\u8aa4\u89e3\u4e86\u9019\u6bb5\u8a71\u7684\u610f\u601d\u3002\n\u5982\u679c\u6709\u671d\u4e00\u65e5\u6211\u7a81\u7136\u958b\u609f\u60f3\u901a\u4e86\u518d\u4f86\u88dc\u4e0a\u9019\u4e00\u6bb5\u3002\n\u800c\u5728 Akka \u88e1\u9762\u6240\u6709\u7684 Dispatcher \u90fd\u662f\u7e7c\u627f\u81ea ExecutionContext\n\u6240\u4ee5\u8981\u8a2d\u5b9a\u9019\u500b\u4e5f\u4e0d\u592a\u82b1\u6642\u9593\u3002\n\u5982\u679c\u8981\u4f7f\u7528 Future \u7684\u662f\u4e00\u500b Actor\uff0c\u90a3\u9ebc\u53ea\u8981\u76f4\u63a5\u8a2d\u5b9a Actor \u7684 dispatcher \u5c31\u53ef\u4ee5\u4e86\u3002\n\nclass MyActor extends Actor{\nimplicit val defaultDispatch = context.dispatcher\n.\n.\n.\n}\n\n\u81f3\u65bc\u70ba\u4ec0\u9ebc\u8981\u4f7f\u7528 implicit \u5462\uff1f\u56e0\u70ba Future \u7684 Function \u4e2d dispatcher \u90fd\u662f\u7528 implicit \u7684\u578b\u614b\uff0c\n\u6240\u4ee5\u5982\u679c\u6c92\u6709\u50b3\u53c3\u6578\u7d66\u4ed6\u7684\u6642\u5019\uff0c\u4ed6\u6703\u81ea\u52d5\u5728\u9019\u500b scope \u88e1\u9762\u627e\u5c0b\u662f\u5426\u6709\u5ba3\u544a\u6210 implicit \u7684 ExecutionContext \u8b8a\u6578\u3002\n\u5982\u679c\u4f7f\u7528 Future \u7684\u5730\u65b9\u4e0d\u662f\u5728 Actor \u5167\uff0c\u6216\u4e0d\u60f3\u4f7f\u7528 Actor \u7684 dispatch\u3002\u90a3\u9ebc\u53ef\u4ee5\u81ea\u5df1\u5efa\u7acb Java \u7684 Executor \uff0c\u4e26\u4e14\u5c07\u4ed6\u8f49\u6210 ExecutionContext\u3002\n\nval es = Executors.newFixedThreadPool(threadSize)             //Java Executor\nimplicit val ec = ExecutionContext.fromExecutorService(es)\n\n\u9019\u6a23\u5728\u4f7f\u7528 Future \u7684\u6642\u5019\u4ed6\u5c31\u6703\u81ea\u52d5\u53bb\u627e ExecutionContext \u4f86\u57f7\u884c\u3002\n\n\n\n\u5982\u679c Future \u57f7\u884c\u7684\u904e\u7a0b\u4e2d\u6709\u767c\u751f Exception\nFuture \u7528 recover \u8207 recoverWith \u4f86\u8655\u7406 Future \u57f7\u884c\u904e\u7a0b\u4e2d\u7684\u6240\u4e1f\u51fa\u7684 Exception\u3002\n\u4f7f\u7528\u65b9\u5f0f\u975e\u5e38\u7684\u7c21\u55ae\uff0c\u5beb\u8d77\u4f86\u4e5f\u883b\u6f02\u4eae\u7684\uff0c\u53ea\u8981\u5728\u5efa\u7acb Future \u6642\u4f7f\u7528 recover \u6216 recoverWith \u4e26\u4e14\u52a0\u5165\u8981\u8655\u7406\u7684\u4f8b\u5916\u5c31\u597d\u4e86\u3002\n\u4f8b\u5982\n\nFuture(parsePage(pageNumber)) recover { case e:Exception => List[Post]() }\n\n\u4e0a\u9762\u8868\u793a\u7576\u6211\u57f7\u884c parsePage \u6642\u5982\u679c\u767c\u751f\u4efb\u4f55 Excetpion \u90a3\u9ebc\u5c31\u56de\u50b3\u4e00\u500b\u7a7a\u7684 list\u3002\n\u800c recover \u8207 recoverWith \u7684\u5dee\u5225\u5c31\u5728\u65bc\uff0crecoverWith \u5167\u7684 Function \u8981\u56de\u50b3\u7684\u578b\u614b\u662f Future[Int] \u800c recover \u5247\u662f Int\u3002\n\u665a\u9ede\u6574\u7406\u4e00\u500b\u4f7f\u7528 Future \u7684\u5b8c\u6574\u4f8b\u5b50\u597d\u4e86\uff0c\u73fe\u5728\u5beb\u7684\u6771\u897f\u771f\u7684\u592a\u4e0d\u5165\u6d41\u4e86 XDDDDDD\n\u6211\u5f88\u96e3\u628a\u7a0b\u5f0f\u78bc\u76f4\u63a5\u8cbc\u4e0a\u4f86\u7576\u7bc4\u4f8b\u3002", 
      "tags": "Scala,Akka", 
      "loc": "/posts/akka-2_0-note-3.html", 
      "title": "Akka 2.0 \u7b46\u8a18(3) - Future \u4e4b\u5be6\u5728\u4e0d\u662f\u6211\u60f3\u8981\u62d6\u7a3f"
    }, 
    {
      "text": "\u4ee5\u524d\u518d\u4f7f\u7528 Java Thread \u7684\u6642\u5019\u6700\u56f0\u64fe\u6211\u7684\u5c31\u662f Thread \u4e4b\u9593\u7684\u6e9d\u901a\u3002\n\u8981\u600e\u6a23\u8b93\u4e00\u500b Thread \u53bb\u7b49\u5f85\u53e6\u5916\u4e00\u500b Thread\uff1f\u8981\u600e\u6a23\u624d\u80fd\u8b93\u5de5\u4f5c\u5206\u914d\u7684\u5e73\u5747\uff1f\n\u6700\u5f8c\u662f\u9760 BlockingQueue \u624d\u8b93\u5be6\u4f5c\u8b8a\u5f97\u7c21\u55ae\u4e00\u9ede\uff0c\n\u4e0d\u904e\u60f3\u7576\u7136\u554f\u984c\u7576\u7136\u4e00\u5927\u5806 ... Orz\n\u6240\u4ee5\u60f3\u4f86\u5be6\u9a57\u770b\u770b Akka \u7684 Future \u8207 Router \u5230\u5e95\u662f\u5982\u4f55\u4f7f\u7528\uff0c\u8207\u53ef\u4ee5\u505a\u5230\u4ec0\u9ebc\u4e8b\u60c5\u3002\n\n\nFuture\n\u8acb\u642d\u914d Akka \u5b98\u7db2 Future \u670d\u7528\u3002\n\u770b Future \u4e00\u5b9a\u8981\u770b\u4e00\u4e0b\u6587\u4ef6\u7b2c\u4e00\u53e5\u8a71\n\nIn Akka, a Future is a data structure used to retrieve the result of some concurrent operation.\n\u662f\u7684\uff0c\u4ed6\u53ea\u662f\u4e00\u500b Data Structure \u800c\u5df2\uff0cFuture \u6700\u4e3b\u8981\u7684\u529f\u80fd\u5c31\u662f\u53ef\u4ee5\u900f\u904e\u4ed6\u53d6\u5f97 Actor \u56de\u50b3\u7684 message\n\u4e5f\u53ef\u4ee5\u5c07\u4ed6\u60f3\u6210\u4ed6\u4ee3\u8868\u6211\u5011\u672a\u4f86\u6703\u53d6\u5f97\u7684\u56de\u50b3\u503c\uff0c\u6211\u60f3\u9019\u4e5f\u5c31\u662f\u5b83\u53eb\u505a Future \u7684\u539f\u56e0\u4e86\u3002\n\nimplicit val timeout = Timeout(5 seconds)\nval future = actor ? msg // enabled by the \"ask\" import\nval result = Await.result(future, timeout.duration).asInstanceOf[String]\n\n\u5077\u4e00\u4e0b\u5b98\u7db2\u7684\u7bc4\u4f8b\uff0c\u6211\u5011\u4e00\u884c\u4e00\u884c\u770b\u4e0a\u9762\u7684\u7a0b\u5f0f\u78bc\u3002\n\u4e00\u958b\u59cb\u7684\n\nimplicit val timeout = Timeout(5 seconds)\n\n\u5c31\u5148\u5ffd\u7565 implicit \u5427\uff0c\u56e0\u70ba\u9019\u908a\u9084\u6c92\u6709\u7528\u5230 implicit \u7684\u7279\u6027\u3002\n\u73fe\u5728\u53ea\u8981\u77e5\u9053\u4ed6\u5efa\u7acb\u4e86\u4e00\u500b Timeout \u7269\u4ef6\uff0c\u5167\u5bb9\u662f 5 seconds\uff0c\u9019\u500b\u5728\u4e4b\u5f8c\u8a2d\u5b9a wait timeout \u7684\u6642\u5019\u6703\u7528\u5230\u2027\n\u70ba\u4e86\u907f\u514d\u7121\u6b62\u76e1\u7684\u7b49\u5f85\uff0c\u5728 Actor \u88e1\u9762\u53ea\u8981\u6709\u95dc\u7b49\u5f85\u7684\u64cd\u4f5c\u90fd\u8981\u7d66\u4e00\u500b Timeout \u6642\u9593\u3002\n\nval future = actor ? msg // enabled by the \"ask\" import\n\n\u9019\u88e1\u767c\u4e00\u500b msg \u7d66 actor \uff0c\u7279\u5225\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f\u9019\u88e1\u4e0d\u662f\u4f7f\u7528* ! \u800c\u662f ? \u3002\n\u8981\u4f7f\u7528\u9019\u500b ? \u9700\u8981 *import akka.pattern.ask\uff0c\u8ddf ! \u4e0d\u4e00\u6a23\u7684\u5730\u65b9\u5728\u65bc\u4ed6\u6703\u56de\u50b3\u4e00\u500b Future[Any] \u7269\u4ef6\n\nval result = Await.result(future,timeout.duration).asInstanceOf[String]\n\n\u6700\u5f8c\u4f7f\u7528 Await \u4f86\u900f\u904e Future \u53d6\u5f97 Actor \u7684\u56de\u50b3\u503c\uff0c\u4e26\u4e14\u8a2d\u5b9a\u4e00\u500b timeout \u6642\u9593\uff0c\u5982\u679c\u6642\u9593\u5230 Actor \u6c92\u6709\u56de\u50b3\u4efb\u4f55\u6771\u897f\u7684\u8a71\uff0c\u5c31\u6703\u4e1f\u51fa\u4e00\u500b Timeout Exception\u3002\n\n\u5982\u679c\u8981\u7b49\u5f85\u5f88\u591a\u500b Actor \u56de\u50b3\u503c\u5462\uff1f\n\u5982\u679c\u8981\u5c07\u5de5\u4f5c\u5206\u6d3e\u7d66\u591a\u500b Actor \u9032\u884c\u904b\u4f5c\uff0c\u90a3\u9ebc\u6700\u76f4\u89ba\u7684\u60f3\u6cd5\u5c31\u662f\n\nval f1 = actor1 ? msg1\nval f2 = actor2 ? msg2\n\nval a = Await.result(f1, 1 second).asInstanceOf[Int]\nval b = Await.result(f2, 1 second).asInstanceOf[Int]\n\nval f3 = actor3 ? (a+b)\n\nval result = Await.result(f3, 1 second).asInstanceOf[Int]\n\n\u6211\u5148\u5c07\u5de5\u4f5c\u767c\u7d66 actor1 \u7b49\u4ed6\u56de\u50b3\uff0c\u7136\u5f8c\u518d\u767c\u7d66 actor2 \u7b49\u5f85\u56de\u50b3\uff0c\u6700\u5f8c\u5728\u5c07\u56de\u50b3\u7d50\u679c\u767c\u7d66 actor3\u3002\n\u70ba\u4e86\u8981\u53d6\u5f97 a\u3001b \u800c\u4f7f\u7528\u4e86 Await \u5169\u6b21\uff0c\u9019\u6a23\u7684\u4f5c\u6cd5\u975e\u5e38\u6c92\u6709\u6548\u7387\uff0c\u56e0\u6b64\u6709\u4e86 sequence \u8207 traverse \u9019\u5169\u500b function\u3002\n\u8209\u4f8b\u4f86\u8aaa\uff0c\u5982\u679c\u6211\u6709\u4e00\u500b\n\nList[String](\"Tony\",\"Lion\",\"Teddy\",\"Brain\",\"Jess\",\"Kay\",\"Michael\")\n\n\u4e26\u4e14\u60f3\u8981\u9019\u500b List \u5167\u6240\u6709\u5b57\u4e32\u7684\u9577\u5ea6\u7e3d\u548c\u3002\n\nval list = List[String](\"Tony\",\"Lion\",\"Teddy\",\"Brain\",\"Jess\",\"Kay\",\"Michael\")\nval listOfFutures = list map {\n   name =>\n      (countActor ? name).mapTo[Int]\n}\n\n\u5728\u9019\u908a\u6211\u5011\u5f97\u5230\u4e86\u4e00\u500b\u578b\u614b\u70ba List[Future[Int]] \u7684 listOfFutures\uff0c\u518d\u4f86\u5c31\u53ef\u4ee5\u4f7f\u7528 sequence \u5c07\u5176\u8f49\u6210 Future[List[Int]]\n\u6700\u5f8c\u5c31\u53ef\u4ee5\u4f7f\u7528 Await \u4f86\u53d6\u5f97\u6240\u6709\u5b57\u4e32\u9577\u5ea6\u4e86\uff0c\u4e26\u4e14\u7d71\u8a08\u5b57\u6578\u4e86\u3002\n\nval futureList = Future.sequence(listOfFutures)\nval lengthList = Await.result(futureList,1 second)\n\n\u800c sequence \u8207 traverse \u5169\u500b\u4e0d\u4e00\u6a23\u7684\u5730\u65b9\u5728\u65bc\u8aaa\nsequence \u63a5\u53d7\u4e00\u500b List[Future[A]] \u8f49\u6210 Future[List[A]]\u3002\n\nval futureList:Future[List[Int]] = Future.sequence((1 to 100).toList.map(x=>Future(x+1)))\n\n\u800c traverse \u5247\u662f\u63a5\u53d7\u4e00\u500b List[B] \u8207\u4e00\u500b function (B=>Future[A]) \u6700\u5f8c\u4e5f\u662f\u7522\u751f Future[List[A]]\n\nval futureList:Future[List[Int]] = Future.traverse((1 to 100).toList)(x => Future(x+1))\n\n\u7528 traverse \u7684\u597d\u8655\u5728\u65bc\u5c11\u7522\u751f\u4e86\u4e2d\u9593\u904e\u7a0b\u7684 List[Future[Int]] (\u81f3\u5c11\u6211\u5011\u7684\u7a0b\u5f0f\u78bc\u770b\u4e0d\u5230\uff0c\u80cc\u5f8c\u5be6\u969b\u4e0a\u6709\u6c92\u6709\u6211\u5c31\u4e0d\u78ba\u5b9a\u4e86\uff0c\u4e0d\u904e\u6587\u4ef6\u662f\u9019\u6a23\u8aaa\u7684)\uff0c\u800c\u76f4\u63a5\u7522\u751f\u4e86 Future[List[Int]]\u3002\n\u5beb\u4e86\u9019\u9ebc\u4e45\uff0c\u624d\u5beb\u9019\u9ebc\u4e00\u9ede\u9ede Orz ... \u800c\u4e14\u9084\u5b8c\u5168\u6c92\u6709\u9032\u5165\u91cd\u9ede\u3002", 
      "tags": "Scala,Akka", 
      "loc": "/posts/akka-2_0-note-2.html", 
      "title": "Akka 2.0 \u7b46\u8a18 (2) - \u958b\u59cb\u4f7f\u7528 Future"
    }, 
    {
      "text": "\u56e0\u70ba\u6211\u7684\u7a0b\u5f0f\u9084\u6c92\u6709\u5beb\u5b8c\uff0c\u6240\u4ee5\u662f\u7b46\u8a18 (1)\uff0c\u5beb\u7684\u904e\u7a0b\u61c9\u8a72\u9084\u6703\u6709 2 3 ... \u51fa\u73fe Orz\u3002\n\nAkka 2.0 - \u8981\u5347\u7d1a\u4e86\n\u4f60\u7684\u6642\u9593\u7684\u5eab\u5b58\u91cf\u8db3\u5920\u55ce ?\nAkka \u9032\u5165\u4e86 2.0 \u6642\u4ee3\uff0c\u606d\u559c\u4f60\u5982\u679c\u4f60\u662f\u7528 1.x \u7684\u8a71\uff0c\u8acb\u6e96\u5099\u6539\u5beb\u5427 ...\n\u5148\u5f9e\u5e7e\u500b\u65b9\u9762\u4f86\u770b 2.0 \u7684\u65b0\u589e\u4e8b\u9805\u3002\n\n\u4ee5\u4e0b\u7b97\u662f\u7b46\u8a18\uff0c\u5982\u6709\u932f\u8aa4\u8acb\u591a\u6307\u6559\n\nActor\n\u5f9e\u5b98\u7db2\u7bc4\u4f8b\u4f86\u770b\uff0cActor \u7684\u67b6\u69cb\u9084\u662f\u8ddf\u4e4b\u524d\u4e00\u6a23\u6c92\u6709\u4ec0\u9ebc\u6539\u8b8a\n\nimport akka.actor.Actor\nimport akka.actor.Props\nimport akka.event.Logging\n\nclass MyActor extends Actor {\n  val log = Logging(context.system, this)\n  def receive = {\n    case \"test\" => log.info(\"received test\")\n    case _      => log.info(\"received unknown message\")\n  }\n}\n\n\u4f46\u662f\u4e0a\u9762\u7684\u7a0b\u5f0f\u78bc\u4f60\u6703\u770b\u5230\u4e00\u500b\u6709\u9ede\u964c\u751f\u7684\u6771\u897f context.system\u3002\n2.0 \u5efa\u7acb Actor \u7684\u65b9\u5f0f\u5df2\u7d93\u6709\u4e86\u6539\u8b8a\uff0c\u73fe\u5728\u7684 Actor \u53ef\u4ee5\u6709\u968e\u5c64\u95dc\u4fc2\uff08\u5c31\u50cf\u8001\u9f20\u6703\u4e00\u6a23 Orz\uff09\u3002\n\u5f9e Actor \u7684 context \u4e2d\u53ef\u4ee5\u53d6\u5f97\u5f88\u591a\u8a72 Actor \u7684\u8cc7\u8a0a\u8207\u64cd\u4f5c\u65b9\u5f0f\u3002\u800c ActorSystem \u5efa\u7acb\u51fa\u4f86\u7684 Actor \u5c31\u6703\u4f4d\u65bc\u6700\u4e0a\u5c64\u3002\n\nobject Main extends App\n{\n  val system = ActorSystem(\"MySystem\")\n  val myActor = system.actorOf(Props[MyActor], name = \"myactor\")\n}\n\n\u5ef6\u7e8c\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5982\u679cMyActor\u5167\u9700\u8981\u5efa\u7acb\u5176\u4ed6Actor\n\ncontext.actorof(Props[children], name = \"children\")\n\n\u5229\u7528\u9019\u7a2e\u968e\u5c64\u95dc\u4fc2\u6709\u4ec0\u9ebc\u597d\u8655\u5462\uff1f\n\u5728\u4e4b\u524d Akka1.3 \u7684\u6642\u4ee3\uff0c\u6211\u5c31\u7d93\u6b77\u904e\u975e\u5e38\u75db\u82e6\u7684\u904e\u7a0b\uff0c\u90a3\u6642\u5019\u9084\u6c92\u6709\u50cf 2.0 \u9019\u6a23\u7684\u968e\u5c64\u95dc\u4fc2\u3002\n\u6240\u4ee5\u5982\u679c\u6211\u5728\u505c\u6b62\u4e00\u500b Actor \u4e4b\u524d\u6c92\u6709\u5148\u628a\u4ed6\u5e95\u4e0b\u7684 Actor \u90fd\u505c\u6b62\u7684\u8a71\uff0c\u7a0b\u5f0f\u662f\u6c92\u6709\u8fa6\u6cd5\u6b63\u5e38\u7d50\u675f\u7684\uff08\u56e0\u70ba\u9084\u6709 Actor \u6d3b\u8457\uff09\u3002\n\u6240\u4ee5\u5fc5\u9808 override Actor \u88e1\u9762\u7684 function \u8b93\u4ed6\u5728\u505c\u6b62\u4e4b\u524d\uff0c\u6703\u5148\u53bb\u7d50\u675f\u4ed6\u5e95\u4e0b\u7684 Actor\u3002\n\u70ba\u4e86\u4f5c\u5230\u9019\u4ef6\u4e8b\uff0c\u6211\u9084\u8981\u591a\u5f04\u4e00\u500b List \u53bb\u7d00\u9304\u4ed6\u6709\u5efa\u7acb\u54ea\u4e9b Actor\u3002\n\u7136\u5f8c\u62fc\u547d\u7684\u767c message \u53eb Actor \u53bb\u6b7b\u53bb\u6b7b\u53bb\u6b7b\u53bb\u6b7b Orz\u3002\n\u4f46\u662f\u9019\u4e9b\u7169\u60f1\u57282.0\u5c31\u901a\u901a\u4e0d\u898b\u5566\uff01\uff01\uff01\uff01\uff01\n\u73fe\u5728\u8981\u505c\u6b62\u53ea\u8981\u7528\n\ncontext.stop(self)\n\n\u5c31\u6703\u5e79\u6389\u5e95\u4e0b\u7684\u90e8\u5c6c\u4e4b\u5f8c\u518d\u505a\u6389\u81ea\u5df1\uff0c\u771f\u662f\u8b93\u4eba\u6e05\u723d\u53c8\u6109\u5feb\uff08\u7159\uff09\n\n\nEventStream\n\u6700\u65e9\u77e5\u9053 EventStream \u6216 EventBus \u9019\u7a2e\u67b6\u69cb\u662f\u5728 GWT \u7684\u6642\u5f8c\uff0c\u90a3\u6642\u5019\u4e00\u7528\u5be6\u5728\u9a5a\u70ba\u5929\u4eba\u3002\n\u771f\u662f\u592a\u65b9\u4fbf\u4e86\uff0c\u96d6\u7136\u6574\u9ad4\u67b6\u69cb\u8ddf Observer Pattern \u4e00\u6a23\uff0c\u4f46\u662f\u4eba\u5bb6\u5c31\u662f\u7528\u5f97\u5f88\u6f02\u4eae\u3002\nEventStream \u53ea\u5b58\u5728\u65bc ActorSystem \u5e95\u4e0b\uff0c\u8981\u4f7f\u7528 EventStream \u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u5148\u8a3b\u518a Actor \u8207\u4ed6\u8981\u63a5\u6536\u7684\u7269\u4ef6\u985e\u578b\u3002\n\nimport akka.actor.{ Actor, DeadLetter, Props }\n\nval listener = system.actorOf(Props(new Actor {\n  def receive = {\n    case d: DeadLetter => println(d)\n  }\n}))\nsystem.eventStream.subscribe(listener, classOf[DeadLetter])\n\n\u4e0a\u9762\u7684\u7a0b\u5f0f\u78bc\u7522\u751f\u4e86\u4e00\u500b listener \u7684 Actor \u4e26\u4e14\u8a3b\u518a\u8aaa\u5982\u679c\u6709 DeadLeatter \u985e\u578b\u7684\u7269\u4ef6\u9001\u5230 EventStream \u5167\uff0c\u5c31\u6703\u50b3\u9001\u7d66\u4ed6\u3002\n\u96d6\u7136\u6587\u4ef6\u8aaa\u4e3b\u8981\u662f\u62ff\u4f86\u4f5c Log \u6216\u8005\u662f\u76e3\u807d\u4e8b\u4ef6\uff0c\u4f46\u6211\u62ff\u4f86\u7576\u5176\u4ed6\u7684\u7528\u9014\uff0c\u4f8b\u5982\u767c\u7d66\u6240\u6709\u7684 Actor \u8b93\u4ed6\u5011\u81ea\u5df1\u8a8d\u9818\u5de5\u4f5c\u4e4b\u985e\u7684\u3002\n\n\nEvent Handler\nEvent Handler \u662f\u62ff\u4f86\u4f5c log \u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5be6\u4f5c\u4e00\u500b EventListener \u4f86\u76e3\u807d\u6240\u6709\u7684\u4e8b\u4ef6\u3002\n\u8ddf Log4j \u7b49\u5de5\u5177\u4e00\u6a23\uff0c\u53ef\u4ee5\u5206\u6210\nError\nWarning\nInfo\nDebug\n\u770b\u8d77\u4f86\u4f3c\u4e4e\u53ef\u4ee5\u62ff\u4f86\u4f5c\u70ba\u4f8b\u5916\u8655\u7406\u6216\u8005\u4f5c\u4e00\u500b\u4e8b\u4ef6\u91cd\u767c\u7684\u5de5\u5177\u3002\n\n\u5be6\u4f5cEventListener\n\nval errorHandlerEventListener = Actor.actorOf(new Actor {\n  self.dispatcher = EventHandler.EventHandlerDispatcher\n\n  def receive = {\n    case EventHandler.Error(cause, instance, message) => ...\n    case EventHandler.Warning(instance, message) => ...\n    case EventHandler.Info(instance, message) => ...\n    case EventHandler.Debug(instance, message) => ...\n    case genericEvent => ...\n  }\n})\n\n\u52a0\u5165EventListener\n\nEventHandler.addListener(errorHandlerEventListener)\n\n\u79fb\u9664EventListener\n\nEventHandler.removeListener(errorHandlerEventListener)\n\nLog \u8a0a\u606f\n\nEventHandler.error(exception, this, message)\nEventHandler.error(this, message)\nEventHandler.warning(this, message)\nEventHandler.info(this, message)\nEventHandler.debug(this, message)\n\n\n\n\nScheduler\nAkka \u5167\u6709\u9644\u4e00\u500b\u7c21\u55ae\u7684 Scheduler\uff0c\u4ed6\u53ef\u4ee5\u8b93\u4f60\u6392\u7a0b\u4ec0\u9ebc\u6642\u5019\u8981\u767c\u8a0a\u606f\u7d66 Actor\n\nimport akka.actor.Scheduler\n\n//Sends messageToBeSent to receiverActor after initialDelayBeforeSending and then after each delayBetweenMessages\nScheduler.schedule(receiverActor, messageToBeSent, initialDelayBeforeSending, delayBetweenMessages, timeUnit)\n\n//Sends messageToBeSent to receiverActor after delayUntilSend\nScheduler.scheduleOnce(receiverActor, messageToBeSent, delayUntilSend, timeUnit)\n\n\n\nEvent Driven\n\u4e00\u76f4\u5230\u6700\u8fd1\u5728\u5be6\u4f5c\u5c0f\u73a9\u5177\u624d\u60f3\u5230\u7684\uff0c\u6211\u60f3\u9019\u4e0d\u662f\u65b0\u7684\u6771\u897f\uff0c\u53ef\u662f\u7528Akka\u6216\u8a31\u53ef\u4ee5\u628a\u9019\u4ef6\u4e8b\u60c5\u8b8a\u5f97\u975e\u5e38\u65b9\u4fbf\u3002\n\u4ee5\u524d\u5728\u5b78Design Pattern\u7684\u6642\u5019\uff0c\u5176\u5be6\u6574\u9ad4\u67b6\u69cb\u7b97\u662f\u5f88\u5bb9\u6613\u7406\u89e3\u7684\u6771\u897f\u3002\nBut ! \u5c31\u662f\u9019\u500bBut\uff0c\u5728\u5beb\u7684\u6642\u5019\u537b\u6703\u5e38\u5e38\u7d81\u624b\u7d81\u8173\uff0c\u4f8b\u5982MVC\u7684Pattern\uff0c\u6211\u5230\u5e95\u8981\u4e0d\u8981\u5728Control\u4e2d\u7d00\u9304Model\u8207View\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u4e0d\u7d00\u9304\u7684\u8a71\u6211\u53c8\u8981\u600e\u9ebc\u627e\u5230\u4ed6\u5011\uff0c\u7136\u5f8c\u6574\u500b\u57f7\u884c\u6d41\u7a0b\u53c8\u662f\u5982\u4f55\uff1f\n\u9019\u662f\u4e00\u4ef6\u5f88\u9ebb\u7169\u7684\u4e8b\u60c5\uff0c\u96d6\u7136\u73fe\u5728\u7528\u8d77\u4f86\u662f\u6c92\u5565\u611f\u89ba\uff0c\u4f46\u662f\u6211\u4e5f\u5e38\u70ba\u4e86Model\u4e4b\u9593\u7684\u6e9d\u901a\u6d41\u7a0b\u611f\u5230\u56f0\u64fe\u3002\n\u5c0f\u7684\u5728\u4e0b\u6211\uff0c\u5beb\u8ad6\u6587\u7684\u6642\u5019\u5be6\u4f5c\u7684\u6771\u897f\u5176\u57fa\u790e\u67b6\u69cb\u662f\u5efa\u7acb\u5728JavaSpace\u4e0a\u9762\uff0c\u9019\u500b\u6771\u897f\u4e0d\u8981\u8aaa\u73fe\u5728\u6c92\u5565\u4eba\u807d\u904e\u4e86\uff0c\u5c31\u9023\u6211\u5728\u7528\u7684\u6642\u5019\u90fd\u5f88\u60b2\u5287\u3002\n\u4f46\u662f\u4ed6\u8a2d\u8a08\u6982\u5ff5\u6211\u89ba\u5f97\u5f88\u68d2\uff0c\u4ed6\u63d0\u4f9b\u4e00\u500bPool\u53ef\u4ee5\u8b93\u4f60\u628aObject\u4e1f\u9032\u53bb\uff0c\u6709\u8208\u8da3\u7684Process\u5c31\u53ef\u4ee5\u81ea\u5df1\u53bb\u90a3\u500bPool\u6436\u3002\n\u4f46\u662f\u9019\u500b\u6771\u897f\u5c31\u60b2\u5287\u5728\u4ed6\u5f8c\u4f86\u6c92\u6709\u5728\u7dad\u8b77\u4e86\uff0c\u800c\u4e14\u4ed6\u7684Server\u67b6\u8a2d\u975e\u5e38\u9ebb\u7169\uff0cAPI\u975e\u5e38\u96e3\u7528\u3002\n\u4e00\u76f4\u5230\u5f8c\u4f86\u5728GWT\u4e2d\u770b\u5230Event Bus\uff0c\u6211\u89ba\u5f97\u9019\u771f\u662fTMD\u7684\u597d\u6771\u897f\u3002\n\u53cd\u6b63\u6bcf\u500bModel\u5c31\u662f\u628aEvent\u4e1f\u5230Event Bus\u88e1\u9762\u5c31\u597d\u4e86\uff0c\u7136\u5f8c\u8ab0\u611b\u64bf\u5c31\u64bf\u53bb\u73a9\uff0c\u5c04\u5f8c\u4e0d\u7406\u771f\u662f\u7537\u4eba\u7684\u6d6a\u6f2b\uff08\u8aa4\uff09\u3002\n\u56e0\u6b64\u6700\u8fd1\u624d\u60f3\u5230\uff0c\u5982\u679c\u5229\u7528Akka\u4f86\u4f5c\u4e00\u500b\u985e\u4f3cJavaSpace\u7684\u6771\u897f\u5982\u4f55\uff0c\u6bcf\u500bModule\u90fd\u662f\u4e00\u500b\u7368\u7acb\u7684Actor\uff0cModule\u5728\u63a5\u6536\u5230\u5de5\u4f5c\u628a\u5de5\u4f5c\u5b8c\u6210\u5c31\uff0c\u5c31\u5c07\u7d50\u679c\u4e1f\u56deSpace\u3002\n\u8209\u500b\u4f8b\u5b50\u5c31\u50cf\u4e4b\u524d\u8209\u4f8b\u8209\u5230\u721b\u6389\u7684\u67d0\u5927\u8ad6\u58c7Parser\uff0c\u9700\u8981\u5c07\u6587\u7ae0\u5167\u5bb9\u7d00\u9304\u5230\u8cc7\u6599\u5eab\u88e1\u9762\uff0c\u4e26\u4e14\u9084\u8981\u53bb\u4e0b\u8f09\u76f8\u95dc\u7684\u5716\u7247\u3002\n\u56e0\u6b64\u6211\u5c31\u6a21\u4effEva Magi\u7cfb\u7d71\uff08\u5927\u8aa4\uff09\uff0c\u5c07Parser Module\u3001Data Module\u8207Download Module\u5404\u81ea\u7368\u7acb\u6210\u4e00\u500bActor\u3002\n\u7cfb\u7d71\u555f\u52d5\u7684\u6642\u5019\uff0c\u7531\u7cfb\u7d71\u53bb\u5efa\u7acbSpace\uff0c\u4e26\u4e14\u5c07\u9019\u4e09\u500bModule\u4f9d\u7167\u5176MetaData\u7684\u8a2d\u5b9a\u8981\u5c07\u54ea\u4e9bEvent\u50b3\u9001\u7d66\u4ed6\u5011\uff08\u5176\u5be6\u5c31\u662fObserver Pattern\uff09\u3002\nParser\u5b9a\u6642\u81ea\u52d5\u53bb\u8ad6\u58c7\u53d6\u5f97\u6587\u7ae0\u5167\u5bb9\uff0c\u4e26\u4e14\u5c07\u5167\u5bb9\u4e1f\u5230Space\u88e1\u9762\u3002\u9019\u6642Data Module\u5c31\u53ef\u4ee5\u5c07\u6587\u7ae0\u8cc7\u6599\u5beb\u5230\u8cc7\u6599\u5eab\u4e2d\uff0c\u800cDownload Module\u4e5f\u540c\u6642\u9032\u884c\u4e0b\u8f09\u3002\n\u9019\u6a23\u7684\u67b6\u69cb\u53ef\u4ee5\u8996\u60c5\u6cc1\u8b93\u4ed6\u662fSingle Thread\u6216Multiple Thread\u7684\u7a0b\u5f0f\u3002\u53ea\u8981\u597d\u597d\u7ba1\u7406Event\u7684\u6d41\u52d5\u65b9\u5f0f\u5c31\u53ef\u4ee5\u4e86\u3002\n\u81f3\u65bc\u9019\u6a23\u7684\u67b6\u69cb\u597d\u4e0d\u597d\u6e2c\u8a66\u5462\uff1f\u6211\u89ba\u5f97\u9019\u6a23\u5beb\u6709\u4e00\u500b\u597d\u8655\uff0c\u5c31\u662f\u53ef\u4ee5\u5f37\u8febProgrammer\u5beb\u51fa\u6c92\u6709\u526f\u4f5c\u7528\u7684\u7a0b\u5f0f\uff0c\u56e0\u70ba\u4f60\u5fc5\u9808\u8981\u5c07\u6240\u4ee5\u8655\u7406\u7d50\u679c\u90fd\u4e1f\u56deSpace\u88e1\u9762\u3002\n\u56e0\u6b64\u6e2c\u8a66\u7684\u6642\u5019\uff0c\u53ea\u8981\u5efa\u7acb\u8a72Module\uff0c\u4e26\u4e14\u50b3\u9001Mock Event\u7d66\u4ed6\u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u4ed6Module\u4e26\u4e0d\u9700\u8981\u88ab\u5efa\u7acb\u8d77\u4f86\u3002\u9019\u6a23\u7684\u67b6\u69cb\u4e5f\u964d\u4f4e\u4e86\u5404Module\u4e4b\u9593\u7684coupling\u3002\n\u6700\u5f8c\u5982\u679c\u60f3\u8981\u4f5c\u6240\u8b02\u7684\u96f2\uff5e\uff5e\uff5e\uff5e\uff5e\uff5e\uff5e\uff5e\u7aef\u7cfb\u7d71\uff08\u8001\u5be6\u8aaa\u9023\u6211\u90fd\u4e0d\u77e5\u9053\u5565\u9b3c\u624d\u53ebTMD\u7684\u96f2\uff5e\uff5e\uff5e\uff5e\uff5e\uff5e\u7aef\u7cfb\u7d71\uff09\uff0c\u5c31\u53ef\u4ee5\u5229\u7528Akka\u7684Remote Actor\u7684\u529f\u80fd\uff0c\n\u5c07\u4e0d\u540c\u7684Module\u4e1f\u5230\u4e0d\u540c\u7684\u6a5f\u5668\u4e0a\u9762\u4f5c\uff0c\u751a\u81f3\u662f\u540c\u4e00\u500bModule\u53ef\u4ee5\u6709\u597d\u5e7e\u500b\u4f86\u5206\u5de5\u3002\nWao cow \u8d8a\u60f3\u611f\u89ba\u8d8a\u5922\u5e7b\uff0c\u6709\u7a7a\u4f86\u5be6\u4f5c\u770b\u770b\u5230\u5e95\u6703\u9047\u5230\u4ec0\u9ebc\u554f\u984c\u597d\u4e86\u3002", 
      "tags": "Scala,Akka", 
      "loc": "/posts/akka-2_0-note-1.html", 
      "title": "Akka 2.0 \u7b46\u8a18 (1)"
    }, 
    {
      "text": "\u597d\u5427\uff0c\u6211\u8981\u958b\u59cb\u7b46\u8a18\u4e00\u4e0b\u9019\u6b21\u7684\u5be6\u4f5c\u5fc3\u5f97\u4e86\n\u5176\u5be6\u5728\u5b78 Scala \u7684\u9019\u4e00\u6bb5\u6642\u9593\u4e2d\uff0c\u6211\u6700\u56f0\u64fe\u7684\u5c31\u662f\u5230\u5e95\u600e\u6a23\u624d\u662f\u597d\u7684 Scala \u5beb\u4f5c\u98a8\u683c\u3002\n\u56e0\u70ba Scala \u6700\u5438\u5f15\u6211\u7684\u90e8\u4efd\u5c31\u662f\u5728\u65bc\u4ed6\u7684\u8a9e\u6cd5\u53ef\u4ee5\u4e0d\u65b7\u7684\u7cbe\u934a\u518d\u7cbe\u934a\uff0c\u6700\u5f8c\u8b8a\u6210*\u9b54\u6cd5\u6587\u5b57* Orz\u3002\n\u6240\u4ee5\u8981\u600e\u6a23\u5584\u7528 Scala \u7684\u8a9e\u8a00\u7279\u6027\uff0c\u537b\u53c8\u4e0d\u5931\u53ef\u8b80\u6027\uff0c\u6211\u89ba\u5f97\u771f\u7684\u5f88\u96e3\u3002\n\u56e0\u6b64\u5728\u9019\u6b21\u7684\u5c0f\u5de5\u5177\u5be6\u4f5c\u4e2d\uff0c\u6211\u8a66\u8457\u6478\u7d22 Curry \u7684\u7528\u6cd5\u3002\n\n\nCurry\n\u8aaa\u5230\u6559\u5b78\u6587\u4ef6\uff0c\u5c31\u4e00\u5b9a\u8981\u63a8\u4e00\u4e0b \u826f\u845b\u683c\u7684\u5b78\u7fd2\u7b46\u8a18 \u88e1\u9762\u4ed6\u6709\u63d0\u5230 Curry  \u7684\u8a9e\u6cd5\u8207\u4f55\u8b02 Curry \u3002\n\u4f46\u662f\u6211\u66f4\u559c\u6b61\u5728 jserv's blog \u4ee5 C \u8a9e\u8a00\u5be6\u505a Functional Language \u7684 Currying  \u770b\u5230\u7684\u8aaa\u660e\u3002\nCurry \u53ef\u4ee5\u770b\u6210\u6578\u5b78\u7684\u591a\u9805\u5f0f\uff0c\u8209\u4f8b\u4f86\u8aaa\u73fe\u5728\u6709\u4e00\u500b\u591a\u9805\u5f0f\n\nF(X,Y) = X + Y\n\u90a3\u9ebc Curry \u7684\u611f\u89ba\u5c31\u662f\u6211\u73fe\u5728\u5df2\u77e5 X \u70ba 10 \u4e4b\u985e\u7684\uff0c\u7136\u5f8c\u5c07\u5176\u4ee3\u5165\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u591a\u9805\u5f0f\u53c8\u8b8a\u6210\u53e6\u5916\u4e00\u500b\u591a\u9805\u5f0f\n\nF(Y) = 10 + Y\n\u5982\u679c\u5c07\u9019\u6bb5\u7528 Scala \u4f86\u8868\u793a\u5c31\u662f\n\n// \u9019\u662f F(X,Y)\ndef F(X:Int)(Y:Int)={\n   X + Y\n}\n\n// \u5e36\u5165 X = 10\n\nval F1 = F(10)\n\n\n\nCurry \u7684\u4f7f\u7528\u6848\u4f8b\n\u5728 jserv \u7684\u6587\u7ae0\u6709\u63d0\u5230\u4e00\u500b Ruby \u76ee\u9304\u6a39\u5c0b\u8a2a\u7684\u7bc4\u4f8b\uff0c\u525b\u597d\u6211\u5728\u9019\u6b21\u6709\u5be6\u4f5c\u985e\u4f3c\u7684\u6771\u897f\uff0c\u4f46\u662f\u529f\u529b\u4e0d\u8db3\u6c92\u6709\u8fa6\u6cd5\u5beb\u7684\u50cf Ruby \u90a3\u9ebc\u512a\u96c5\u3002\n\ndef walkDir(fileList: List[File] {})(expr: (File) => Unit): Unit = {\n    fileList match {\n      case file :: files =>\n        if (file.isDirectory)\n          walkDir(file.listFiles.toList ::: files)(expr)\n        else\n        {\n          expr(file)\n          walkDir(files)(expr)\n        }\n      case _ =>\n    }\n  }\n\n\u6211\u60f3\u9019\u6a23\u5beb\u6700\u5927\u7684\u554f\u984c\u61c9\u8a72\u662f\u6703\u5728\n\nwalkDir(file.listFiles.toList ::: files)(expr)\n\n\u9019\u908a\u6bcf\u6b21\u90fd\u6703\u7522\u751f\u4e00\u500b\u65b0\u7684 List \uff0c\u9019\u662f\u512a\u9ede\u4e5f\u662f\u7f3a\u9ede\uff0c\u6548\u7387\u6211\u60f3\u53ef\u80fd\u6703\u5dee\u4e86\u4e00\u9ede\uff0c\u4f46\u662f\u6211\u4e0d\u5728\u610f\uff0c\u53cd\u6b63\u9019\u500b\u7a0b\u5f0f\u4e0d\u662f\u4e00\u79d2\u5e7e\u5341\u842c\u4e0a\u4e0b\u7684\u6771\u897f\u3002\n\u90a3\u9ebc\u9019\u500b\u6771\u897f\u53ef\u4ee5\u600e\u9ebc\u7528\u5462\uff1f\n\u4f8b\u5982\u8981\u5370\u51fa\u6240\u6709\u8cc7\u6599\u593e\u5e95\u4e0b\u7684\u6a94\u6848\n\nwalkDir(folder){println}\n\n\u522a\u9664\u5e95\u4e0b\u6240\u6709\u540d\u7a31\u5305\u542b test \u7684\u6a94\u6848\n\nwalkDir(folder){\n   file=>\n      if(file.getName.contains(\"test\"))\n         file.delete\n}\n\n\u6211\u53e6\u5916\u4e00\u500b\u6709\u4f7f\u7528 Curry \u7684\u5730\u65b9\n\ndef InputToOutput(buffer: Array[Byte])(fis: InputStream, fos: OutputStream) =\n{\n   def bufferReader(fis: InputStream)(buffer: Array[Byte]) = (fis.read(buffer), buffer)\n\n   def writeToOutputStream(reader: (Array[Byte]) => Tuple2[Int, Array[Byte]], fos: OutputStream): Boolean = {\n     val (length, data) = reader(buffer)\n     if (length >= 0) {\n       fos.write(data, 0, length)\n       writeToOutputStream(reader, fos)\n     } else\n       true\n   }\n\n   writeToOutputStream(bufferReader(fis)_, fos)\n\n (fis, fos)\n}\n\n\u9019\u500b function \u4e3b\u8981\u8ca0\u8cac\u5c07 InputStream \u7684\u8cc7\u6599\u5beb\u5230 OutputStream\u3002\n\u7b2c\u4e00\u500b Curry \u662f InputToOutput \u4ed6\u8b93\u6211\u53ef\u4ee5\u7528 InputToOutput(buffer)_ \u5efa\u7acb\u4e00\u500b\u5df2\u7d93\u5ba3\u544a\u597d buffer \u7684 IO \u64cd\u4f5c function\u3002\n\u9019\u6a23\u6211\u5c31\u4e0d\u7528\u6bcf\u6b21\u90fd\u9084\u8981\u627e\u4e00\u500b buffer \u624d\u53ef\u4ee5\u958b\u59cb\u6211\u7684 IO \u64cd\u4f5c\uff0c\u53cd\u6b63 buffer \u7684\u5167\u5bb9\u8b80\u5b8c\u5c31\u53ef\u4ee5\u4e1f\u4e86\uff0c\u4e0d\u904e\u9019\u500b\u6c92\u6709\u8003\u616e multiple thread \u7684\u60c5\u6cc1\u5c31\u662f\u3002\n\u7b2c\u4e8c\u500b Curry \u662f\u8b93 Read InputStream \u7684 function \u8ddf\u50b3\u9032\u4f86\u7684 InputStream \u7d81\u5b9a\uff0c\u9019\u55ae\u7d14\u53ea\u662f\u60f3\u7c21\u5316\u4e4b\u5f8c\u7684\u64cd\u4f5c\uff0c\u8b93\u6211\u53ef\u4ee5\u4e0d\u7528\u518d\u8003\u616e InputStream \u9019\u500b\u53c3\u6578\u3002\n\u53cd\u6b63\u6211\u53ea\u8981\u7d66\u4e00\u500b buffer \u4ed6\u5c31\u6703\u81ea\u52d5\u8b80\u9032\u4f86\uff0c\u4e26\u4e14\u56de\u50b3\u8b80\u53d6\u7684\u5927\u5c0f\u8207 buffer \u672c\u8eab\u3002\n\u89e3\u58d3\u7e2e\u7684\u90e8\u4efd\u4e5f\u7528\u4e86\u985e\u4f3c\u7684\u6280\u5de7\n\ndef unzipAllFile(entryList: List[ZipEntry], getInputStream: (ZipEntry) => InputStream, targetFolder: File): Boolean = {\n    entryList match {\n      case entry :: entries =>\n\n        if (entry.isDirectory)\n          new File(targetFolder, entry.getName).mkdirs\n        else\n        {\n          val (input,output) = InputToOutput(getInputStream(entry), new FileOutputStream(new File(targetFolder, entry.getName)))\n\n          input.close\n          output.close\n        }\n\n        unzipAllFile(entries, getInputStream, targetFolder)\n\n      case _ =>\n        true\n    }\n}\n\n\u5927\u6982\u5c31\u9019\u4e9b\u4e86\uff0c\u7e3d\u89ba\u5f97\u7a0b\u5f0f\u9084\u662f\u5beb\u7684\u4e0d\u5920\u591a\uff0c\u9019\u4e9b Code \u61c9\u8a72\u53ef\u4ee5\u5beb\u7684\u518d\u66f4\u512a\u96c5\u4e00\u9ede\u624d\u662f\u3002", 
      "tags": "Scala", 
      "loc": "/posts/epubconverter-implement-note.html", 
      "title": "\u5be6\u4f5c EPUBConverter \u7684\u7b46\u8a18"
    }, 
    {
      "text": "EPUBConverter 0.0.1\n\u9019\u500b\u7248\u865f\u6211\u89ba\u5f97\u4e5f\u6c92\u6709\u6a5f\u6703\u5230 0.0.2 \u4e86\uff0c\u4e0d\u904e\u9084\u662f\u8b93\u6211\u547d\u540d\u500b\u7248\u865f\u6eff\u8db3\u5c0f\u5c0f\u7684\u865b\u69ae\u5fc3\u597d\u4e86\u3002\n\n\n\u4e0d\u8ca0\u8cac\u4efb\u7684\u4f7f\u7528\u6559\u5b78\n\u9019\u53ea\u662f\u4e00\u500b\u975e\u5e38\u7c21\u55ae\u7684\u5c0f\u5de5\u5177\uff0c\u7528 Scala \u64b0\u5beb\u800c\u6210\uff0c\u56e0\u6b64\u57f7\u884c\u74b0\u5883\u9700\u8981\u4f7f\u7528 JVM\u3002\n\u6211\u53ea\u6709\u6e2c\u8a66\u904e JDK 7 \u7684\u74b0\u5883\uff0c\u7406\u8ad6\u4e0a JDK 6 \u61c9\u8a72\u4e5f\u6c92\u6709\u554f\u984c\u3002\n\u5982\u679c\u6709\u4eba\u6709\u6e2c\u8a66\u5230\u6709\u554f\u984c\u7684\u8a71\uff08\u9ed8...\uff09\u6211\u4e5f\u4e0d\u77e5\u9053\u6709\u6c92\u6709\u6642\u9593\u6539 Orz\u3002\n\n\u8f49\u63db\u65b9\u5f0f\n\u8f49\u63db\u65b9\u5f0f\u611f\u8b1d \u516d\u5ea6\u6578\u4f4d\u7a7a\u9593 \u7684\u5206\u4eab\u3002\n\u5176\u5be6 epub \u7684\u683c\u5f0f\u662f\u4ee5 zip \u683c\u5f0f\u58d3\u7e2e\uff0c\u6240\u4ee5\u9019\u500b\u7a0b\u5f0f\u7684\u57f7\u884c\u6d41\u7a0b\u662f\n\u5c07 epub \u6a94\u89e3\u58d3\u7e2e\u5230\u66ab\u5b58\u8cc7\u6599\u593e\n\u5c07 \u66ab\u5b58\u8cc7\u6599\u593e\u88e1\u9762\u7684\u6240\u6709\u6a94\u6848\u5f9e UTF-8 \u7c21\u9ad4 \u8f49\u6210 UTF-8 \u7e41\u9ad4\n\u5c07\u8cc7\u6599\u593e\u58d3\u7e2e\uff0c\u4e26\u4e14\u9806\u4fbf\u5c07\u6a94\u540d\u8f49\u6210\u7e41\u9ad4\n\u7c21\u9ad4\u8f49\u7e41\u9ad4\u7684\u7a0b\u5f0f\u78bc\u662f\u4f7f\u7528 zhcode\n\u6574\u500b\u6b65\u9a5f\u5c31\u53ea\u6709\u9019\u6a23\u800c\u5df2\u3002\n\n\n\u4f7f\u7528\u65b9\u5f0f\n\u6574\u500b\u7a0b\u5f0f\u7684\u8cc7\u6599\u593e\u7d50\u69cb\u5982\u4e0b\n\n/EPUBConverter\n  |---Source\n  |---Result\n  |---Converter.bat\n  |---Converter.jar\n  |---hcutf8.txt\n\nhcutf8.txt \u662f\u500b\u5c0d\u61c9\u8868\uff0c\u4ed6\u5217\u51fa\u4e86\u7c21\u9ad4\u5b57\u8ddf\u7e41\u9ad4\u5b57\u7684\u5c0d\u61c9\u3002\u6240\u4ee5\u5982\u679c\u60f3\u81ea\u884c\u66f4\u6539\u8f49\u63db\u5b57\u7684\u8a71\uff0c\u53ef\u4ee5\u4fee\u6539\u9019\u500b\u6a94\u6848\uff08\u61c9\u8a72\u53ef\u4ee5\uff09\u3002\n\u8981\u4f7f\u7528\u53ea\u8981\u57f7\u884c Converter.bat \u5c31\u6703\u81ea\u52d5\u5c07 Source \u8cc7\u6599\u593e\u5e95\u4e0b \u6240\u6709 \u7684\u6a94\u6848\uff0c\u8f49\u63db\u5230 Result \u8cc7\u6599\u593e\u5e95\u4e0b\uff0c\u5c31\u9019\u6a23\u800c\u5df2\u4e86\u3002", 
      "tags": "Scala", 
      "loc": "/posts/epubconverter.html", 
      "title": "epub\u683c\u5f0f\u7c21\u8f49\u7e41\u5c0f\u5de5\u5177"
    }, 
    {
      "text": "Circumflex\n\nPrepare\nCircumflex \u6211\u662f\u4f7f\u7528SBT\u9023\u5230Maven repository\u53bb\u8f09\u5165\u4ed6\u6240\u6709\u7684Library\u3002\n\u8f09\u5165\u7684\u9805\u76ee\u6709\ncircumflex-orm-2.1.jar\ncircumflex-core-2.1.jar\ncommons-io-2.0.1\ncircumflex-cache-2.1.jar\nslf4j-api-1.6.1\nehcache-core-2.4.4\njta-1.1.jar\nc3p0-0.9.1.1.jar\n\nCircumflex\u5168\u90e8\u8f09\u5165\u7d042.3MB\u5de6\u53f3\uff0c\u6bd4\u5176\u4ed6LightWeight\u7684Library\u8981\u5927\u7684\u5f88\u591a\u3002\n\n\nCreate Table\nCircumflex\u7684\u8a2d\u8a08\uff0c\u4e3b\u8981\u662f\u5728\u662f\u7522\u751f\u4e00\u500b\u5c0d\u61c9\u7684\u8cc7\u6599\u7269\u4ef6\uff0c\u4f8b\u5982\n\nclass Country extends Record[String, Country] {\n  val code = \"code\".VARCHAR(2).NOT_NULL.DEFAULT(\"'ch'\")\n  val name = \"name\".TEXT.NOT_NULL\n\n  def cities = inverseMany(City.country)\n  def relation = Country\n  def PRIMARY_KEY = code\n}\n\nobject Country extends Country with Table[String, Country]\n\n\u5176\u4e2dclass\u8207object\u5169\u8005\u7686\u70ba\u5fc5\u8981\u7684\uff0c\u4f46\u662f\u5728object Country\u7684\u7e7c\u627f\u578b\u614b\u5ba3\u544a\uff0c\u9023\u7e8c\u7e7c\u627f\u4e86Country\u8207Table\u3002\n\u6211\u89ba\u5f97\u9019\u90e8\u5206\u6703\u8b93\u4eba\u6709\u9ede\u56f0\u60d1\u70ba\u4f55\u9700\u8981\u5982\u6b64\u8655\u7406\uff0c\u4f46\u662f\u9019\u9084\u662f\u5176\u6b21\u7684\u3002\n\u5728\u5efa\u7acb\u597d\u8cc7\u6599\u7269\u4ef6\u4e4b\u5f8c\uff0c\u5c31\u53ef\u4ee5\u5229\u7528\u6b64\u8cc7\u6599\u7269\u4ef6Create Table\u3002\n\nval ddl = new DDLUnit(Country)\nddl.CREATE\nddl.DROP\nddl.DROP_CREATE\n\n\u5efa\u7acbTable\u7684\u90e8\u5206\u975e\u5e38\u65b9\u4fbf\u3002\n\n\n\u8b93\u6211\u4e0d\u6703\u7528\u7684Association\n\u95dc\u806f\u5f0f\u8cc7\u6599\u5eab\u7684\u67b6\u69cb\u975e\u5e38\u5e38\u898b\uff0c\u4e0d\u7ba1\u662fOne-to-One\u3001One-to-Many\u7b49\u7d50\u69cb\uff0c\u6211\u7684\u5c0f\u7a0b\u5f0f\u4e5f\u5f88\u9700\u8981\u9019\u65b9\u9762\u529f\u80fd\u7684\u652f\u6301\u3002\nCircumflex\u7684\u8a2d\u5b9a\u65b9\u5f0f\u662f\u5c07\u8b8a\u6578\u5ba3\u544a\u6210inverseMany\u6216inverseOne\u7684\u578b\u614b\uff0c\u4ed6\u76ee\u524d\u6c92\u6709\u652f\u63f4Many-to-Many\u3002\n\nclass City extends Record[Long, City] {\n  val country = \"country_code\".TEXT.REFERENCES(Country).ON_DELETE(CASCADE).ON_UPDATE(NO_ACTION)\n}\n\nclass Country extends Record[String, Country] {\n  def cities = inverseMany(City.country)\n}\n\ninverseMany\u6703\u56de\u50b3\u4e00\u500binverseMany\u7684\u7269\u4ef6\uff0c\u547c\u53ebinverseMany.get\u4e4b\u5f8c\u53ef\u4ee5\u5f97\u5230\u4e00\u500bseq\u7684\u7269\u4ef6\u3002\u9019\u500b\u7269\u4ef6\u662fimmutable\u7684\n\uff0c\u56e0\u6b64\u4f60\u6c92\u6709\u8fa6\u6cd5\u63d2\u5165\u8cc7\u6599\u3002\u6240\u4ee5\u6211\u60f3\u50cf\u4e2d\u7684\u4f7f\u7528\u65b9\u5f0f\u662fCountry\u8207City\u5169\u500b\u90fd\u662f\u5404\u81ea\u53bb\u5132\u5b58\u7684\uff0c\n\u7136\u5f8c\u53ef\u4ee5\u900f\u904eCountry.cities()\u53d6\u5f97\u6240\u6709\u6709\u95dc\u7684City\uff0c\u76f8\u5c0d\u7684City.country()\u5247\u53ef\u4ee5\u67e5\u8a62\u53d6\u5f97\u5c0d\u61c9\u7684Country\u3002\n\u4f46\u662f\u9019\u6bd4\u8f03\u4e0d\u7b26\u5408\u6211\u60f3\u8981\u7684\u65b9\u5f0f\uff0c\u6211\u9084\u662f\u5e0c\u671b\u90a3\u500bCollection\u662f\u53ef\u4ee5\u8b93\u6211CRUD\u7684\uff0c\u4e26\u4e14\u5728\u5132\u5b58Country\u7684\u6642\u5019\u53ef\u4ee5\u4e00\u4f75\u66f4\u65b0City\u3002\n\n\n\nActiveJDBC\n\nPrepare\nactivejdbc \u6240\u9700\u8981\u7684Library\u6bd4\u8f03\u591a\u4e00\u9ede\uff0c\u56e0\u6b64\u5efa\u8b70\u4f7f\u7528Maven\u53bb\u532f\u5165\uff0c\u6216\u8005\u4f7f\u7528SBT\u5c07\u6703\u6e1b\u5c11\u5f88\u591a\u9ebb\u7169\u3002\n\u532f\u5165\u7684\u65b9\u5f0f\u53ef\u4ee5\u53c3\u8003 Getting Start \u3002\n\u6211\u5728\u9019\u908a\u4e5f\u7c21\u55ae\u5217\u51fa\u4e00\u4e0b\u4f7f\u7528activejdbc\u6709\u532f\u5165\u7684Library\nactivejdbc \u6240\u9700\u8981\u7684 Library\nactivejdbc-1.2-SNAPSHOT.jar\nslf4j-api-1.5.10\njavalite-common-1.2-SNAPSHOT.jar\nehcache-core-2.4.5\n\n\u4e0a\u9762\u9019\u5e7e\u500bLibrary\u4e2d\uff0c\u4ee5ehcache\u6700\u5927\u7d04 9xx KB\n\n\nCreate Table\nactivejdbc\u4e26\u6c92\u6709\u652f\u63f4Create Table\u7b49\u52d5\u4f5c\uff0c\u56e0\u6b64\u9019\u4e9b\u52d5\u4f5c\u9700\u8981\u81ea\u5df1\u64b0\u5bebSQL\u4f86\u8655\u7406\u3002\n\n\nWrite Model\n\u5bebModel\u7684\u6642\u5019\u6700\u4e3b\u8981\u8981\u6ce8\u610f\u7269\u4ef6\u7684\u540d\u7a31\uff0c\u5982\u679c\u4f60\u7684Table\u540d\u7a31\u662f\"employees\"\u9019\u7a2e\u8907\u6578\u540d\u8a5e\uff0c\u90a3\u9ebc\u4f60\u7684Model\u540d\u7a31\u5c31\u61c9\u8a72\u70ba\"employee\"\u3002\nactivejdbc\u6703\u81ea\u52d5\u5c0d\u61c9\u8907\u6578\u540d\u8a5e\u7684Table\u8207\u55ae\u6578\u540d\u8a5e\u7684Model\u3002(\u4e0d\u77e5\u9053\u5c0d\u65bces\u4e4b\u985e\u7684\u9019\u7a2e\u8b8a\u5316\u4ed6\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u8655\u7406)\u3002\n\u7576\u7136\u5982\u679c\u6709\u9700\u8981\u7684\u8a71\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528**@Table**\u4f86\u6307\u5b9aTable\u540d\u7a31\u3002\n\n@Table(\"TABLE_NAME\")\nclass employe extends Model{}\n\nP.S \u5e79\u60b2\u5287\u4e86\uff0c\u7531\u65bcactivejdbc\u88e1\u9762\u7684Model\u7684set\u6709\u4e09\u7a2e\u50b3\u503c\u65b9\u5f0f\u3002\n\nset(Object... namesAndValues)\nset(String[] attributeNames,Object[] values)\nset(String attribute,Object value)\n\n\u9019\u7a2e\u5beb\u6cd5Scala\u5728\u4f7f\u7528\u7684\u6642\u5019\u6703\u8a8d\u70ba\u662f**ambiguous reference to overloaded definition**\n\u56e0\u70ba\u7576\u6211\u5011\u4f7f\u7528\n\nemploye.set(\"name\",\"John\")\n\n\u7684\u6642\u5019\uff0cScala\u6703\u89ba\u5f97\u7b26\u5408set(Object... namesAndValues)\u8207set(String attribute,Object Value)\u3002\n\u4e0d\u904e\u6211\u89ba\u5f97\u9019\u65b9\u9762Scala\u883b\u5408\u7406\u7684\uff0c\u53bb\u67e5\u4e86\u4e00\u4e0b\u4f3c\u4e4e\u4e5f\u50be\u5411\u4e0d\u6703\u53bb\u4fee\u6539\u9019\u500b\u3002(\u62b1\u982d Orz)\n\u5982\u679c\u4fee\u6539\u6210\u4f7f\u7528\n\nset(String[] attributeNames,Object[] values)\n\n\u5c31\u4e0d\u6703\u6709\u554f\u984c\u4e86 WTF\n\u53e6\u5916\u4e00\u500b\u89e3\u6c7a\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528setString\u7b49\u6307\u5b9a\u578b\u614b\u7684\u8a2d\u5b9a\u65b9\u5f0f\uff0c\u6211\u60f3\u9019\u61c9\u8a72\u662f\u500b\u4e0d\u932f\u7684\u89e3\u6cd5\n\nemploye.setString(\"name\",\"John\")\n\n\n\n\u653e\u68c4activejdbc\n\u4ed6\u9084\u6709\u4e00\u500binstrumentation\u7684\u6b65\u9a5f\uff0c\u9019\u500b\u6b65\u9a5f\u6211\u89ba\u5f97\u5f71\u97ff\u592a\u591a\u4e86\uff0c\u4e0d\u9069\u5408\u62ff\u4f86\u8ddfScala\u4e00\u8d77\u5408\u7528\u3002", 
      "tags": "Scala", 
      "loc": "/posts/scala-orm-note.html", 
      "title": "Scala ORM \u5de5\u5177\u7b46\u8a18-Circumflex\u8207ActiveJDBC"
    }, 
    {
      "text": "\u4e4b\u524d\u5077\u61f6\u90fd\u76f4\u63a5\u4f7f\u7528 println \u4f86\u8f38\u51fa\u8a0a\u606f\uff0c\u4f46\u662f\u6700\u8fd1\u5728\u73a9 Akka \uff0c\u6211\u767c\u73fe\u5982\u679c\u6c92\u6709\u4f7f\u7528 log tool \u7684\u8a71\u6211\u6839\u672c\u4e0d\u77e5\u9053\u662f\u54ea\u500b Actor \u5370\u8a0a\u606f\u7684\u3002\n\u53ea\u597d\u641c\u5c0b\u4e00\u4e0b Scala \u4e0a\u9762\u6709\u6c92\u6709\u4ec0\u9ebc\u597d\u7528\u7684 Log \u5de5\u5177\u3002\n\nslf4s + slf4j + logback\n\u4e00\u822c\u4f9d\u7167\u4ee5\u5f80\u7684\u7fd2\u6163\u57fa\u672c\u5c31\u662f log4j + slf4j \uff0c\u9019\u7b97\u662f\u6700\u901a\u7528\u7684\u5de5\u5177\u7d44\u4e86\u3002\u4f46\u662f Scala \u6709\u9019\u9ebc\u591a\u7279\u7570\u529f\u80fd\uff0c\u8aaa\u4e0d\u5b9a\u6703\u6709\u66f4\u795e\u5947\u7684 Log \u5de5\u5177\uff0c\n\u65bc\u662f\u5c31\u62b1\u8457\u9019\u6a23\u7684\u5fc3\u614b\u8ddf Google \u5927\u795e\u8a62\u554f\u6c42\u7c64\u3002\u6700\u5f8c\u770b\u5230 logback \u9019\u500b\u5de5\u5177\uff08\u96d6\u7136\u8ddf Scala \u5b8c\u5168\u6c92\u6709\u95dc\u4fc2\uff09\u4f46\u662f\u4eba\u90fd\u662f\u559c\u65b0\u53ad\u820a XD\uff0c\u6240\u4ee5\n\u6211\u5c31\u5f9e slf4j + log4j \u8f49\u5230 slf4j + logback\uff0c\u9644\u5e36\u4e00\u63d0 logback \u662f slf4j \u9810\u8a2d\u7684 log \u5de5\u5177\uff0c\u56e0\u6b64\u4f7f\u7528\u9019\u5169\u500b\u7684\u7d44\u5408\u4e0d\u9700\u8981\u53e6\u5916\u6293 Adapter\u3002\uff08ex.slf4j-log4j12-1.6.4.jar\u4e4b\u985e\u7684\uff09\n\n\u8a2d\u5b9a\u6a94\u7684\u90e8\u5206\u76ee\u524d\u6211\u770b\u5230\u6700\u4e0d\u4e00\u6a23\u7684\u5c31\u662f\u683c\u5f0f\u4e86\uff0clog4j \u662f\u63a1\u7528 properities \u7684\u65b9\u5f0f\u8a18\u9304\uff0c\u4e5f\u5c31\u662f key=value \u7684\u683c\u5f0f\uff0c\u800c logback \u5247\u662f\u4f7f\u7528 xml\u3002\n\u8a2d\u5b9a\u6a94\u4e00\u76f4\u662f\u8b93\u6211\u61f6\u5f97\u4f7f\u7528 Log \u5de5\u5177\u7684\u5730\u65b9\uff0c\u597d\u5728\u7db2\u8def\u4e0a\u771f\u7684\u5f88\u591a\u597d\u5fc3\u4eba\uff0c\u5728 \u7b26\u865f\u8a18\u61b6-Logback,Log4j\u8a2d\u5b9a\u6a94\u81ea\u52d5\u7522\u751f\u5668 \u6709\u4ecb\u7d39\u4e86 \u5354\u52a9\u7522\u751f\u8a2d\u5b9a\u6a94\u7684\u7db2\u7ad9\n\u53ef\u4ee5\u8b93\u8a2d\u5b9a\u7684\u5de5\u4f5c\u6e1b\u5c11\u5f88\u591a\u3002\u4e0b\u9762\u662f\u6211\u96a8\u4fbf\u7522\u751f\u7684\u4e00\u500b\u7bc4\u4f8b\n\n\u4e4b\u5f8c\u6211\u9084\u6709\u591a\u4f7f\u7528 slf4s \u4f86\u8b93 slf4j \u7684\u4f7f\u7528\u66f4\u6709 Scala \u7684\u5473\u9053\uff0c\u4e0d\u904e\u5176\u5be6\u4e5f\u5c31\u53ea\u662f\u591a\u4e86\u4e00\u500b trait \u8b93\u4f60\u7684 scala class \u53ef\u4ee5\u76f4\u63a5\u7e7c\u627f\uff0c\u8b93\u4f60\u7701\u4e0b\u4e00\u4e9b\u9ebb\u7169\n\u4f8b\u5982\uff1a\n\nclass MyClazz with Logging\n{\n    logger.debug(\"Creator\")\n}\n\n\u6700\u5f8c\u662f\u984d\u5916\u627e\u5230\u7684 \u6253\u4e00\u53e5log\u6642\u9593\u4e0d\u5230\u4e00\u7d0d\u79d2\uff01\u5b8c\u7206log4j\u3001logback\u3001slf4j \uff0c\u4f46\u662f\u6211\u6c92\u6709\u7528\u56e0\u70ba\u9084\u6c92\u6709\u6548\u80fd\u4e0a\u7684\u9700\u6c42\uff0c\u4e0d\u904e\u6211\u6709\u7a0d\u5fae\u770b\u4e00\u4e0b\u7a0b\u5f0f\u78bc\uff0c\u52a0\u4e0a\u4e0b\u9762\u7559\u8a00\u8005\u7d66\u7684\u63d0\u793a\u3002\n\u5728\u4f7f\u7528logger\u5370\u51fa\u8a0a\u606f\u4e4b\u524d\uff0c\u5148\u9032\u884c logger.isTraceEnabled\u3001logger.isDebugEnable \u7b49\u7684\u5224\u65b7\uff0c\u5c31\u53ef\u4ee5\u5728\u7de8\u8b6f\u7684\u6642\u5019\u9032\u884c\u6700\u4f73\u5316\u3002\n\u76ee\u524d\u4f7f\u7528\u7684 Log \u5de5\u5177\u5927\u6982\u5c31\u9019\u6a23\u4e86\uff0clogback \u5982\u679c\u6709\u73a9\u5230\u4ec0\u9ebc\u597d\u73a9\u7684\u6703\u5728\u4e0a\u4f86\u5831\u544a\u3002", 
      "tags": "Scala", 
      "loc": "/posts/scala-log-tool.html", 
      "title": "Scala log \u5de5\u5177 - slf4j + logback"
    }, 
    {
      "text": "HTML Parser\u51fa\u9580\u5728\u5916,\u5c45\u5bb6\u65c5\u904a\u5fc5\u5099\u826f\u54c1\u3002\u7121\u8ad6\u662f\u8981\u81ea\u52d5\u4e0b\u8f09\u6f2b\u756b\u3001\u7a2e\u5b50\u6216\u8005\u662f\u505a\u500b\u81ea\u52d5\u5929\u6c23\u5657\u6d6a\u6a5f\u5168\u90fd\u9700\u8981\u4ed6\u3002\n\u70ba\u4e86\u8981\u5f9e\u7db2\u9801\u4e2d\u53ef\u4ee5\u53d6\u51fa\u5167\u5bb9,\u6211\u66fe\u7d93\u7528\u904e\u4e0d\u5c11\u65b9\u5f0f,\u5305\u62ec\u76f4\u63a5\u786c\u5e79\u7528\u5b57\u4e32\u641c\u5c0b\u3001\u4fee\u6539Scala\u672c\u8eab\u5167\u90e8\u7684XML Parser\u7b49\u3002\n\u4f46\u662f\u4e00\u76f4\u90fd\u627e\u4e0d\u5230\u4e00\u500b\u6eff\u610f\u53c8\u9806\u624b\u7684\u89e3\u6c7a\u65b9\u5f0f,\u4e00\u76f4\u5230\u5f8c\u4f86\u5728 CSDN \u6c92\u932f\u5c31\u662f\u90a3\u500b\u5927\u9678\u7db2\u7ad9 CSDN\n(\u96d6\u7136\u8aaaCSDN\u8a0a\u606f\u592a\u591a\u592a\u96dc\u4e82,\u4f46\u662f\u5076\u723e\u9084\u662f\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u4e0d\u932f\u7684\u6771\u897f),\u624d\u627e\u5230jsoup\u9019\u500blibrary\u3002\njsoup\u7684\u5b98\u65b9\u7db2\u7ad9\njsoup\u7684\u6559\u5b78\u6587\u4ef6\n\n\u4f46\u662f\u5176\u5be6\u6700\u91cd\u8981\u7684\u662f\u9019\u4e00 \u6559\u5b78\u6587\u4ef6 ,\u4ecb\u7d39\u4e86\u4ed6\u8207\u5225\u4eba\u6700\u4e0d\u4e00\u6a23\u7684\u7684\u5730\u65b9\u3002\n\u4e00\u822c\u7684html parser\u9084\u662f\u6bd4\u8f03\u50be\u5411\u65bc\u8ddfxml parser\u7684\u4f5c\u6cd5\u4e00\u6a23,\u628ahtml\u5206\u6790\u5b8c\u4e4b\u5f8c\u5efa\u6210\u6a39\n\u7136\u5f8c\u64cd\u4f5cnode\u5c07\u8cc7\u6599\u53d6\u51fa,\u4f46\u662f\u9664\u4e86\u9019\u7a2e\u64cd\u4f5c\u65b9\u5f0f\u4e4b\u5916josue\u9084\u6709\u4e00\u7a2e\u662f\u985e\u4f3cjquery\u7684selector\u7684\u64cd\u4f5c\u65b9\u5f0f\u3002\n\nfile input = new file(\"/tmp/input.html\");\ndocument doc = jsoup.parse(input, \"utf-8\", \"http://example.com/\");\n\n//document doc = jsoup.connect(\"http://example.com/\");\n\n//\u53d6\u51fa\u64c1\u6709herf\u5c6c\u6027\u7684<a>\nelements links = doc.select(\"a[href]\");\n//\u53d6\u51fa\u64c1\u6709src\u5c6c\u6027\u4e14\u503c\u662f\u4ee5png\u7d50\u5c3e\u7684<img>\nelements pngs = doc.select(\"img[src$=.png]\");\n\n\u4e0a\u9762\u662f\u5b98\u7db2\u7684\u7bc4\u4f8b,\u5f9e\u9019\u908a\u5c31\u53ef\u4ee5\u770b\u5230 jsoup \u4e0d\u540c\u65bc\u4e00\u822chtml parser\u7684\u5730\u65b9\u3002\njsoup\u9664\u4e86\u6709\u652f\u63f4\u8b80\u53d6\u6a94\u6848\u4e4b\u5916,\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8f38\u5165\u7db2\u5740\u8b93\u4ed6\u81ea\u5df1\u53bb\u9023\u7dda\u8207parser,\n\u6700\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u900f\u904eselector-syntax\u4f86\u53d6\u51fa\u60f3\u8981\u7684\u5167\u5bb9\u3002\u63a5\u4e0b\u4f86\u6211\u6703\u6574\u7406\u4e00\u4e9b\u6211\u5e38\u7528\u7684\u7528\u6cd5\u3002\np.s\u6211\u6240\u4f7f\u7528\u7684\u8a9e\u8a00\u662fscala\uff0c\u4f46\u662f\u6211\u6703\u76e1\u91cf\u4e0d\u8981\u7528scala\u7684<del>\u5947\u6deb\u6280\u5de7</del>\u7279\u6b8a\u8a9e\u6cd5\u8b93\u4ed6\u770b\u8d77\u4f86\u8ddfjava\u5dee\u4e0d\u591a\u3002\n\u51fa\u767c\u7e3d\u8981\u6709\u500b\u65b9\u5411,\u9019\u908a\u5c31\u4ee5\u4e00\u500b\u6211\u60f3\u5e79\u7684\u58de\u4e8b\u60c5\u4f86\u7576\u4f5c\u4f8b\u5b50\u597d\u4e86\uff0c\u9806\u4fbf\u5f37\u8feb\u6211\u81ea\u5df1\u628a\u6771\u897f\u5beb\u5b8c\u3002\n\n\u8aaa\u51fa\u4f60\u7684\u9858\u671b\uff0c\u5426\u5247\u4e0d\u6703\u8b93\u4f60\u5982\u9858\n\u6211\u60f3\u8981\u4e00\u500b\u53ef\u4ee5\u81ea\u52d5\u6aa2\u67e5 \u67d0\u5927\u8ad6\u58c7 \u7684\u52d5\u756b\u8a0e\u8ad6\u5340\u65b0\u756a\u662f\u5426\u6709\u66f4\u65b0\u7684\u6a5f\u5668\u4eba\u3002\n\uff08\u56e0\u70ba\u5b83\u65b0\u756a\u66f4\u65b0\u5728\u540c\u4e00\u500b\u6587\u7ae0\u88e1\u9762\uff0c\u6bcf\u5468\u627e\u65b0\u756a\u771f\u7684\u597d\u9ebb\u7169\uff09\n\u54c8\u5229\u8def\u4e9e ! chance !\n\nPrepare\n\u9996\u5148\u5462\uff0c\u6211\u7fd2\u6163\u5148\u5c07\u7db2\u9801\u5167\u5bb9\u5132\u5b58\u6210html\u6a94\u6848,\u653e\u5230\u6e2c\u8a66\u8cc7\u6599\u593e\u4e2d\u3002\n\u7136\u5f8c\uff0c\u5beb\u500b\u6e2c\u8a66\u5148\u6c7a\u5b9a\u6574\u500b\u7a0b\u5f0f\u7684\u4e3b\u8981\u4ecb\u9762\u3002\n\u56e0\u70ba\u6211\u4e0d\u559c\u6b61\u4e00\u76f4\u9023\u7dda\u5230\u7db2\u7ad9\u505a\u6e2c\u8a66\u3002\n\u56e0\u70ba:\n\u6d6a\u8cbb\u6d41\u91cf\n\n\u6211\u8981\u9a57\u8b49\u7a0b\u5f0f\u57f7\u884c\u7d50\u679c\u7684\u6642\u5019\u5fc5\u9808\u8981\u958b\u7db2\u9801\u624d\u80fd\u9a57\u8b49\u3002\n(\u56e0\u70ba\u6587\u7ae0\u6703\u4e00\u76f4\u65b0\u589e\u7b2c\u4e00\u9801\u7684\u5167\u5bb9\u6703\u88ab\u64e0\u5230\u5f8c\u9762\u53bb)\n\n\n\u4f60\u4e0d\u4e00\u5b9a\u96a8\u6642\u90fd\u6709\u7db2\u8def\u53ef\u4ee5\u7528\n\n\u56e0\u6b64\u5148\u5c07\u4eca\u5929\u7684\u6587\u7ae0\u5217\u8868\u5132\u5b58\u8d77\u4f86\uff0c\u7136\u5f8c\u5beb\u500b\u6e2c\u8a66\u4f86\u9a57\u8b49\u6211\u6700\u5f8c\u7684\u8f38\u51fa\u7d50\u679c\u662f\u5426\u5982\u6211\u6240\u9810\u671f\u3002\n\u6709\u4eba\u6703\u60f3\u8aaa\u9019\u662f\u4e0d\u662f\u4ec0\u9ebc\u8edf\u9ad4\u5de5\u7a0b\u6280\u5de7\u963f\uff0c\u662f\u4e0d\u662f\u4ec0\u9ebc\u6e2c\u8a66\u5148\u884c\uff08tdd\uff09\u7684\u958b\u767c\u65b9\u5f0f\u4e4b\u985e\u7684\uff1f\n\u5176\u5be6\u4e5f\u6c92\u6709\u7279\u5225\u60f3\u8aaa\u8981\u4f7f\u7528\u4ec0\u9ebc\u6a23\u7684\u958b\u767c\u65b9\u5f0f\u6216\u958b\u767c\u6280\u5de7\uff0c\u55ae\u7d14\u5c31\u53ea\u662f\u56e0\u70ba\u6211\u89ba\u5f97\u9019\u6a23\u6bd4\u8f03\u65b9\u4fbf\u800c\u5df2\u3002\n\u6211\u89ba\u5f97\u6c92\u6709\u5fc5\u8981\u88ab\u5049\u5927\u6216\u8005\u662f\u53ea\u8981\u9019\u6a23\u505a\u5c31\u5c0d\u4e86\u7b49\u53e3\u865f\u7d66\u8ff7\u60d1\uff0c\u9078\u64c7\u81ea\u5df1\u9700\u8981\u4e14\u8db3\u5920\u7684\u65b9\u5f0f\u5c31\u597d\u4e86\u3002\n\n\n\n\u8981\u5206\u6790\u64f7\u53d6\u7684\u7db2\u9801\u5167\u5bb9\n\u9019\u908a\u662f\u7db2\u9801\u7684\u90e8\u4efd\u5167\u5bb9\uff0c\u6211\u5728\u505a\u6e2c\u8a66\u8cc7\u6599\u7684\u6642\u5019\u662f\u5c07\u6574\u4efd\u7684\u7db2\u9801\u539f\u59cb\u78bc\u90fd\u5132\u5b58\u8d77\u4f86\uff0c\u4e0b\u9762\u7684\u5167\u5bb9\u662f\u70ba\u4e86\u5f8c\u9762\u7684\u8aaa\u660e\u9700\u8981\u3002\n\n<tbody id=\"normalthread_6961970\">\n <tr onmouseover=\"l_pic_6961970.style.display='block'\" onmouseout=\"l_pic_6961970.style.display='none'\">\n  <td class=\"folder\">\n    <a href=\"viewthread.php?tid=6961970&amp;extra=page%3d1%26amp%3borderby%3ddateline\" title=\"\u65b0\u7a97\u53e3\u6253\u958b\" target=\"_blank\">\n        <img src=\"images/default/folder_new.gif\" />\n    </a>\n </td>\n  <td class=\"icon\"><img src=\"http://a18.file-static.com/attachments/lib_picture/19/70/6961970.jpg\" width=\"50\" height=\"40\" class=\"l_bpic\" />\n   <div class=\"l_spic\" id=\"l_pic_6961970\">\n    <img src=\"http://a18.file-static.com/attachments/lib_picture/19/70/6961970.jpg\" width=\"100\" height=\"80\" class=\"l_bpic\" />\n   </div></td>\n  <th class=\"subject new\">\n    <label>&nbsp;</label>\n    <em>[<a href=\"forumdisplay.php?fid=22&amp;filter=type&amp;typeid=2\">\u5206\u4eab</a>]</em>\n    <span id=\"thread_6961970\">\n        <a href=\"viewthread.php?tid=6961970&amp;extra=page%3d1%26amp%3borderby%3ddateline\">\n        (mu@\u7e41\u9ad4@rmvb)onepiece\u6d77\u8cca\u738b \u7b2c521\u8a71 (1p)</a>\n    </span>\n  </th>\n  <td class=\"author\"><cite><a href=\"space.php?uid=933315\">likesea</a></cite><em>2011-10-30</em></td>\n  <td class=\"nums\"><strong>0</strong>/<em>2</em></td>\n  <td class=\"lastpost\">\n  <cite>\n    <a href=\"space.php?username=likesea\">likesea</a>\n  </cite>\n  <em><a href=\"redirect.php?tid=6961970&amp;goto=lastpost#lastpost\"><span title=\"2011-10-30 03:13 pm\">1&nbsp;\u5206\u9418\u524d</span></a></em></td>\n </tr>\n</tbody>\n\n\u60f3\u8981\u7684\u8f38\u51fa\u7d50\u679c\n\nuid       : 933315\ntitle     : onepiece\u6d77\u8cca\u738b \u7b2c521\u8a71\nauthor    : likesea\nlink      : http://.............\n\n\n\u7a0b\u5f0f\u7684\u4ecb\u9762\n\u96d6\u7136jsoup\u53ef\u4ee5\u76f4\u63a5\u63a5\u6536\u7db2\u5740\u53bb\u53d6\u5f97\u7db2\u9801\u5167\u5bb9\uff0c\u4f46\u6e2c\u8a66\u7a0b\u5f0f\u6709\u8b80\u53d6\u6a94\u6848\u7684\u9700\u6c42\u6240\u4ee5\u9019\u908a\u6703\u63d0\u4f9b\u5169\u7a2e\u4ecb\u9762\u3002\n\u4e00\u7a2e\u5141\u8a31\u4f7f\u7528\u8005\u76f4\u63a5\u50b3\u5165string\u578b\u614b\u7684\u53c3\u6578\uff0c\u4e5f\u5c31\u662f\u7db2\u5740\u3002\u53e6\u5916\u4e00\u7a2e\u5247\u662f\u8b93\u4f7f\u7528\u8005\u50b3\u5165file\u578b\u614b\u7684\u53c3\u6578\u3002\n\u800c\u56de\u50b3\u503c\u7684\u5f62\u614b\u5247\u662f\u5b58\u653edata object\u7684list\uff0c\u9019\u908adata object\u7684\u540d\u7a31\u5c31\u5148\u5b9a\u7fa9\u70baenvypost\u597d\u4e86\u3002\n\nclass envypost{\n    val uid:integer\n    val title:string\n    val lastposttime:date\n}\n\ndef parse(url:string):list[envypost]={}\ndef parse(file:file):list[envypost]={}\n\n\n\n\u958b\u59cb\u7528jsoup\u5206\u6790\u7db2\u9801\u8cc7\u8a0a\u5427\n\n\n\n\u627e\u51fa\u6240\u6709\u6587\u7ae0\n\u96d6\u7136jsoup\u6709\u63d0\u4f9b\u5f88\u591a\u7a2e\u5206\u6790\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u6211\u6700\u559c\u6b61\u7528\u7684\u9084\u662f selector \u7684\u8a9e\u6cd5\u3002\u56e0\u70ba\u7c21\u55ae\u660e\u77ad\u53c8\u597d\u95b1\u8b80\uff01\uff01\n\u57f7\u884c\u6548\u7387\u6211\u5247\u5b8c\u5168\u4e0d\u5728\u610f\uff0c\u53cd\u6b63\u6211\u7684\u9700\u6c42\u4e5f\u4e0d\u662f\u4e00\u79d2\u5e7e\u5341\u842c\u4e0a\u4e0b\u7684\u6771\u897f\u3002\u80fd\u5920\u8b93\u6211\u6109\u5feb\u53c8\u5feb\u901f\u7684\u5beb\u597d\u624d\u662f\u91cd\u8981\u7684\u3002\n\nobject envyexample {\n  def parse(file:file,encode:string=\"big5\"):list[envypost]={\n    val doc = jsoup.parse(file,encode,envyurl)\n    val posts = parsepage(doc)\n  }\n  def parsepage(page:document)={\n    doc.select(\"tbody[id=normalthread]\")\n  }\n}\n\n\u7531\u65bc\u8a72\u8ad6\u58c7\u7684\u6bcf\u4e00\u7bc7\u6587\u7ae0\u90fd\u88ab\u4e00\u500btbody\u7684tag\u5305\u570d\uff0c\u4e14\u6b64tbody\u7684id\u958b\u982d\u70banormalthread\u3002\u56e0\u6b64\u6211\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u5148\u627e\u51fa\u6b64\u9801\u4e2d\u6bcf\u4e00\u7bc7\u6587\u7ae0\u7684element\u3002\n\u96d6\u7136\u8aaajsoup\u8ddfjquery\u4e00\u6a23\u5c0d\u65bctag\u7684id\u8207class\u5c6c\u6027\u90fd\u6709\u7279\u6b8a\u7684\u8a9e\u6cd5\u4f8b\u5982 tag#id \u6216 tag.class \u4f46\u662f\u7531\u65bc\u6211\u9700\u8981\u4f7f\u7528\u6b63\u898f\u8868\u793a\u662f\u4f86\u627e\u51faid\u70banormalthread\u958b\u982d\u7684tbody\u3002\n\u6240\u4ee5\u9019\u908a\u4f7f\u7528\n\ntbody[id=normalthread]\n\u56e0\u70ba\u82e5\u4f7f\u7528 # \u7684\u8a9e\u6cd5\u5c31\u6c92\u6709\u8fa6\u6cd5\u4f7f\u7528\u6b63\u898f\u8868\u793a\u5f0f\uff08\u81f3\u5c11\u6211\u76ee\u524d\u5728\u5b98\u7db2\u7684\u8aaa\u660e\u6587\u4ef6\u9084\u6c92\u6709\u627e\u5230 orz\uff09\n\u6709\u6c92\u6709\u89ba\u5f97\u9019\u500b\u8a9e\u6cd5\u771f\u7684\u8d85\u7d1a\u65b9\u4fbf\u7684\uff0c\u5982\u679c\u662f\u7528\u5176\u4ed6\u5de5\u5177\u7684\u8a71\uff0c\u6211\u73fe\u5728\u61c9\u8a72\u9084\u5728\u8655\u7406\u628aid\u5c6c\u6027\u53d6\u51fa\u4f86\uff0c\u7136\u5f8c\u7528string\u7684startwith\u4f86\u5224\u65b7\u662f\u4e0d\u662fnormalthread\u958b\u982d\u3002\n\u53e6\u5916\uff0c\u6211\u559c\u6b61\u628a\u6bcf\u4e00\u500b\u6b65\u9a5f\u5206\u89e3\u6210\u5f88\u591a\u5c0f\u51fd\u5f0f\uff0c\u56e0\u70ba\u9019\u6a23\u65b9\u4fbf\u6211\u9032\u884c\u6e2c\u8a66\u3002\u4f8b\u5982\u4e0a\u9762\u9019\u4e00\u6bb5\u7a0b\u5f0f\u78bc\uff0c\u6211\u76f8\u5c0d\u61c9\u7684\u6e2c\u8a66\u7a0b\u5f0f\u78bc\u6703\u9577\u9019\u6a23\u3002\n\nclass testenvyexample extends funsuite with shouldmatchers{\n  test(\"there should be 10 post in the test file\"){\n    val doc = jsoup.parse(new file(\"./testdata/envy.html\"),\"big5\",envyexample.envyurl)\n    val posts = envyexample.parsepage(doc)\n    posts.size should be (18)\n  }\n}\n\n\u9806\u4fbf\u8aaa\u660e\u4e00\u4e0b\u8a9e\u6cd5\uff0c\u6211\u6240\u4f7f\u7528\u7684\u6e2c\u8a66framework\u662f scalatest \uff0c\u9019\u908a\u4f7f\u7528java\u7684junit\u4e5f\u662f\u53ef\u4ee5\u3002\ntestenvyexample\u7e7c\u627ffunsuite\u8ddfshouldmatchers\u5169\u500bclass\uff0c\u9019\u5169\u500bclass\u4e3b\u8981\u8b93\u6e2c\u8a66\u7a0b\u5f0f\u53ef\u4ee5\u4f7f\u7528**test**\u8ddf**should be**\u5169\u7a2e\u8a9e\u6cd5\u3002\n\u5230\u9019\u908a\u7a0b\u5f0f\u57f7\u884c\u5b8c\u7562\u4e4b\u5f8c\u6211\u5c31\u6709\u76ee\u524d\u6b64\u9801\u9762\u6bcf\u4e00\u7bc7\u6587\u7ae0\u7684\u6240\u6709\u5167\u5bb9\u4e86\u3002\u4e0b\u4e00\u6b65\u5c31\u662f\u8981\u5206\u6790\u9019\u4e9b\u6587\u7ae0\u5167\u5bb9\u4e86\u3002\n\n\n\u5206\u6790\u6587\u7ae0\u7684\u5167\u5bb9-\u53d6\u5f97id\u3001title\u3001author\u8207link\n\u53d6\u5f97post\u7684\u529f\u80fd\u518d\u53e6\u5916\u7368\u7acb\u4e00\u500bparsepost\u7684function\uff0c\u50b3\u5165\u7684\u53c3\u6578\u5247\u70ba\u5305\u542b\u6240\u6709\u6587\u7ae0\u5167\u5bb9\u7684element\uff0c\u4e26\u4e14\u5e0c\u671b\u9019\u500bfunction\u53ef\u4ee5\u56de\u50b3\u4e00\u500benvypost\u7269\u4ef6\u3002\n\ndef parsepost(post:element):envypost={\n}\n\n\u6587\u7ae0id\u7684\u53d6\u5f97\u662f\u900f\u904etbody\u672c\u8eab\u7684id\u5c6c\u6027\uff0c\u4ed6\u7684\u683c\u5f0f\u662fnormalthread_xxxxxx\uff0c\u5f8c\u9762\u7684xxxxxx\u5c31\u662f\u6b64\u7bc7\u6587\u7ae0\u7684id\uff0c\n\ndef parsepost(post:element)={\n    val id = post.attr(\"id\").replace(\"normalthread_\",\"\")\n    val (title,link) = parserpost_titleandlink(id,post)\n    val author = parserpost_author(post)\n\n    new envypost(id,title,author,link)\n}\n\nlink\u8ddftitle\u5176\u5be6\u662f\u4e00\u8d77\u53d6\u5f97\u7684\uff0c\u5b83\u5011\u53ef\u4ee5\u5f9eid\u70bathread_xxxxxx\u7684span tag\u4e2d\u53d6\u5f97\u3002\n\ndef parserpost_titleandlink(id:string,post:element)={\n    val element = post.select(\"span#thread_\"+id).first\n    (element.text,element.select(\"a\").first.attr(\"href\"))\n}\n\nauthor\u7684\u540d\u5b57\u5247\u5728class\u70baauthor\u7684td tag\u5167cite\u4e2d\u56e0\u6b64\u53d6\u7684\u6642\u5019\u4f7f\u7528\n\ntag1 tag2\n\u7684\u8a9e\u6cd5\uff0c\u9019\u4ee3\u8868\u641c\u5c0btag1\u5e95\u4e0b\u6240\u6709\u7684tag2\n\ndef parserpost_author(post:element)={\n    post.select(\"td.author cite\").first.text\n}\n\n\u6253\u5b8c\u6536\u5de5\uff0c\u9019\u6a23\u7684\u77ed\u77ed\u7684\u7a0b\u5f0f\u78bc\u5c31\u628a\u4e00\u500b\u7db2\u7ad9\u90fd\u5206\u6790\u5b8c\u4e86\uff0c\u771f\u7684\u592a\u68d2\u4e86 qq\n\u4ee5\u524d\u8981\u5206\u6790\u4e00\u500b\u7db2\u7ad9\u8d85\u8840\u6dda\u7684\uff0c\u771f\u7684\u611f\u8b1dopen source\u7684\u773e\u591a\u597d\u5fc3\u4eba\uff0c\u9858\u610f\u5206\u4eab\u4ed6\u5011\u7684\u6210\u679c\u8207\u7a0b\u5f0f\u78bc\u3002\n\u7576\u7136\u5f8c\u7e8c\u9084\u6709\u63db\u9801\u8b80\u53d6\u6216\u8005\u662f\u6bd4\u5c0d\u4e4b\u524d\u7684\u5167\u5bb9\u770b\u662f\u5426\u6709\u66f4\u65b0\u4e4b\u985e\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u9019\u90fd\u662f\u5f8c\u8a71\u4e86\u3002\np.s\u4e00\u7bc7\u6587\u7ae0\u6211\u7adf\u7136\u8981\u6253\u5feb\u5169\u500b\u6708\uff0c\u771f\u4f69\u670d\u90a3\u4e9b\u6709\u8fa6\u6cd5\u6bcf\u5929\u90fd\u6709\u7522\u51fa\u7684\u4eba", 
      "tags": "Scala", 
      "loc": "/posts/jsoup.html", 
      "title": "\u597d\u7528\u7684 HTML Parser - jsoup"
    }, 
    {
      "text": "2013.01.20 \u6211\u53c8\u8df3\u69fd\u5230 Nikola \u4e86\n\n\n2012.11.28 \u6211\u5df2\u7d93\u8df3\u69fd\u5230 Pelican \u4e86\uff0c\u4e0d\u904e\u9084\u662f\u628a\u9019\u7bc7\u7559\u8457\u7576\u7d00\u5ff5\u597d\u4e86\u3002\n\n\n2012.05.21 \u66f4\u65b0\u9019\u6b21\u597d\u50cf\u771f\u7684\u89e3\u6c7a\u5728 Win7 \u4e0a\u9762\u7684\u554f\u984c\u4e86\n\u5176\u5be6\u5728 Windows \u4e0a\u9762\u4f7f\u7528 Octopress \u6c92\u6709\u4ec0\u9ebc\u7279\u5225\u5927\u7684\u554f\u984c\uff0c\u6ce8\u610f\u6587\u7ae0\u7684\u7de8\u78bc\u5c31\u597d\u3002\n\u4f46\u662f\u6709\u4e00\u9ede\u4e00\u76f4\u975e\u5e38\u56f0\u64fe\u8457\u6211\u7684\u5c31\u662f\uff0c Codeblock \u7684\u554f\u984c\u3002\u7531\u65bc rake generator \u6240\u63d0\u4f9b\u7684\u932f\u8aa4\u8a0a\u606f\u975e\u5e38\u7684\u5c11\uff0c\u6240\u4ee5\u5f88\u96e3\u627e\u51fa\u932f\u8aa4\u3002\n\u6700\u5e38\u5728\u7db2\u9801\u4e0a\u9762\u770b\u5230\u7684\u5c31\u662f\u9019\u500b\n\nLiquid error: undefined method `Py_IsInitialized\u2019 for RubyPython::Python:Module\n\n\u4e00\u76f4\u5230\u6211\u4eca\u5929\u7121\u610f\u9593\u641c\u5c0b\u5230\u9019\u7bc7\u6587\u7ae0 (\u8a71\u8aaa Octopress \u7684\u5b89\u88dd\u6559\u5b78\u6587\u771f\u7684\u8d8a\u4f86\u8d8a\u591a\u4e86)\nWindows 8 \u5b89\u88dd Octopress \u7d00\u9304 \u4ed6\u771f\u7684\u627e\u51fa\u554f\u984c\u4e86\uff0c\u91cd\u9ede\u5c31\u5728\u65bc\uff01 Python \u8acb\u5b89\u88dd 32-bit \u7684\u7248\u672c\u3002\n\u771f\u7684\u9019\u6a23\u5c31\u8b93 Codeblock \u53ef\u4ee5\u6b63\u5e38\u904b\u4f5c\u4e86 T_T\n\u771f\u7684\u662f\u592a\u8b93\u4eba\u5fc3\u9178\u4e86\u3002\n\n\n\n\u5728Ubuntu\u4e0a\u9762\u5be6\u5728\u662f\u6709\u5920\u96e3\u5b89\u88dd\u7684\n\u76ee\u524d\u4f7f\u7528\u7684\u74b0\u5883\u662f\u5728Ubuntu\u4e0a\u9762\uff0c\u4e26\u4e14\u4f7f\u7528rvm\u5b89\u88ddRuby 1.9.2\u8207Gem\u3002\u4f46\u662f\u5c31\u662f\u90a3\u500b\u4f46\u662f\u9019\u6a23\u5b89\u88dd\u7684Ruby\u5176\u5be6\u662f\u4e0d\u80fd\u7528\u7684\uff0c\u9084\u9700\u8981\u7528rvm\u5b89\u88ddzlib\u8207openssl\u624d\u80fd\u4f7f\u7528\u3002\n\u5b89\u88dd\u65b9\u6cd5\u53ef\u4ee5\u53c3\u8003 How to Install Octopress on Ubuntu 11.04 and Deploy on GitHub \uff08\u672c\u9023\u7d50\u5df2\u7d93\u5931\u6548\u4e86\uff0c\u6240\u4ee5\u8acb\u53e6\u5916 Google \u5b89\u88dd\u65b9\u5f0f\u5427\uff01\uff09\uff0c\u82e5\u524d\u9762\u9019\u500b\u7db2\u7ad9\u6709\u4e0d\u6e05\u695a\u7684\u90e8\u5206\u6216\u8005\u60f3\u8981\u627e\u6307\u4ee4\u4f86\u6e90\u7684\u53ef\u4ee5\u5230 RVM \u7684\u7db2\u7ad9\u67e5\u8a62\u3002\n\n\n\u5728Windows\u4e0a\u9762\u4e5f\u6c92\u6709\u597d\u88dd\u591a\u5c11\uff0c\u4f46\u662f\u6211\u597d\u50cf\u6210\u529f\u4e86\nWindows\u4e0a\u9762\u6c92\u6709\u597d\u7528\u7684RVM\u53ef\u4ee5\u7528\uff0c\u800c\u4e14Ruby\u5b89\u88dd\u5305\u6bd4\u8f03\u4e0d\u4e00\u6a23\uff0c\u53eb\u505a RubyInstaller \u3002RubyInstaller \u7684\u5b89\u88dd\u65b9\u5f0f\u883b\u7c21\u55ae\u7684\uff0c\u5c31\u4e00\u76f4\u4e0b\u4e00\u6b65\u5c31\u53ef\u4ee5\u4e86\u3002\n\u5b89\u88dd\u5b8c\u7562\u4e4b\u5f8c\u4f60\u6703\u767c\u73fe RubyInstaller \u9023 gem \u90fd\u5e6b\u4f60\u5b89\u88dd\u597d\u4e86( Linux \u6211\u90fd\u7528 RVM \u88dd\uff0c\u6240\u4ee5\u6211\u4e0d\u77e5\u9053 gem \u662f\u4e0d\u662f\u5b89\u88dd Ruby \u4e00\u5b9a\u6703\u6709\u7684)\uff0c\u4f46\u662f\u9019\u500b\u7248\u672c\u7684 gem \u6709\u9ede\u820a\uff0c\u6240\u4ee5\u9700\u8981\u4e0b\u6307\u4ee4\u5347\u7d1a\u4e00\u4e0b\u3002\n\ngem update --system\n\u518d\u4f86\u5c31\u662f\u9700\u8981\u53e6\u5916\u5b89\u88dd\u4e00\u500b DevKit \uff0c\u9019\u662fWindows\u7279\u6709\u7684\u8001\u5be6\u8aaa\u6211\u4e5f\u4e0d\u77e5\u9053\u9019\u500b\u8981\u505a\u5565\u3002\u4f46\u662f\u5982\u679c\u6c92\u88dd\u7684\u8a71\uff0c\u4f60\u5728\u4f7f\u7528gem\u5b89\u88dd\u67d0\u4e9b\u6771\u897f\u7684\u6642\u5019\u4ed6\u6703\u8df3\u51fa\u8a0a\u606f\u8981\u4f60\u5b89\u88dd\u3002\nP.S \u9644\u5e36\u4e00\u63d0\uff0c\u9019\u662f\u672a\u78ba\u8a8d\u4e8b\u9805\u4e0d\u904e\u5728Windows\u4e0a\u9762\u5b89\u88ddGit\u7684\u6642\u5019\uff0c\u8acb\u9078\u64c7\u8b93\u4ed6\u5c07Git\u7684\u57f7\u884c\u6a94\u8def\u5f91\u52a0\u5165Path\u88e1\u9762\u7684\u9078\u9805\uff0c\u4e5f\u5c31\u662f\u8aaa\u8b93\u4f60\u53ef\u4ee5\u5728\u547d\u4ee4\u63d0\u793a\u5b57\u5143\u4e0a\u4f7f\u7528Git\u6307\u4ee4\u3002\n\u56e0\u70ba\u6211\u60f3Octopress\u61c9\u8a72\u6c92\u6709\u8070\u660e\u5230\u6703\u81ea\u5df1\u53bb\u6293Git\u7684\u5b89\u88dd\u8def\u5f91\u3002\n\n\n\u5b89\u88dd\u8207\u8a2d\u5b9aoctopress\n\u7d42\u65bc\u53ef\u4ee5\u9032\u5165octopress\u7684\u5b89\u88dd\u4e86\uff0c\u5728\u9019\u88e1\u5b89\u88dd\u7684\u9806\u66a2\u8207\u5426\u5c31\u53d6\u6c7a\u65bc\u4f60\u7684\u5e73\u53f0\u4e86(\u8aa4)\u3002\u8a73\u7d30\u5b89\u88dd\u65b9\u5f0f\u53ef\u4ee5\u53c3\u8003Octopress\u5b98\u7db2\u7684 Octopress Setup \u3002\n\u9996\u5148\u5148\u4f7f\u7528git\u5c07octopress cloe\u4e0b\u4f86\n\ngit clone git://github.com/imathis/octopress.git octopress\n\u9032\u5165octopress\u8cc7\u6599\u593e\uff0c\u4f7f\u7528gem\u5b89\u88dd\u6240\u9700\u8981\u7684Ruby\u5957\u4ef6\u8207\u8a2d\u5b9aoctopress\n\ngem install bundler\nbundle install\nrake install\n\u5230\u9019\u908a\u6211\u5011\u7d42\u65bc\u8e0f\u9032\u4e86\u516b\u5947\u601d\u8003\u9818\u57df\u7684\u7b2c\u4e00\u6b65 Orz ... (\u6211\u597d\u4e45\u6c92\u6709\u770b\u706b\u9cf3\u4e86)\n\n\nDeploy\u5230GitHub\u4e0a\u9762\nOctopress\u7684\u5b98\u7db2\u6709\u63d0\u4f9b Github Pages\u3001Heroku \u8207 Rsync \u7684\u4e0a\u50b3\u6559\u5b78\u3002Heroku\u9084\u883b\u591a\u4eba\u4f7f\u7528\u7684\uff0c\u5728\u7db2\u8def\u4e0a\u4e5f\u53ef\u4ee5\u627e\u5230\u4e0d\u5c11\u6559\u5b78\u3002\n\u4f46\u662f\u6211\u9084\u662f\u5c0dGithub\u6bd4\u8f03\u719f\u6089\uff0c\u6240\u4ee5\u9019\u908a\u53ea\u5217\u51faGithub\u7684\u8a2d\u5b9a\u65b9\u5f0f\nGithub Pages\u7684\u529f\u80fd\u8001\u5be6\u8aaa\u6211\u4e5f\u662f\u56e0\u70ba\u770b\u5230Octopress\u624d\u77e5\u9053\u7684\uff0c\u6240\u4ee5\u4e0d\u6e05\u695a\u4ed6\u80fd\u505a\u5565\uff0c\u53cd\u6b63\u4ed6\u53ef\u4ee5\u653e\u7db2\u9801\u5c31\u662f\u4e86(\u5927\u8aa4)\u3002\n\u9996\u5148\u8acb\u5148\u5728Github\u4e0a\u9762\u958b\u555f\u4e00\u500bRepository\uff0cRepository\u7684\u540d\u7a31\u683c\u5f0f\u70ba\uff1a\n\n\u5e33\u865f\u540d\u7a31.github.com\n\u4f8b\u5982\u6211\u7684id\u662fswind\uff0c\u6240\u4ee5\u540d\u7a31\u5c31\u5982\u4f60\u73fe\u5728\u7db2\u5740\u5217\u6240\u770b\u5230\u7684\u70ba\n\nswind.github.com\n\u63a5\u8457\u5462\u8981\u8ddfOctopress\u8aaa\u4f60\u7684Repository\u7684\u8def\u5f91\uff0c\u9032\u5165Octopress\u7684\u8cc7\u6599\u593e\uff0c\u8f38\u5165\u4e0b\u9762\u7684\u6307\u4ee4\n\nrake setup_github_pages\nOctopress\u6703\u8981\u4f60\u8f38\u5165Repository\u7684\u8def\u5f91\uff0c\u9019\u6642\u8acb\u5c07Github\u4e0a\u9762SSH\u7684\u8def\u5f91\u8907\u88fd\u4e0b\u4f86\u8cbc\u4e0a\uff0c\u4f8b\u5982\u6211\u7684\u5c31\u662f\n\ngit@github.com:Swind/swind.github.com.git\n\u5b8c\u6210\u4e4b\u5f8c\u4f60\u5c31\u53ef\u4ee5\u8f38\u5165\n\nrake generate\nrake deploy\n\u4f86\u6e2c\u8a66\u662f\u5426\u53ef\u4ee5\u6b63\u5e38deploy\u4e86\u3002\nP.S\u5982\u679c\u662f\u4f7f\u7528Windows\u7684\u670b\u53cb\uff0c\u7136\u5f8c\u4f60\u7684\u6587\u7ae0\u6a94\u6848\u53c8\u662f\u4f7f\u7528UTF-8\u5b58\u6a94\u7684\u8a71\uff0c\u61c9\u8a72\u6703\u5728rake generate\u7684\u6307\u4ee4\u4e0a\u9047\u5230\u7de8\u78bc\u554f\u984c\u3002\u9019\u662fJekyll\u7684\u554f\u984c\uff0c\u53ef\u4ee5\u900f\u904e\u8a2d\u5b9a\u74b0\u5883\u8b8a\u6578\u4f86\u89e3\u6c7a\u3002\n\u5728\u57f7\u884crake generate\u7684\u6307\u4ee4\u4e4b\u524d\u5148\u8f38\u5165:\n\nset LC_ALL=zh_TW.UTF-8\nset LANG=zh_TW.UTF-8\n\n\n\u540c\u5834\u52a0\u6620-\u540c\u6b65\u8207\u7248\u672c\u63a7\u7ba1\u7684\u65b9\u5f0f\nGithub Pages \u4e0a\u6559\u5b78\u7684\u6700\u5f8c\u6709\u6559\u4f60\u4f7f\u7528Git\u7684Branch\u4f86\u5c07Octopress\u7684\u539f\u59cb\u78bc\u4ee5\u53caBlog\u7684\u9801\u9762\u540c\u6642\u5132\u5b58\u5728\u540c\u4e00\u500bRepository\u4e0a\uff0c\u6211\u6709\u9019\u6a23\u7528\uff0c\u800c\u4e14\u9084\u883b\u6709\u8da3\u7684\u3002\nOctopress\u6703\u5c07_deploy\u8cc7\u6599\u593e\u4e2d\u7684\u6a94\u6848Push\u5230\u4e3b\u5206\u652f\uff0c\u4e5f\u5c31\u662fMaster\u3002\u800c\u4f60\u53ef\u4ee5\u900f\u904e\u5728Octopress\u7684\u8cc7\u6599\u593e\u4e2d\u8f38\u5165\n\ngit add .\ngit commit -m 'your message'\ngit push origin source\n\u9019\u6a23\u5c31\u6703\u5c07Octopress\u7684\u539f\u59cb\u78bcCommit\u5230source\u7684\u5206\u652f\u4e0a\u9762\uff0c\u800c\u4e0d\u6703\u5f71\u97ff\u5230Blog\u7684\u5167\u5bb9\u3002\u4f46\u662f\u9019\u6a23\u6211\u5728\u5176\u4ed6\u96fb\u8166\u8981\u4f7f\u7528\u7684\u6642\u5019\u90fd\u9084\u8981clone\u5169\u6b21(Octopress\u4e00\u6b21\uff0c_deploy\u4e00\u6b21)\u5be6\u5728\u5f88\u9ebb\u7169\u3002\n\u6240\u4ee5\u6211\u6700\u5f8c\u9084\u662f\u4f7f\u7528Dropbox\u4f86\u9032\u884c\u540c\u6b65\uff0c\u6211\u4e7e\u8106\u5c31\u5c07\u6574\u500bOctopress\u653e\u5728Dropbox\u88e1\u9762\uff0c\u9019\u6a23\u4e0d\u7ba1\u6211Linux\u6216Windows\u90fd\u53ef\u4ee5\u96a8\u6642\u7de8\u8f2f\u6211\u7684\u6587\u7ae0\u3002\n\u4ee5\u4e0a\u5fc3\u5f97\u5206\u4eab\u5b8c\u7562\uff0c\u90a3\u500b\u67d0\u4eba\u4e0d\u8981\u518d\u4f86\u627e\u6211\u8981\u5fc3\u5f97\u4e86\u963f XD", 
      "tags": "Octopress", 
      "loc": "/posts/octopress-note.html", 
      "title": "Octopress\u5b89\u88dd\u7b46\u8a18 - \u6211\u8df3\u69fd\u5230 Pelican \u4e86 - \u53c8\u8df3\u5230 Nikola \u4e86"
    }
  ]
}