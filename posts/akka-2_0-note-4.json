{"THEME_REVEAL_CONGIF_TRANSITION": "cube", "message_Previous post": "Previous post", "LICENSE": "\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/2.5/ar/\">\n<img alt=\"Creative Commons License BY-NC-SA\"\nstyle=\"border-width:0; margin-bottom:12px;\"\nsrc=\"http://i.creativecommons.org/l/by-nc-sa/2.5/ar/88x31.png\"></a>", "text": "<html><body><p>\u9019\u6574\u7bc7\u7684\u539f\u56e0\u8d77\u65bc\uff0c\u6d17\u6fa1\u7684\u6642\u5019\u60f3\u5230\u7684\uff0c\nAkka \u7684 Future \u5230\u5e95\u6709\u6c92\u6709\u5b58\u5728\u7684\u610f\u7fa9\u5462\uff1f</p>\n<p>\u56e0\u70ba\u7576\u4e00\u500b Actor \u7528 reply \u6216\u8005 sender \u56de\u50b3\u7d50\u679c\u7684\u6642\u5019\uff0c\u5176\u5be6\u53ef\u4ee5\u518d receive \u4e0d\u540c\u7684\u578b\u614b\u7684 Message \u5c31\u597d\u4e86\u3002\n\u800c\u4e14\u9019\u6a23\u9084\u4e0d\u6703\u56e0\u70ba Await \u800c\u9700\u8981 block thread\uff0c\u6e1b\u5c11 dead lock \u7684\u767c\u751f\u3002\n\u6211\u4e4b\u524d\u5c31\u5e79\u904e\u5f88\u8822\u7684\u4e8b\u60c5\uff0c\u56e0\u70ba Actor \u628a Thread Pool \u88e1\u9762\u7684 Thread \u7528\u5149\u4e86\uff0c\u6240\u4ee5\u4ed6\u5e95\u4e0b\u5e6b\u4ed6\u5de5\u4f5c\u7684 Actor \u5c31\u53d6\u4e0d\u5230 Thread \u53ef\u4ee5\u57f7\u884c\uff0c\n\u56e0\u6b64\u5168\u90e8 Timeout Orz ...</p>\n<p>\u76ee\u524d\u552f\u4e00\u80fd\u60f3\u5230\u7684\u7528\u6cd5\u5c31\u662f\u5728\u767c\u51fa\u8a0a\u606f\u7684\u5730\u65b9\u4e0d\u662f\u4e00\u500b Actor \u7684\u6642\u5019\uff0c\u9019\u6642\u5019\u5c31\u6c92\u6709 receive \u53ef\u4ee5\u63a5\u6536\u7d50\u679c\u4e86\u3002\n\u6240\u4ee5\u9700\u8981\u4f7f\u7528 Future \u4f86\u7b49\u5f85\u7d50\u679c\uff0c\u4e5f\u5c31\u662f Future \u61c9\u8a72\u53ea\u88ab\u7528\u5728\u9700\u8981\u7b49\u5f85\u7684\u6642\u5019\uff0c\u5982\u679c\u662f\u5728\u4e00\u500b Actor \u88ab\u57f7\u884c\u7684\u6642\u5019\u4f7f\u7528 Future\u3002\n\u5f88\u5bb9\u6613\u6d6a\u8cbb\u6389\u4e00\u500b Thread\uff0c\u61c9\u8a72\u662f\u8981\u53e6\u5916\u958b\u4e00\u500b\u65b0\u7684 case class \u4f86\u5c08\u9580\u8655\u7406\u7d50\u679c\u624d\u662f\u3002</p>\n<p>\u4f46\u662f\u9019\u908a\u53c8\u51fa\u73fe\u4e86\u4e00\u500b\u66f4\u8907\u96dc\u7684\u554f\u984c\u4e86\uff0c\u56e0\u70ba\u6211\u5c07\u5de5\u4f5c\u5206\u7d66\u4e0d\u540c\u7684 Actor \u53bb\u57f7\u884c\uff0c\u5fc5\u9808\u8981\u7b49\u5230\u6240\u6709 Actor \u90fd\u57f7\u884c\u5b8c\u7562\uff0c\u6574\u5408\u6240\u6709\u7684\u7d50\u679c\u3002\n\u90a3\u9ebc\u5982\u679c\u662f\u7528 receive \u6211\u8981\u600e\u6a23\u624d\u80fd\u77e5\u9053\u6211\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u5df2\u7d93\u5b8c\u6210\u4e86\u5462\uff1f</p>\n<p>\u7c21\u55ae\u4f86\u8aaa\uff0c\u6211\u5c31\u662f\u9700\u8981\u5be6\u505a\u4e00\u500b  <a class=\"reference external\" href=\"http://www.eaipatterns.com/BroadcastAggregate.html\">Scatter-Gather</a> \uff0c\u624d\u6703\u83ab\u540d\u5176\u5999\u7684\u770b\u5230 Akka \u7684 Dataflow\u3002</p>\n<!-- TEASER_END -->\n<div class=\"section\" id=\"akka-dataflow\">\n<h2>Akka Dataflow</h2>\n<p>\u8d77\u56e0\u5728\u65bc\u6211\u7528 Scatter-Gather \u8207 Akka \u641c\u5c0b\u6587\u7ae0\u7684\u6642\u5019\u627e\u5230\u9019\u7bc7 <a class=\"reference external\" href=\"http://blog.vasilrem.com/scatter-gather-with-akka-dataflow\">Scatter-Gather with Akka Dataflow</a> \u3002\n\u4e00\u770b\u88e1\u9762\u7684 Code \u771f\u662f\u9a5a\u70ba\u5929\u4eba\uff0c\u6211\u4e00\u884c\u90fd\u770b\u4e0d\u61c2 Orz ...</p>\n<p>\u7136\u5f8c Akka  <a class=\"reference external\" href=\"http://doc.akka.io/docs/akka/2.0/scala/dataflow.html\">Dataflow Concurrency</a> \u7684\u5167\u5bb9\u53c8\u975e\u5e38\u7684\u7cbe\u7c21 Orz\uff0c\u800c\u4e14\u4ed6\u53c8\u7528\u5230\u4e86 <a class=\"reference external\" href=\"http://www.scala-lang.org/node/2096\">Scala Continuations</a> \uff0c\n\u9019\u6771\u897f\u7684\u6587\u4ef6\u4e5f\u975e\u5e38\u7684 Orz\uff0c\u9023 Programming in Scala 2nd \u90fd\u6c92\u6709\u63d0\u5230\u9019\u500b\u6771\u897f\uff0c\u8b93\u6211\u5b8c\u5168\u653e\u68c4\u9019\u500b\u6771\u897f Orz ..</p>\n<p>\u4f46\u662f\u627e\u5230\u90fd\u627e\u5230\u4e86\uff0c\u6211\u60f3\u5be6\u505a\u500b\u6a19\u672c\u51fa\u4f86\u4e5f\u4e0d\u932f\uff0c\u6240\u4ee5\u624d\u6703\u6709\u9019\u7bc7\u6771\u897f\u3002</p>\n<p>\u4e0b\u9762\u9019\u500b\u7248\u672c\u6539\u81ea\u4e0a\u9762\u6240\u63d0\u5230\u7684 <a class=\"reference external\" href=\"http://blog.vasilrem.com/scatter-gather-with-akka-dataflow\">Scatter-Gather with Akka Dataflow</a></p>\n<p>\u56e0\u70ba\u90a3\u500b Blog \u7684\u7bc4\u4f8b\u6211\u4f30\u8a08\u4f86\u81ea\u65bc Akka 1.3.1 \u4e4b\u524d\u7684\u7248\u672c\uff0c\u6240\u4ee5\u6211\u505a\u4e86\u4e00\u4e9b\u66f4\u52d5\u624d\u80fd\u5728 Akka 2.0 \u4e0a\u9762\u8dd1\u3002</p>\n<p>\u5f88\u5e78\u904b\u6216\u8005\u662f\u5f88\u4e0d\u5e78\u7684\u662f Dataflow \u7684\u90e8\u4efd\u5247\u662f\u5f9e Akka 1.x \u5c31\u6c92\u6709\u8b8a\u52d5\u904e\u4e86\uff0c\u6240\u4ee5\u57fa\u672c\u908f\u8f2f\u90fd\u6c92\u6709\u6539\u8b8a\u3002</p>\n<pre class=\"code scala literal-block\">\n<span class=\"k\">import</span> <span class=\"nn\">scala.util.continuations._</span>\n\n<span class=\"k\">import</span> <span class=\"nn\">akka.actor.Actor</span>\n<span class=\"k\">import</span> <span class=\"nn\">akka.actor.ActorRef</span>\n<span class=\"k\">import</span> <span class=\"nn\">akka.actor.ActorSystem</span>\n<span class=\"k\">import</span> <span class=\"nn\">akka.actor.Props</span>\n<span class=\"k\">import</span> <span class=\"nn\">akka.dispatch.Future.flow</span>\n<span class=\"k\">import</span> <span class=\"nn\">akka.dispatch._</span>\n<span class=\"k\">import</span> <span class=\"nn\">akka.pattern.ask</span>\n<span class=\"k\">import</span> <span class=\"nn\">akka.util.duration._</span>\n<span class=\"k\">import</span> <span class=\"nn\">akka.util.Timeout</span>\n\n<span class=\"k\">object</span> <span class=\"nc\">ScatterGatherDataFlow</span> <span class=\"o\">{</span>\n  <span class=\"k\">def</span> <span class=\"n\">main</span><span class=\"o\">(</span><span class=\"n\">args</span><span class=\"k\">:</span> <span class=\"kt\">Array</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">])</span> <span class=\"o\">{</span>\n    <span class=\"k\">implicit</span> <span class=\"k\">val</span> <span class=\"n\">timeout</span> <span class=\"k\">=</span> <span class=\"nc\">Timeout</span><span class=\"o\">(</span><span class=\"mi\">10</span> <span class=\"n\">seconds</span><span class=\"o\">)</span>\n    <span class=\"k\">val</span> <span class=\"n\">system</span> <span class=\"k\">=</span> <span class=\"nc\">ActorSystem</span><span class=\"o\">()</span>\n    <span class=\"k\">val</span> <span class=\"n\">recipients</span> <span class=\"k\">=</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"n\">to</span> <span class=\"mi\">5</span><span class=\"o\">).</span><span class=\"n\">map</span><span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"k\">=&gt;</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">actorOf</span><span class=\"o\">(</span><span class=\"nc\">Props</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"nc\">Recipient</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">))))</span>\n    <span class=\"k\">val</span> <span class=\"n\">aggregator</span> <span class=\"k\">=</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">actorOf</span><span class=\"o\">(</span><span class=\"nc\">Props</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"nc\">Aggregator</span><span class=\"o\">(</span><span class=\"n\">recipients</span><span class=\"o\">)))</span>\n    <span class=\"k\">val</span> <span class=\"n\">results1</span> <span class=\"k\">=</span> <span class=\"nc\">Await</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"o\">(</span><span class=\"n\">aggregator</span> <span class=\"o\">?</span> <span class=\"nc\">Message</span><span class=\"o\">(</span><span class=\"s\">\"Hello\"</span><span class=\"o\">),</span> <span class=\"n\">timeout</span><span class=\"o\">.</span><span class=\"n\">duration</span><span class=\"o\">)</span>\n    <span class=\"k\">val</span> <span class=\"n\">results2</span> <span class=\"k\">=</span> <span class=\"nc\">Await</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"o\">(</span><span class=\"n\">aggregator</span> <span class=\"o\">?</span> <span class=\"nc\">Message</span><span class=\"o\">(</span><span class=\"s\">\"World\"</span><span class=\"o\">),</span> <span class=\"n\">timeout</span><span class=\"o\">.</span><span class=\"n\">duration</span><span class=\"o\">)</span>\n\n    <span class=\"n\">results1</span><span class=\"o\">.</span><span class=\"n\">asInstanceOf</span><span class=\"o\">[</span><span class=\"kt\">Future</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]]</span> <span class=\"n\">map</span> <span class=\"o\">{</span> <span class=\"n\">res</span> <span class=\"k\">=&gt;</span>\n      <span class=\"n\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result: %s\"</span> <span class=\"n\">format</span> <span class=\"o\">(</span><span class=\"n\">res</span><span class=\"o\">))</span>\n    <span class=\"o\">}</span>\n    <span class=\"n\">results2</span><span class=\"o\">.</span><span class=\"n\">asInstanceOf</span><span class=\"o\">[</span><span class=\"kt\">Future</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]]</span> <span class=\"n\">map</span> <span class=\"o\">{</span> <span class=\"n\">res</span> <span class=\"k\">=&gt;</span>\n      <span class=\"n\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result: %s\"</span> <span class=\"n\">format</span> <span class=\"o\">(</span><span class=\"n\">res</span><span class=\"o\">))</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">awaitTermination</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Aggregator</span><span class=\"o\">(</span><span class=\"n\">recipients</span><span class=\"k\">:</span> <span class=\"kt\">Iterable</span><span class=\"o\">[</span><span class=\"kt\">ActorRef</span><span class=\"o\">])</span> <span class=\"k\">extends</span> <span class=\"nc\">Actor</span> <span class=\"o\">{</span>\n\n  <span class=\"k\">implicit</span> <span class=\"k\">val</span> <span class=\"n\">defaultDispatcher</span> <span class=\"k\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">dispatcher</span>\n  <span class=\"k\">implicit</span> <span class=\"k\">val</span> <span class=\"n\">timeout</span> <span class=\"k\">=</span> <span class=\"nc\">Timeout</span><span class=\"o\">(</span><span class=\"mi\">10</span> <span class=\"n\">seconds</span><span class=\"o\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">receive</span> <span class=\"k\">=</span> <span class=\"o\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">msg</span> <span class=\"k\">@</span> <span class=\"nc\">Message</span><span class=\"o\">(</span><span class=\"n\">text</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n      <span class=\"n\">println</span><span class=\"o\">(</span><span class=\"s\">\"Started processing message `%s`\"</span> <span class=\"n\">format</span> <span class=\"o\">(</span><span class=\"n\">text</span><span class=\"o\">))</span>\n\n      <span class=\"k\">val</span> <span class=\"n\">result</span> <span class=\"k\">=</span> <span class=\"nc\">Promise</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]()</span>\n      <span class=\"k\">val</span> <span class=\"n\">promises</span> <span class=\"k\">=</span> <span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"o\">(</span><span class=\"n\">recipients</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"o\">)(</span><span class=\"nc\">Promise</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]())</span>\n\n      <span class=\"n\">recipients</span><span class=\"o\">.</span><span class=\"n\">zip</span><span class=\"o\">(</span><span class=\"n\">promises</span><span class=\"o\">).</span><span class=\"n\">map</span> <span class=\"o\">{</span>\n        <span class=\"k\">case</span> <span class=\"o\">(</span><span class=\"n\">recipient</span><span class=\"o\">,</span> <span class=\"n\">promise</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n          <span class=\"o\">(</span><span class=\"n\">recipient</span> <span class=\"o\">?</span> <span class=\"n\">msg</span><span class=\"o\">).</span><span class=\"n\">mapTo</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"n\">map</span> <span class=\"o\">{</span> <span class=\"n\">result</span><span class=\"k\">:</span> <span class=\"kt\">String</span> <span class=\"o\">=&gt;</span>\n            <span class=\"n\">println</span><span class=\"o\">(</span><span class=\"s\">\"Binding recipient's response: %s\"</span> <span class=\"n\">format</span> <span class=\"o\">(</span><span class=\"n\">result</span><span class=\"o\">))</span>\n            <span class=\"n\">flow</span> <span class=\"o\">{</span>\n              <span class=\"n\">promise</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">result</span>\n            <span class=\"o\">}</span>\n          <span class=\"o\">}</span>\n      <span class=\"o\">}</span>\n\n      <span class=\"n\">flow</span> <span class=\"o\">{</span>\n          <span class=\"k\">def</span> <span class=\"n\">gather</span><span class=\"o\">(</span><span class=\"n\">promises</span><span class=\"k\">:</span> <span class=\"kt\">List</span><span class=\"o\">[</span><span class=\"kt\">Future</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]],</span> <span class=\"n\">result</span><span class=\"k\">:</span> <span class=\"kt\">String</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">String</span> <span class=\"kt\">@cps</span><span class=\"o\">[</span><span class=\"kt\">Future</span><span class=\"o\">[</span><span class=\"kt\">Any</span><span class=\"o\">]]</span> <span class=\"k\">=</span>\n            <span class=\"n\">promises</span> <span class=\"k\">match</span> <span class=\"o\">{</span>\n              <span class=\"k\">case</span> <span class=\"n\">head</span> <span class=\"o\">::</span> <span class=\"n\">tail</span> <span class=\"k\">=&gt;</span> <span class=\"n\">gather</span><span class=\"o\">(</span><span class=\"n\">tail</span><span class=\"o\">,</span> <span class=\"n\">head</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"n\">result</span><span class=\"o\">)</span>\n              <span class=\"k\">case</span> <span class=\"nc\">Nil</span>          <span class=\"k\">=&gt;</span> <span class=\"n\">result</span>\n            <span class=\"o\">}</span>\n\n        <span class=\"n\">println</span><span class=\"o\">(</span><span class=\"s\">\"Binding result...\"</span><span class=\"o\">)</span>\n        <span class=\"n\">result</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">gather</span><span class=\"o\">(</span><span class=\"n\">promises</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n\n      <span class=\"n\">sender</span> <span class=\"o\">!</span> <span class=\"n\">result</span>\n  <span class=\"o\">}</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Recipient</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"k\">:</span> <span class=\"kt\">Int</span><span class=\"o\">)</span> <span class=\"k\">extends</span> <span class=\"nc\">Actor</span> <span class=\"o\">{</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">receive</span> <span class=\"k\">=</span> <span class=\"o\">{</span>\n    <span class=\"k\">case</span> <span class=\"nc\">Message</span><span class=\"o\">(</span><span class=\"n\">msg</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n      <span class=\"nc\">Thread</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"o\">(</span><span class=\"mi\">1000</span><span class=\"o\">)</span>\n      <span class=\"n\">sender</span> <span class=\"o\">!</span> <span class=\"o\">(</span><span class=\"s\">\"%s, [%s]! \"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"o\">(</span><span class=\"n\">msg</span><span class=\"o\">,</span> <span class=\"n\">id</span><span class=\"o\">))</span>\n  <span class=\"o\">}</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"k\">case</span> <span class=\"k\">class</span> <span class=\"nc\">Message</span><span class=\"o\">(</span><span class=\"n\">text</span><span class=\"k\">:</span> <span class=\"kt\">String</span><span class=\"o\">)</span>\n</pre>\n<p>\u9644\u4e0a\u57f7\u884c\u7d50\u679c</p>\n<!-- code-block\n\nStarted processing message `Hello`\nStarted processing message `World`\nBinding result...\nBinding result...\nBinding recipient's response: Hello, [1]!\nBinding recipient's response: Hello, [2]!\nBinding recipient's response: Hello, [3]!\nBinding recipient's response: Hello, [4]!\nBinding recipient's response: Hello, [5]!\nResult: Hello, [5]! Hello, [4]! Hello, [3]! Hello, [2]! Hello, [1]!\nBinding recipient's response: World, [2]!\nBinding recipient's response: World, [1]!\nBinding recipient's response: World, [3]!\nBinding recipient's response: World, [4]!\nBinding recipient's response: World, [5]!\nResult: World, [5]! World, [4]! World, [3]! World, [2]! World, [1]! -->\n<p>\u6211\u76ee\u524d\u53ea\u6709\u505a\u5230\u5c07\u9019\u6bb5\u7a0b\u5f0f\u78bc\u4fee\u6539\u5230\u53ef\u4ee5\u52d5\u800c\u5df2\uff0c\u5be6\u969b\u6574\u500b\u904b\u4f5c\u6d41\u7a0b\u8207\u5927\u6982\u9084\u4e0d\u662f\u5b8c\u5168\u4e86\u89e3\u3002</p>\n<p>\u4e00\u65b9\u9762\u662f\u56e0\u70ba\u6709\u95dc\u65bc Dataflow \u7684\u8cc7\u6599\u592a\u5c11\uff0c\u4e8c\u4f86\u662f Scala Continuations \u7684\u8cc7\u6599\u4e5f\u5f88\u5c11 Orz \u3002\n\u4e26\u4e14\u9019\u500b\u529f\u80fd\u6211\u89ba\u5f97\u4e0d\u592a\u597d Debug \uff0c\u95b1\u8b80\u4e0a\u4e5f\u6709\u9ede\u4e0d\u7fd2\u6163\uff0c\u56e0\u6b64\u4e0d\u6703\u63a1\u7528\u9019\u500b\u65b9\u5f0f\u3002\n\u6216\u8a31\u6709\u4e00\u5929\u6211\u4e86\u89e3\u4e86 Dataflow \u7684\u597d\u7684\u6642\u5019\u6211\u6703\u5728\u56de\u982d\u628a\u9019\u7a0b\u5f0f\u78bc\u7684\u8aaa\u660e\u88dc\u9f4a\u3002</p>\n</div>\n<div class=\"section\" id=\"eclipse-sbt\">\n<h2>Eclipse \u8207 Sbt \u7684\u8a2d\u5b9a</h2>\n<p>\u4e0a\u9762\u9019\u6bb5\u7a0b\u5f0f\u78bc\u7531\u65bc\u6709\u7528\u5230 <a class=\"reference external\" href=\"http://www.scala-lang.org/node/2096\">Scala Continuations</a>  \u6240\u4ee5 Eclipse \u6216\u8005 sbt \u9700\u8981\u4f5c\u4e00\u4e9b\u8a2d\u5b9a\uff0c\u8b93\u4ed6\u53ef\u4ee5\u4f7f\u7528 scala \u7684 continuations plugin\u3002</p>\n<p>Eclipse \u7684\u90e8\u4efd\u9700\u8981\u5728 Compiler Standard \u7684\u8a2d\u5b9a\u4e2d p \u7684\u90e8\u4efd\u589e\u52a0 <strong>continuations:enable</strong></p>\n<img alt=\"https://dl.dropbox.com/u/15537823/Blog/2012-06-12-akka-dataflow/ScalaEclipse_continuations.png\" src=\"https://dl.dropbox.com/u/15537823/Blog/2012-06-12-akka-dataflow/ScalaEclipse_continuations.png\">\n<p>\u5728 Compiler Advanced \u7684\u8a2d\u5b9a\u4e2d Xplugin \u589e\u52a0 <strong>libcontinuations.jar</strong></p>\n<img alt=\"https://dl.dropbox.com/u/15537823/Blog/2012-06-12-akka-dataflow/ScalaEclipse_continuations_2.png\" src=\"https://dl.dropbox.com/u/15537823/Blog/2012-06-12-akka-dataflow/ScalaEclipse_continuations_2.png\">\n<p>\u5982\u679c\u662f sbt \u7684\u8a71\u53ea\u8981\u589e\u52a0\u4e0b\u9762\u7684\u5167\u5bb9\u5230 <strong>build.sbt</strong> \u88e1\u9762\u5373\u53ef\u3002</p>\n<!-- code-block\n\nautoCompilerPlugins := true\n\nlibraryDependencies <+= scalaVersion { v => compilerPlugin(\"org.scala-lang.plugins\" % \"continuations\" % \"2.9.1\") }\n\nscalacOptions += \"-P:continuations:enable\" -->\n</div></body></html>", "ARCHIVE_FILENAME": "archive.html", "THEME_REVEAL_CONGIF_SUBTHEME": "sky", "message_Read more": "Read more", "SITE_URL": "http://swind.code-life.info", "LISTINGS_FOLDER": "listings", "INDEXES_PAGES": "", "next": "/posts/akka-2_0-note-5.json", "message_Next post": "Next post", "BLOG_DESCRIPTION": "I am Swind.", "EXTRA_HEAD_DATA": "", "DEFAULT_LANG": "en", "disqus_html": "<div id=\"disqus_thread\"></div> <script type=\"text/javascript\">var disqus_shortname=\"swindgithub\";var disqus_url=\"http://swind.code-life.info/posts/akka-2_0-note-4.html\";(function(){var a=document.createElement(\"script\");a.type=\"text/javascript\";a.async=true;a.src=\"http://\"+disqus_shortname+\".disqus.com/embed.js\";(document.getElementsByTagName(\"head\")[0]||document.getElementsByTagName(\"body\")[0]).appendChild(a)})();        </script><noscript>Please enable JavaScript to view the <a href=\"http://disqus.com/?ref_noscript\">comments powered by DISQUS.</a></noscript><a href=\"http://disqus.com\"class=\"dsq-brlink\">comments powered by <span class=\"logo-disqus\">DISQUS</span></a>", "RSS_PATH": "", "title": "Akka 2.0 \u7b46\u8a18(4) - Dataflow \u8acb\u4e0d\u8981\u671f\u5f85\u9019\u7bc7\u6211\u6703\u63d0\u5230\u4ec0\u9ebc", "SEARCH_FORM": "", "message_Tags": "Tags", "INDEX_PATH": "", "BLOG_AUTHOR": "Swind", "message_Older posts": "Older posts", "OUTPUT_FOLDER": "output", "message_Original site": "Original site", "ANALYTICS": "UA-15910682-2", "BLOG_EMAIL": "", "message_Posts for year %s": "Posts for year %s", "message_old posts page %d": "old posts page %d", "BLOG_TITLE": "Corleonis", "message_Posted": "Posted", "GALLERY_PATH": "galleries", "CODE_COLOR_SCHEME": "default", "message_Read in English": "Read in English", "CACHE_FOLDER": "cache", "tags": [{"link": "/categories/scala.html", "name": "Scala"}, {"link": "/categories/akka.html", "name": "Akka"}], "tags?": true, "__file__": "conf.pyc", "translations": [], "CONTENT_FOOTER": "Contents &copy; 2013 <a href=\"mailto:\">Swind</a> - Powered by <a href=\"http://nikola.ralsina.com.ar\">Nikola</a>", "BASE_URL": "http://swind.code-life.info", "THEME": "mySite", "message_Also available in": "Also available in", "BLOG_URL": "http://swind.code-life.info", "date": "2012-06-12 21:55", "__name__": "conf", "message_Posts about %s": "Posts about %s", "message_Posts for {month} {year}": "Posts for {month} {year}", "message_More posts about": "More posts about", "ARCHIVE_PATH": "", "DATE_FORMAT": "%Y-%m-%d %H:%M", "TAG_PATH": "categories", "prev": "/posts/akka-2_0-note-3.json", "message_Newer posts": "Newer posts", "message_LANGUAGE": "English", "MATHJAX_CONFIG": "", "message_Archive": "Archive", "message_Source": "Source", "DISQUS_FORUM": "swindgithub", "INDEXES_TITLE": ""}