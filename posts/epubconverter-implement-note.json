{"THEME_REVEAL_CONGIF_TRANSITION": "cube", "message_Previous post": "Previous post", "LICENSE": "\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/2.5/ar/\">\n<img alt=\"Creative Commons License BY-NC-SA\"\nstyle=\"border-width:0; margin-bottom:12px;\"\nsrc=\"http://i.creativecommons.org/l/by-nc-sa/2.5/ar/88x31.png\"></a>", "text": "<html><body><p>\u597d\u5427\uff0c\u6211\u8981\u958b\u59cb\u7b46\u8a18\u4e00\u4e0b\u9019\u6b21\u7684\u5be6\u4f5c\u5fc3\u5f97\u4e86</p>\n<p>\u5176\u5be6\u5728\u5b78 Scala \u7684\u9019\u4e00\u6bb5\u6642\u9593\u4e2d\uff0c\u6211\u6700\u56f0\u64fe\u7684\u5c31\u662f\u5230\u5e95\u600e\u6a23\u624d\u662f\u597d\u7684 Scala \u5beb\u4f5c\u98a8\u683c\u3002\n\u56e0\u70ba Scala \u6700\u5438\u5f15\u6211\u7684\u90e8\u4efd\u5c31\u662f\u5728\u65bc\u4ed6\u7684\u8a9e\u6cd5\u53ef\u4ee5\u4e0d\u65b7\u7684\u7cbe\u934a\u518d\u7cbe\u934a\uff0c\u6700\u5f8c\u8b8a\u6210*\u9b54\u6cd5\u6587\u5b57* Orz\u3002\n\u6240\u4ee5\u8981\u600e\u6a23\u5584\u7528 Scala \u7684\u8a9e\u8a00\u7279\u6027\uff0c\u537b\u53c8\u4e0d\u5931\u53ef\u8b80\u6027\uff0c\u6211\u89ba\u5f97\u771f\u7684\u5f88\u96e3\u3002\n\u56e0\u6b64\u5728\u9019\u6b21\u7684\u5c0f\u5de5\u5177\u5be6\u4f5c\u4e2d\uff0c\u6211\u8a66\u8457\u6478\u7d22 Curry \u7684\u7528\u6cd5\u3002</p>\n<!-- TEASER_END -->\n<div class=\"section\" id=\"curry\">\n<h2>Curry</h2>\n<p>\u8aaa\u5230\u6559\u5b78\u6587\u4ef6\uff0c\u5c31\u4e00\u5b9a\u8981\u63a8\u4e00\u4e0b <a class=\"reference external\" href=\"http://caterpillar.onlyfun.net/Gossip/Scala/index.html\">\u826f\u845b\u683c\u7684\u5b78\u7fd2\u7b46\u8a18</a> \u88e1\u9762\u4ed6\u6709\u63d0\u5230 <a class=\"reference external\" href=\"http://caterpillar.onlyfun.net/Gossip/Scala/Curry.html\">Curry</a>  \u7684\u8a9e\u6cd5\u8207\u4f55\u8b02 Curry \u3002\n\u4f46\u662f\u6211\u66f4\u559c\u6b61\u5728 jserv's blog <a class=\"reference external\" href=\"http://blog.linux.org.tw/~jserv/archives/002029.html\">\u4ee5 C \u8a9e\u8a00\u5be6\u505a Functional Language \u7684 Currying</a>  \u770b\u5230\u7684\u8aaa\u660e\u3002</p>\n<p>Curry \u53ef\u4ee5\u770b\u6210\u6578\u5b78\u7684\u591a\u9805\u5f0f\uff0c\u8209\u4f8b\u4f86\u8aaa\u73fe\u5728\u6709\u4e00\u500b\u591a\u9805\u5f0f</p>\n<blockquote>\nF(X,Y) = X + Y</blockquote>\n<p>\u90a3\u9ebc Curry \u7684\u611f\u89ba\u5c31\u662f\u6211\u73fe\u5728\u5df2\u77e5 X \u70ba 10 \u4e4b\u985e\u7684\uff0c\u7136\u5f8c\u5c07\u5176\u4ee3\u5165\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u591a\u9805\u5f0f\u53c8\u8b8a\u6210\u53e6\u5916\u4e00\u500b\u591a\u9805\u5f0f</p>\n<blockquote>\nF(Y) = 10 + Y</blockquote>\n<p>\u5982\u679c\u5c07\u9019\u6bb5\u7528 Scala \u4f86\u8868\u793a\u5c31\u662f</p>\n<pre class=\"code scala literal-block\">\n<span class=\"c1\">// \u9019\u662f F(X,Y)\n</span><span class=\"k\">def</span> <span class=\"n\">F</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"k\">:</span><span class=\"kt\">Int</span><span class=\"o\">)(</span><span class=\"n\">Y</span><span class=\"k\">:</span><span class=\"kt\">Int</span><span class=\"o\">)={</span>\n   <span class=\"n\">X</span> <span class=\"o\">+</span> <span class=\"n\">Y</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// \u5e36\u5165 X = 10\n</span>\n<span class=\"k\">val</span> <span class=\"n\">F1</span> <span class=\"k\">=</span> <span class=\"n\">F</span><span class=\"o\">(</span><span class=\"mi\">10</span><span class=\"o\">)</span>\n</pre>\n</div>\n<div class=\"section\" id=\"id1\">\n<h2>Curry \u7684\u4f7f\u7528\u6848\u4f8b</h2>\n<p>\u5728 jserv \u7684\u6587\u7ae0\u6709\u63d0\u5230\u4e00\u500b Ruby \u76ee\u9304\u6a39\u5c0b\u8a2a\u7684\u7bc4\u4f8b\uff0c\u525b\u597d\u6211\u5728\u9019\u6b21\u6709\u5be6\u4f5c\u985e\u4f3c\u7684\u6771\u897f\uff0c\u4f46\u662f\u529f\u529b\u4e0d\u8db3\u6c92\u6709\u8fa6\u6cd5\u5beb\u7684\u50cf Ruby \u90a3\u9ebc\u512a\u96c5\u3002</p>\n<pre class=\"code scala literal-block\">\n<span class=\"k\">def</span> <span class=\"n\">walkDir</span><span class=\"o\">(</span><span class=\"n\">fileList</span><span class=\"k\">:</span> <span class=\"kt\">List</span><span class=\"o\">[</span><span class=\"kt\">File</span><span class=\"o\">]</span> <span class=\"o\">{})(</span><span class=\"n\">expr</span><span class=\"k\">:</span> <span class=\"o\">(</span><span class=\"kt\">File</span><span class=\"o\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nc\">Unit</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Unit</span> <span class=\"o\">=</span> <span class=\"o\">{</span>\n    <span class=\"n\">fileList</span> <span class=\"k\">match</span> <span class=\"o\">{</span>\n      <span class=\"k\">case</span> <span class=\"n\">file</span> <span class=\"o\">::</span> <span class=\"n\">files</span> <span class=\"k\">=&gt;</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">isDirectory</span><span class=\"o\">)</span>\n          <span class=\"n\">walkDir</span><span class=\"o\">(</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">listFiles</span><span class=\"o\">.</span><span class=\"n\">toList</span> <span class=\"o\">:::</span> <span class=\"n\">files</span><span class=\"o\">)(</span><span class=\"n\">expr</span><span class=\"o\">)</span>\n        <span class=\"k\">else</span>\n        <span class=\"o\">{</span>\n          <span class=\"n\">expr</span><span class=\"o\">(</span><span class=\"n\">file</span><span class=\"o\">)</span>\n          <span class=\"n\">walkDir</span><span class=\"o\">(</span><span class=\"n\">files</span><span class=\"o\">)(</span><span class=\"n\">expr</span><span class=\"o\">)</span>\n        <span class=\"o\">}</span>\n      <span class=\"k\">case</span> <span class=\"k\">_</span> <span class=\"k\">=&gt;</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n</pre>\n<p>\u6211\u60f3\u9019\u6a23\u5beb\u6700\u5927\u7684\u554f\u984c\u61c9\u8a72\u662f\u6703\u5728</p>\n<pre class=\"code scala literal-block\">\n<span class=\"n\">walkDir</span><span class=\"o\">(</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">listFiles</span><span class=\"o\">.</span><span class=\"n\">toList</span> <span class=\"o\">:::</span> <span class=\"n\">files</span><span class=\"o\">)(</span><span class=\"n\">expr</span><span class=\"o\">)</span>\n</pre>\n<p>\u9019\u908a\u6bcf\u6b21\u90fd\u6703\u7522\u751f\u4e00\u500b\u65b0\u7684 List \uff0c\u9019\u662f\u512a\u9ede\u4e5f\u662f\u7f3a\u9ede\uff0c\u6548\u7387\u6211\u60f3\u53ef\u80fd\u6703\u5dee\u4e86\u4e00\u9ede\uff0c\u4f46\u662f\u6211\u4e0d\u5728\u610f\uff0c\u53cd\u6b63\u9019\u500b\u7a0b\u5f0f\u4e0d\u662f\u4e00\u79d2\u5e7e\u5341\u842c\u4e0a\u4e0b\u7684\u6771\u897f\u3002\n\u90a3\u9ebc\u9019\u500b\u6771\u897f\u53ef\u4ee5\u600e\u9ebc\u7528\u5462\uff1f</p>\n<p>\u4f8b\u5982\u8981\u5370\u51fa\u6240\u6709\u8cc7\u6599\u593e\u5e95\u4e0b\u7684\u6a94\u6848</p>\n<pre class=\"code scala literal-block\">\n<span class=\"n\">walkDir</span><span class=\"o\">(</span><span class=\"n\">folder</span><span class=\"o\">){</span><span class=\"n\">println</span><span class=\"o\">}</span>\n</pre>\n<p>\u522a\u9664\u5e95\u4e0b\u6240\u6709\u540d\u7a31\u5305\u542b test \u7684\u6a94\u6848</p>\n<pre class=\"code scala literal-block\">\n<span class=\"n\">walkDir</span><span class=\"o\">(</span><span class=\"n\">folder</span><span class=\"o\">){</span>\n   <span class=\"n\">file</span><span class=\"k\">=&gt;</span>\n      <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">getName</span><span class=\"o\">.</span><span class=\"n\">contains</span><span class=\"o\">(</span><span class=\"s\">\"test\"</span><span class=\"o\">))</span>\n         <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">delete</span>\n<span class=\"o\">}</span>\n</pre>\n<p>\u6211\u53e6\u5916\u4e00\u500b\u6709\u4f7f\u7528 Curry \u7684\u5730\u65b9</p>\n<pre class=\"code scala literal-block\">\n<span class=\"k\">def</span> <span class=\"nc\">InputToOutput</span><span class=\"o\">(</span><span class=\"n\">buffer</span><span class=\"k\">:</span> <span class=\"kt\">Array</span><span class=\"o\">[</span><span class=\"kt\">Byte</span><span class=\"o\">])(</span><span class=\"n\">fis</span><span class=\"k\">:</span> <span class=\"kt\">InputStream</span><span class=\"o\">,</span> <span class=\"n\">fos</span><span class=\"k\">:</span> <span class=\"kt\">OutputStream</span><span class=\"o\">)</span> <span class=\"k\">=</span>\n<span class=\"o\">{</span>\n   <span class=\"k\">def</span> <span class=\"n\">bufferReader</span><span class=\"o\">(</span><span class=\"n\">fis</span><span class=\"k\">:</span> <span class=\"kt\">InputStream</span><span class=\"o\">)(</span><span class=\"n\">buffer</span><span class=\"k\">:</span> <span class=\"kt\">Array</span><span class=\"o\">[</span><span class=\"kt\">Byte</span><span class=\"o\">])</span> <span class=\"k\">=</span> <span class=\"o\">(</span><span class=\"n\">fis</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">(</span><span class=\"n\">buffer</span><span class=\"o\">),</span> <span class=\"n\">buffer</span><span class=\"o\">)</span>\n\n   <span class=\"k\">def</span> <span class=\"n\">writeToOutputStream</span><span class=\"o\">(</span><span class=\"n\">reader</span><span class=\"k\">:</span> <span class=\"o\">(</span><span class=\"kt\">Array</span><span class=\"o\">[</span><span class=\"kt\">Byte</span><span class=\"o\">])</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Tuple2</span><span class=\"o\">[</span><span class=\"kt\">Int</span>, <span class=\"kt\">Array</span><span class=\"o\">[</span><span class=\"kt\">Byte</span><span class=\"o\">]],</span> <span class=\"n\">fos</span><span class=\"k\">:</span> <span class=\"kt\">OutputStream</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Boolean</span> <span class=\"o\">=</span> <span class=\"o\">{</span>\n     <span class=\"k\">val</span> <span class=\"o\">(</span><span class=\"n\">length</span><span class=\"o\">,</span> <span class=\"n\">data</span><span class=\"o\">)</span> <span class=\"k\">=</span> <span class=\"n\">reader</span><span class=\"o\">(</span><span class=\"n\">buffer</span><span class=\"o\">)</span>\n     <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">length</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n       <span class=\"n\">fos</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"o\">(</span><span class=\"n\">data</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">length</span><span class=\"o\">)</span>\n       <span class=\"n\">writeToOutputStream</span><span class=\"o\">(</span><span class=\"n\">reader</span><span class=\"o\">,</span> <span class=\"n\">fos</span><span class=\"o\">)</span>\n     <span class=\"o\">}</span> <span class=\"k\">else</span>\n       <span class=\"kc\">true</span>\n   <span class=\"o\">}</span>\n\n   <span class=\"n\">writeToOutputStream</span><span class=\"o\">(</span><span class=\"n\">bufferReader</span><span class=\"o\">(</span><span class=\"n\">fis</span><span class=\"o\">)</span><span class=\"k\">_</span><span class=\"o\">,</span> <span class=\"n\">fos</span><span class=\"o\">)</span>\n\n <span class=\"o\">(</span><span class=\"n\">fis</span><span class=\"o\">,</span> <span class=\"n\">fos</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n</pre>\n<p>\u9019\u500b function \u4e3b\u8981\u8ca0\u8cac\u5c07 InputStream \u7684\u8cc7\u6599\u5beb\u5230 OutputStream\u3002</p>\n<p>\u7b2c\u4e00\u500b Curry \u662f InputToOutput \u4ed6\u8b93\u6211\u53ef\u4ee5\u7528 InputToOutput(buffer)_ \u5efa\u7acb\u4e00\u500b\u5df2\u7d93\u5ba3\u544a\u597d buffer \u7684 IO \u64cd\u4f5c function\u3002\n\u9019\u6a23\u6211\u5c31\u4e0d\u7528\u6bcf\u6b21\u90fd\u9084\u8981\u627e\u4e00\u500b buffer \u624d\u53ef\u4ee5\u958b\u59cb\u6211\u7684 IO \u64cd\u4f5c\uff0c\u53cd\u6b63 buffer \u7684\u5167\u5bb9\u8b80\u5b8c\u5c31\u53ef\u4ee5\u4e1f\u4e86\uff0c\u4e0d\u904e\u9019\u500b\u6c92\u6709\u8003\u616e multiple thread \u7684\u60c5\u6cc1\u5c31\u662f\u3002</p>\n<p>\u7b2c\u4e8c\u500b Curry \u662f\u8b93 Read InputStream \u7684 function \u8ddf\u50b3\u9032\u4f86\u7684 InputStream \u7d81\u5b9a\uff0c\u9019\u55ae\u7d14\u53ea\u662f\u60f3\u7c21\u5316\u4e4b\u5f8c\u7684\u64cd\u4f5c\uff0c\u8b93\u6211\u53ef\u4ee5\u4e0d\u7528\u518d\u8003\u616e InputStream \u9019\u500b\u53c3\u6578\u3002\n\u53cd\u6b63\u6211\u53ea\u8981\u7d66\u4e00\u500b buffer \u4ed6\u5c31\u6703\u81ea\u52d5\u8b80\u9032\u4f86\uff0c\u4e26\u4e14\u56de\u50b3\u8b80\u53d6\u7684\u5927\u5c0f\u8207 buffer \u672c\u8eab\u3002</p>\n<p>\u89e3\u58d3\u7e2e\u7684\u90e8\u4efd\u4e5f\u7528\u4e86\u985e\u4f3c\u7684\u6280\u5de7</p>\n<pre class=\"code scala literal-block\">\n<span class=\"k\">def</span> <span class=\"n\">unzipAllFile</span><span class=\"o\">(</span><span class=\"n\">entryList</span><span class=\"k\">:</span> <span class=\"kt\">List</span><span class=\"o\">[</span><span class=\"kt\">ZipEntry</span><span class=\"o\">],</span> <span class=\"n\">getInputStream</span><span class=\"k\">:</span> <span class=\"o\">(</span><span class=\"kt\">ZipEntry</span><span class=\"o\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nc\">InputStream</span><span class=\"o\">,</span> <span class=\"n\">targetFolder</span><span class=\"k\">:</span> <span class=\"kt\">File</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Boolean</span> <span class=\"o\">=</span> <span class=\"o\">{</span>\n    <span class=\"n\">entryList</span> <span class=\"k\">match</span> <span class=\"o\">{</span>\n      <span class=\"k\">case</span> <span class=\"n\">entry</span> <span class=\"o\">::</span> <span class=\"n\">entries</span> <span class=\"k\">=&gt;</span>\n\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">isDirectory</span><span class=\"o\">)</span>\n          <span class=\"k\">new</span> <span class=\"nc\">File</span><span class=\"o\">(</span><span class=\"n\">targetFolder</span><span class=\"o\">,</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">getName</span><span class=\"o\">).</span><span class=\"n\">mkdirs</span>\n        <span class=\"k\">else</span>\n        <span class=\"o\">{</span>\n          <span class=\"k\">val</span> <span class=\"o\">(</span><span class=\"n\">input</span><span class=\"o\">,</span><span class=\"n\">output</span><span class=\"o\">)</span> <span class=\"k\">=</span> <span class=\"nc\">InputToOutput</span><span class=\"o\">(</span><span class=\"n\">getInputStream</span><span class=\"o\">(</span><span class=\"n\">entry</span><span class=\"o\">),</span> <span class=\"k\">new</span> <span class=\"nc\">FileOutputStream</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"nc\">File</span><span class=\"o\">(</span><span class=\"n\">targetFolder</span><span class=\"o\">,</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">getName</span><span class=\"o\">)))</span>\n\n          <span class=\"n\">input</span><span class=\"o\">.</span><span class=\"n\">close</span>\n          <span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">close</span>\n        <span class=\"o\">}</span>\n\n        <span class=\"n\">unzipAllFile</span><span class=\"o\">(</span><span class=\"n\">entries</span><span class=\"o\">,</span> <span class=\"n\">getInputStream</span><span class=\"o\">,</span> <span class=\"n\">targetFolder</span><span class=\"o\">)</span>\n\n      <span class=\"k\">case</span> <span class=\"k\">_</span> <span class=\"k\">=&gt;</span>\n        <span class=\"kc\">true</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre>\n<p>\u5927\u6982\u5c31\u9019\u4e9b\u4e86\uff0c\u7e3d\u89ba\u5f97\u7a0b\u5f0f\u9084\u662f\u5beb\u7684\u4e0d\u5920\u591a\uff0c\u9019\u4e9b Code \u61c9\u8a72\u53ef\u4ee5\u5beb\u7684\u518d\u66f4\u512a\u96c5\u4e00\u9ede\u624d\u662f\u3002</p>\n</div></body></html>", "ARCHIVE_FILENAME": "archive.html", "THEME_REVEAL_CONGIF_SUBTHEME": "sky", "message_Read more": "Read more", "SITE_URL": "http://swind.code-life.info", "LISTINGS_FOLDER": "listings", "INDEXES_PAGES": "", "next": "/posts/akka-2_0-note-1.json", "message_Next post": "Next post", "BLOG_DESCRIPTION": "I am Swind.", "EXTRA_HEAD_DATA": "", "DEFAULT_LANG": "en", "disqus_html": "<div id=\"disqus_thread\"></div> <script type=\"text/javascript\">var disqus_shortname=\"swindgithub\";var disqus_url=\"http://swind.code-life.info/posts/epubconverter-implement-note.html\";(function(){var a=document.createElement(\"script\");a.type=\"text/javascript\";a.async=true;a.src=\"http://\"+disqus_shortname+\".disqus.com/embed.js\";(document.getElementsByTagName(\"head\")[0]||document.getElementsByTagName(\"body\")[0]).appendChild(a)})();        </script><noscript>Please enable JavaScript to view the <a href=\"http://disqus.com/?ref_noscript\">comments powered by DISQUS.</a></noscript><a href=\"http://disqus.com\"class=\"dsq-brlink\">comments powered by <span class=\"logo-disqus\">DISQUS</span></a>", "RSS_PATH": "", "title": "\u5be6\u4f5c EPUBConverter \u7684\u7b46\u8a18", "SEARCH_FORM": "", "message_Tags": "Tags", "INDEX_PATH": "", "BLOG_AUTHOR": "Swind", "message_Older posts": "Older posts", "OUTPUT_FOLDER": "output", "message_Original site": "Original site", "ANALYTICS": "UA-15910682-2", "BLOG_EMAIL": "", "message_Posts for year %s": "Posts for year %s", "message_old posts page %d": "old posts page %d", "BLOG_TITLE": "Corleonis", "message_Posted": "Posted", "GALLERY_PATH": "galleries", "CODE_COLOR_SCHEME": "default", "message_Read in English": "Read in English", "CACHE_FOLDER": "cache", "tags": [{"link": "/categories/scala.html", "name": "Scala"}], "tags?": true, "__file__": "conf.pyc", "translations": [], "CONTENT_FOOTER": "Contents &copy; 2013 <a href=\"mailto:\">Swind</a> - Powered by <a href=\"http://nikola.ralsina.com.ar\">Nikola</a>", "BASE_URL": "http://swind.code-life.info", "THEME": "mySite", "message_Also available in": "Also available in", "BLOG_URL": "http://swind.code-life.info", "date": "2012-05-11 18:19", "__name__": "conf", "message_Posts about %s": "Posts about %s", "message_Posts for {month} {year}": "Posts for {month} {year}", "message_More posts about": "More posts about", "ARCHIVE_PATH": "", "DATE_FORMAT": "%Y-%m-%d %H:%M", "TAG_PATH": "categories", "prev": "/posts/epubconverter.json", "message_Newer posts": "Newer posts", "message_LANGUAGE": "English", "MATHJAX_CONFIG": "", "message_Archive": "Archive", "message_Source": "Source", "DISQUS_FORUM": "swindgithub", "INDEXES_TITLE": ""}