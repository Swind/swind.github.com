<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Corleonis (C/C++)</title><link>http://swind.code-life.info</link><description>I am Swind.</description><lastBuildDate>Sun, 25 Aug 2013 13:40:39 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>使用 Python 結合 C 在 Linux 發送 SCSI Command</title><link>http://swind.code-life.info/posts/send-scsi-command-from-python-on-linux.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;最近因為工作的需要，所以要撰寫很多 SCSI 相關的測試。
目前可以用的測試工具有 fio, iometer 以及一個自行開發的 SCSI Command 驗證的工具。
但是這些都是使用 C 撰寫的，所以要撰寫一些流程比較複雜的驗證時，就變得非常的麻煩。
絕對不是因為我想試試看 Python 或者是因為自行開發的驗證工具程式碼已經無法閱讀的原因，才想要重造輪子。&lt;/p&gt;
&lt;p&gt;Orz 而且我受夠了手動測試的生活了 ...&lt;/p&gt;
&lt;p&gt;所以想將測試運行的邏輯搬移到 Python 的部份，加速測試案例的開發速度。&lt;/p&gt;
&lt;p&gt;&lt;a href="/posts/send-scsi-command-from-python-on-linux.html"&gt;Read more...&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</description><guid>http://swind.code-life.info/posts/send-scsi-command-from-python-on-linux.html</guid><pubDate>Sat, 03 Aug 2013 10:38:06 GMT</pubDate></item><item><title>CMake - add_custom_command</title><link>http://swind.code-life.info/posts/cmake-add_custom_command.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;最近因為必須要示範如何將公司的 autoconf 與 automake 轉成 CMake，所以稍微研究了一下之前完全沒有用過得 &lt;a class="reference external" href="http://www.cmake.org/cmake/help/cmake2.6docs.html#command:add_custom_command"&gt;add_custom_command&lt;/a&gt; 跟 &lt;a class="reference external" href="http://www.cmake.org/cmake/help/cmake2.6docs.html#command:add_custom_target"&gt;add_custom_target&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="symbolic-link"&gt;
&lt;h2&gt;建立 symbolic link&lt;/h2&gt;
&lt;p&gt;目前有一個需求是要建立 symbolic link 在某些特定的資料夾裡面。
由於 autotools 是可以直接使用 script 的語法，所以建立起來非常簡單。&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
install-exec-hook:
     ln -fs &lt;span class="k"&gt;$(&lt;/span&gt;source_prefix&lt;span class="k"&gt;)&lt;/span&gt;/a &lt;span class="k"&gt;$(&lt;/span&gt;target_prefix&lt;span class="k"&gt;)&lt;/span&gt;/path1
     ln -fs &lt;span class="k"&gt;$(&lt;/span&gt;source_prefix&lt;span class="k"&gt;)&lt;/span&gt;/a &lt;span class="k"&gt;$(&lt;/span&gt;target_prefix&lt;span class="k"&gt;)&lt;/span&gt;/path2
     ln -fs &lt;span class="k"&gt;$(&lt;/span&gt;source_prefix&lt;span class="k"&gt;)&lt;/span&gt;/a &lt;span class="k"&gt;$(&lt;/span&gt;target_prefix&lt;span class="k"&gt;)&lt;/span&gt;/path3
     ln -fs &lt;span class="k"&gt;$(&lt;/span&gt;source_prefix&lt;span class="k"&gt;)&lt;/span&gt;/a &lt;span class="k"&gt;$(&lt;/span&gt;target_prefix&lt;span class="k"&gt;)&lt;/span&gt;/path4
     ln -fs &lt;span class="k"&gt;$(&lt;/span&gt;source_prefix&lt;span class="k"&gt;)&lt;/span&gt;/a &lt;span class="k"&gt;$(&lt;/span&gt;target_prefix&lt;span class="k"&gt;)&lt;/span&gt;/path5
&lt;/pre&gt;
&lt;p&gt;這樣只要直接呼叫 make install-exec-hook 就可以建立 symbolic link 了。
但是如果要在 CMake 裡面作到一樣的事情要怎麼處理呢？&lt;/p&gt;
&lt;pre class="code cmake literal-block"&gt;
&lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;targets&lt;/span&gt;
    &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target_prefix&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/path1&lt;/span&gt;
    &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target_prefix&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/path2&lt;/span&gt;
    &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target_prefix&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/path3&lt;/span&gt;
    &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target_prefix&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/path4&lt;/span&gt;
    &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target_prefix&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/path5&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;Create_symbolic_link&lt;/span&gt; &lt;span class="s"&gt;source&lt;/span&gt; &lt;span class="s"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;Add_custom_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;OUTPUT&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="s"&gt;COMMAND&lt;/span&gt; &lt;span class="s"&gt;ln&lt;/span&gt; &lt;span class="s"&gt;-fs&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;Endfunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;Foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;target&lt;/span&gt; &lt;span class="s"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="nb"&gt;Create_symbolic_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;source_prefix&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/a&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;target&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;Endforeach&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;Add_custom_target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;install-exec-hook&lt;/span&gt; &lt;span class="s"&gt;DEPENDS&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;因為 CMake 裡面沒有辦法像 shell script 一樣直接下指令，必須透過 Add_custom_command 或者是 Execute_process 等方式執行。
但是若又要跟 Target 建立相依性的話，似乎就一定得靠 Add_custom_command，因為他會設定一個 output file。
這樣就可以讓 Target 依賴這個檔案 ( 以我們的例子來說 Target 就是 install-exec-hook ) 來達到 make Target 就可以建立 symbolic link 的目的。&lt;/p&gt;
&lt;p&gt;閃死人不償命的組合 ...&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="https://dl.dropboxusercontent.com/u/15537823/Blog/banner-of-the-stars_2.jpg" src="https://dl.dropboxusercontent.com/u/15537823/Blog/banner-of-the-stars_2.jpg"&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;星たちよ&lt;/p&gt;
&lt;p&gt;汝の命短き眷族の望みを聞くがよい。&lt;/p&gt;
&lt;p&gt;我らの望みヽ&lt;/p&gt;
&lt;p&gt;それは&lt;/p&gt;
&lt;p&gt;汝の本降ちゆくを看取ること&lt;/p&gt;
&lt;/blockquote&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</description><guid>http://swind.code-life.info/posts/cmake-add_custom_command.html</guid><pubDate>Tue, 25 Jun 2013 19:20:46 GMT</pubDate></item></channel></rss>